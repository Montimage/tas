import { createReducer } from "redux-act";

import {
  uploadModelOK,
  uploadModel,
  requestModel,
  setModel,
  setNotification,
  requestLogFile,
  requestLogFileOK,
  requestAllModels,
  deleteModelOK,
  setAllModels,
  requestDuplicateModel,
  duplicateModelOK,
  requestDeleteModel,
  requestAddNewModel,
  addNewModelOK,
  requestUpdateModel,
  updateModelOK,
  requestDataStorage,
  requestUpdateDataStorage,
  setDataStorage,
  requestTestDataStorageConnection,
  setDataStorageConnectionStatus,
  requestAllDataRecorders,
  setAllDataRecorders,
  requestDeleteDataRecorder,
  deleteDataRecorderOK,
  requestDuplicateDataRecorder,
  duplicateDataRecorderOK,
  requestAddNewDataRecorder,
  addNewDataRecorderOK,
  requestUpdateDataRecorder,
  updateDataRecorderOK,
  requestDataRecorder,
  setDataRecorder,
  changeDataRecorderName,
  requestStartDataRecorder,
  requestDataRecorderStatus,
  setDataRecorderStatus,
  requestStopDataRecorder,
  requestStats,
  requestStatsOK,
  requestAllTestCampaigns,
  setAllTestCampaigns,
  requestDeleteTestCampaign,
  deleteTestCampaignOK,
  requestAddNewTestCampaign,
  addNewTestCampaignOK,
  requestTestCampaign,
  setCurrentTestCampaign,
  requestUpdateTestCampaign,
  updateTestCampaignOK,
  requestAllTestCases,
  setAllTestCases,
  requestTestCase,
  setCurrentTestCase,
  requestDeleteTestCase,
  deleteTestCaseOK,
  requestAddNewTestCase,
  addNewTestCaseOK,
  requestUpdateTestCase,
  updateTestCaseOK,
  requestAllDatasets,
  setAllDatasets,
  requestDataset,
  setCurrentDataset,
  requestDeleteDataset,
  deleteDatasetOK,
  requestAddNewDataset,
  addNewDatasetOK,
  requestUpdateDataset,
  updateDatasetOK,
  requestEventsByDatasetId,
  setEvents,
  requestDeleteEvent,
  deleteEventOK,
  requestAddNewEvent,
  addNewEventOK,
  requestUpdateEvent,
  updateEventOK,
  requestStartSimulation,
  requestStopSimulation,



  setSimulationStatus,
  requestDevops,
  setDevops,
  requestUpdateDevops,
  requestAllReports,
  setAllReports,
  requestReport,
  setCurrentReport,
  requestUpdateReport,
  updateReportOK,
  requestDeleteReport,
  deleteReportOK,
  requestOriginalEvents,
  setOriginalEvents,
  requestNewEvents,
  setNewEvents
} from "../actions";

const initState = false;

export default createReducer(
  {
    [uploadModel]: state => true,
    [requestModel]: state => true,
    [requestAllDataRecorders]: state => true,
    [setAllDataRecorders]: state => false,
    [requestDeleteDataRecorder]: state => true,
    [deleteDataRecorderOK]: state => false,
    [requestDuplicateDataRecorder]: state => true,
    [duplicateDataRecorderOK]: state => false,
    [requestAddNewDataRecorder]: state => true,
    [addNewDataRecorderOK]: state => false,
    [requestUpdateDataRecorder]: state => true,
    [updateDataRecorderOK]: state => false,
    [requestDataRecorder]: state => true,
    [setDataRecorder]: state => false,
    [changeDataRecorderName]: state => true,
    [requestStartDataRecorder]: state => true,
    [requestStopDataRecorder]: state => true,
    [requestDataRecorderStatus]: state => true,
    [setDataRecorderStatus]: state => false,
    [requestStats]: state => true,
    [requestStatsOK]: state => false,
    [requestDataStorage]: state => true,
    [setDataStorage]: state => false,
    [requestUpdateDataStorage]: state => true,
    [requestTestDataStorageConnection]: state => true,
    [setDataStorageConnectionStatus]: state => false,
    [setNotification]: state => false,
    [setModel]: state => false,
    [uploadModelOK]: state => false,
    [requestLogFile]: state => true,
    [requestLogFileOK]: state => false,
    [requestAllModels]: state => true,
    [setAllModels]: state => false,
    [requestDeleteModel]: state => true,
    [deleteModelOK]: state => false,
    [requestDuplicateModel]: state => true,
    [duplicateModelOK]: state => false,
    [requestAddNewModel]: state => true,
    [addNewModelOK]: state => false,
    [requestUpdateModel]: state => true,
    [updateModelOK]: state => false,
    [requestAllTestCampaigns]: state => true,
    [setAllTestCampaigns]: state => false,
    [requestDeleteTestCampaign]: state => true,
    [deleteTestCampaignOK]: state => false,
    [requestAddNewTestCampaign]: state => true,
    [addNewTestCampaignOK]: state => false,
    [requestTestCampaign]: state => true,
    [setCurrentTestCampaign]: state => false,
    [requestUpdateTestCampaign]: state => true,
    [updateTestCampaignOK]: state => false,
    [requestAllTestCases]: state => true,
    [setAllTestCases]: state => false,
    [requestTestCase]: state => true,
    [setCurrentTestCase]: state => false,
    [requestDeleteTestCase]: state => true,
    [deleteTestCaseOK]: state => false,
    [requestAddNewTestCase]: state => true,
    [addNewTestCaseOK]: state => false,
    [requestUpdateTestCase]: state => true,
    [updateTestCaseOK]: state => false,
    [requestAllDatasets]: state => true,
    [setAllDatasets]: state => false,
    [requestDataset]: state => true,
    [setCurrentDataset]: state => false,
    [requestDeleteDataset]: state => true,
    [deleteDatasetOK]: state => false,
    [requestAddNewDataset]: state => true,
    [addNewDatasetOK]: state => false,
    [requestUpdateDataset]: state => true,
    [updateDatasetOK]: state => false,
    [requestEventsByDatasetId]: state => true,
    [setEvents]: state => false,
    [requestDeleteEvent]: state => true,
    [deleteEventOK]: state => false,
    [requestAddNewEvent]: state => true,
    [addNewEventOK]: state => false,
    [requestUpdateEvent]: state => true,
    [updateEventOK]: state => false,
    [requestStartSimulation]: state => true,
    [requestStopSimulation]: state => true,
    // [requestSimulationStatus]: state => true,
    [setSimulationStatus]: state => false,
    [requestDevops]: state => true,
    [requestUpdateDevops]: state => true,
    [setDevops]: state => false,
    [requestAllReports]: state => true,
    [setAllReports]: state => false,
    [requestReport]: state => true,
    [setCurrentReport]: state => false,
    [requestUpdateReport]: state => true,
    [updateReportOK]: state => false,
    [requestDeleteReport]: state => true,
    [deleteReportOK]: state => false,
    [requestOriginalEvents]: state => true,
    [setOriginalEvents]: state => false,
    [requestNewEvents]: state => true,
    [setNewEvents]: state => false,
  },
  initState
);
