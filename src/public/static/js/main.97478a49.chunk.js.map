{"version":3,"sources":["VERSION.js","actions/index.js","utils.js","reducers/modelReducer.js","reducers/requestingReducer.js","reducers/notificationReducer.js","reducers/logsReducer.js","reducers/editingFormReducer.js","reducers/simulationStatusReducer.js","reducers/statsReducer.js","reducers/allModelsReducer.js","reducers/allDataRecordersReducer.js","reducers/dataRecorderReducer.js","reducers/dataRecorderStatusReducer.js","reducers/dataStorageReducer.js","reducers/testCampaignsReducer.js","reducers/devOptsReducer.js","reducers/testCasesReducer.js","reducers/datasetsReducer.js","reducers/index.js","api/index.js","sagas/requestModelSaga.js","sagas/uploadModelSaga.js","sagas/simulationSaga.js","sagas/requestLogsSaga.js","sagas/requestStatsSaga.js","sagas/requestDataRecorderSaga.js","sagas/dataStorageSaga.js","sagas/testCampaignsSaga.js","sagas/testCasesSaga.js","sagas/datasetsSaga.js","sagas/eventsSaga.js","sagas/devOptsSaga.js","sagas/index.js","store/index.js","components/TSHeader/TSHeader.js","components/TSHeader/index.js","components/TSFooter/TSFooter.js","components/TSFooter/index.js","components/TSModal/index.js","components/TSModal/TSModal.js","components/FormItems/FormTextItem.js","components/FormItems/FormTextAreaItem.js","components/FormItems/FormSelectItem.js","components/FormItems/FormNumberItem.js","components/FormItems/FormSwitchItem.js","components/FormItems/FormTimeRangeItem.js","components/FormItems/FormCheckBoxItems.js","components/FormItems/FormRegularNumberItem.js","components/FormItems/FormEditableTextItem.js","components/FormItems/FormTextNotEditableItem.js","components/ConnectionConfig/MongoDBOptions.js","components/CollapseForm/CollapseForm.js","components/CollapseForm/index.js","components/ConnectionConfig/index.js","components/ConnectionConfig/ConnectionConfig.js","components/SensorModal/DataSourceForms/DataSourceForm.js","components/SensorModal/DataSourceForms/EnergyForm.js","components/SensorModal/DataSourceForms/BooleanForm.js","components/SensorModal/DataSourceForms/EnumForm.js","components/SensorModal/DataSourceForms/IntegerFloatForm.js","components/SensorModal/DataSourceForms/MultipleDataSources.js","components/SensorModal/DataGeneratorForm.js","components/SensorModal/SensorModal.js","components/SensorModal/index.js","components/ActuatorModal/ActuatorModal.js","components/ActuatorModal/index.js","components/JSONView/Editor.jsx","components/JSONView/index.js","components/JSONView/JSONView.js","pages/LayoutPage.js","pages/ModelPage.js","pages/LogsPage.js","pages/LogFilePage.js","pages/DummyPage.js","pages/DataStoragePage.js","pages/TestCampaignListPage.js","pages/ModelListPage.js","pages/DataRecorderListPage.js","pages/DataRecorderPage.js","components/SelectionModal/SelectionModal.js","components/SelectionModal/index.js","pages/TestCampaignPage.js","pages/TestCaseListPage.js","pages/TestCasePage.js","pages/DatasetListPage.js","components/EventModal/EventModal.js","components/EventModal/index.js","pages/DatasetPage.js","pages/SimulationPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setNotification","createAction","resetNotification","requestAllModels","setAllModels","requestDeleteModel","requestDuplicateModel","deleteModelOK","duplicateModelOK","requestAddNewModel","addNewModelOK","requestUpdateModel","updateModelOK","requestModel","setModel","changeModelName","addThing","deleteThing","addSimulationSensor","addSimulationActuator","deleteSimulationSensor","deleteSimulationActuator","changeStatusSensor","changeStatusActuator","resetModel","uploadModel","uploadModelOK","requestAllDataRecorders","setAllDataRecorders","requestDeleteDataRecorder","requestDuplicateDataRecorder","deleteDataRecorderOK","duplicateDataRecorderOK","requestAddNewDataRecorder","addNewDataRecorderOK","requestUpdateDataRecorder","updateDataRecorderOK","requestDataRecorder","setDataRecorder","changeDataRecorderName","resetDataRecorder","requestStartDataRecorder","requestStopDataRecorder","requestDataRecorderStatus","setDataRecorderStatus","requestLogs","requestLogFiles","requestLogsOK","requestLogFilesOK","requestDeleteLogFile","showModal","selectDevice","changeStatusThing","selectSensor","selectActuator","requestStatsOK","requestDataStorage","requestUpdateDataStorage","setDataStorage","requestTestDataStorageConnection","setDataStorageConnectionStatus","requestAllTestCampaigns","setAllTestCampaigns","setCurrentTestCampaign","requestDeleteTestCampaign","deleteTestCampaignOK","requestAddNewTestCampaign","addNewTestCampaignOK","requestTestCampaign","requestUpdateTestCampaign","requestLaunchTestCampaign","requestStopTestCampaign","requestTestCampaignStatus","setTestCampaignRunningStatus","requestAllTestCases","setAllTestCases","setCurrentTestCase","requestDeleteTestCase","deleteTestCaseOK","requestAddNewTestCase","addNewTestCaseOK","requestTestCase","requestUpdateTestCase","requestAllDatasets","setAllDatasets","setCurrentDataset","requestDeleteDataset","deleteDatasetOK","requestAddNewDataset","addNewDatasetOK","requestDataset","requestUpdateDataset","requestEventsByDatasetId","setEvents","requestDeleteEvent","deleteEventOK","requestAddNewEvent","addNewEventOK","requestUpdateEvent","updateEventOK","requestStartSimulation","requestStopSimulation","requestSimulationStatus","setSimulationStatus","requestDevOpts","requestUpdateDevOpts","setDevOpts","updateObjectByPath","obj","path","value","stack","split","length","key","shift","indexOf","array","index","replace","push","lastKey","splice","deepCloneObject","JSON","parse","stringify","addNewElementToArray","newElement","found","id","removeElementFromArray","elmId","isDeleted","console","log","getCreatedTimeFromFileName","fileName","timeString","Date","Number","isDataGenerator","window","location","pathname","getQuery","qname","URLSearchParams","search","get","getLastPath","lastPath","initState","name","createReducer","produce","draft","model","state","newName","thing","things","newThings","thingID","enable","error","sensor","foundThing","newSensors","sensors","actuator","newActuators","actuators","sensorID","tIndex","actuatorID","type","message","logs","logFiles","isDG","logFile","formID","selectedDevice","selectedSensor","selectedActuator","dataStorage","status","stats","models","modelFileName","dupModel","newModel","dataRecorders","dataRecorderFileName","dupDataRecorder","newDataRecorder","dataRecorder","connConfig","connectionStatus","testCampaigns","allTestCampaigns","newTC","newAllTestCampaigns","testCampaignId","testCampaign","currentTestCampaign","runningStatus","devOpts","testCases","allTestCases","newAllTestCases","testCaseId","testCase","currentTestCase","datasets","allDatasets","newDS","newAllDatasets","currentDataset","dataset","datasetId","events","newEvent","eventId","newEvents","event","_id","rootReducer","combineReducers","allDataRecorders","allDataRecordersReducer","dataRecorderReducer","dataRecorderStatus","dataRecorderStatusReducer","dataStorageReducer","allModels","allModelsReducer","modelReducer","statsReducer","logsReducer","notify","notificationReducer","requesting","requestingReducer","editingForm","editingFormReducer","simulationStatus","simulationStatusReducer","testCampaignsReducer","devOptsReducer","testCasesReducer","datasetsReducer","a","url","fetch","response","json","data","method","result","headers","body","isDuplicated","updateModel","uploadDataRecorder","updateDataRecorder","sendRequestStartDataRecorder","sendRequestStopDataRecorder","sendRequestDataRecorderStatus","sendRequestDataStorage","sendRequestUpdateDataStorage","sendRequestTestDataStorageConnection","tool","content","requestStats","files","sendRequestStopSimulation","sendRequestSimulationStatus","sendRequestTestCampaign","tcId","sendRequestUpdateTestCampaign","sendRequestAllTestCampaigns","sendRequestAddNewTestCampaign","sendRequestDeleteTestCampaign","sendRequestDevOpts","sendRequestUpdateDevOpts","sendRequestTestCase","sendRequestUpdateTestCase","sendRequestAllTestCases","sendRequestAddNewTestCase","sendRequestDeleteTestCase","sendRequestDataset","sendRequestUpdateDataset","sendRequestAllDatasets","sendRequestAddNewDataset","sendRequestDeleteDataset","sendRequestEvent","sendRequestUpdateEvent","sendRequestEventsByDatasetId","dsId","sendRequestAddNewEvent","sendRequestDeleteEvent","sendRequestStartSimulation","newDataset","options","sendRequestLaunchTestCampaign","sendRequestStopTestCampaign","sendRequestTestCampaignStatus","handleRequestModel","handleRequestDeleteModel","handleRequestDuplicateModel","handleRequestAddNewModel","handleRequestUpdateModel","handleRequestAllModels","watchRequestModel","action","payload","call","put","duplicatedModel","takeEvery","handleSaveModel","watchSaveModel","getModel","select","Error","handleRequestStartSimulation","handleRequestStopSimulation","handleRequestSimulationStatus","watchSimulation","SimulationStatus","handleRequestLogFiles","handleRequestLogs","handleRequestDeleteLogFile","watchRequestLogs","handleRequestStats","watchRequestStats","handleRequestDataRecorder","handleRequestDeleteDataRecorder","handleRequestDuplicateDataRecorder","handleRequestAddNewDataRecorder","handleRequestUpdateDataRecorder","handleRequestStartDataRecorder","handleRequestStopDataRecorder","handleRequestDataRecorderStatus","handleRequestAllDataRecorders","watchRequestDataRecorder","duplicatedDataRecorder","handleRequestDataStorage","handleRequestUpdateDataStorage","handleRequestTestDataStorageConnection","watchRequestDataStorage","newDataStorage","handleRequestTestCampaign","handleRequestUpdateTestCampaign","handleRequestAllTestCampaigns","handleRequestAddNewTestCampaign","handleRequestDeleteTestCampaign","handleRequestLaunchTestCampaign","handleRequestStopTestCampaign","handleRequestTestCampaignStatus","watchTestCampaigns","newTestCampaign","handleRequestTestCase","handleRequestUpdateTestCase","handleRequestAllTestCases","handleRequestAddNewTestCase","handleRequestDeleteTestCase","watchTestCases","newTestCase","handleRequestDataset","handleRequestUpdateDataset","handleRequestAllDatasets","handleRequestAddNewDataset","handleRequestDeleteDataset","watchDatasets","Dataset","DatasetId","handleRequestEvent","handleRequestEventsByDatasetId","handleRequestUpdateEvent","handleRequestAllEvents","handleRequestAddNewEvent","handleRequestDeleteEvent","watchEvents","allEvents","handleRequestDevOpts","handleRequestUpdateDevOpts","watchDevOpts","newDevOpts","rootSaga","all","requestModelSaga","requestDataRecorderSaga","uploadModelSaga","simulationSaga","requestLogsSaga","dataStorageSaga","testCampaignsSaga","devOptsSaga","testCasesSaga","datasetsSaga","eventsSaga","configStore","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","run","Header","Layout","TSHeader","menuLinks","selectedMenu","fullPath","currentPositionIndex","positionIndex","span","href","src","className","alt","style","maxWidth","objectFit","theme","mode","lineHeight","selectedKeys","Item","InteractionOutlined","FolderOpenOutlined","ClusterOutlined","DeploymentUnitOutlined","EyeOutlined","FileTextOutlined","DatabaseOutlined","Component","connect","dispatch","setNewModel","resetEditor","viewLogs","Footer","TSFooter","textAlign","marginTop","getFullYear","VERSION","TSModal","visible","title","footer","onCancel","children","FormTextItem","label","defaultValue","onChange","placeholder","helpText","rules","extra","v","target","minWidth","TextArea","Input","rows","FormSelectItem","map","tid","Option","FormNumberItem","min","max","FormSwitchItem","DatePicker","RangePicker","checked","checkedChildren","unCheckedChildren","FormCheckBoxItem","Group","FormRegularNumberItem","items","grid","gutter","column","dataSource","renderItem","item","size","bordered","dataPath","Text","Typography","Paragraph","FormEditableTextItem","editable","FormTextNotEditableItem","copyable","MongoDBOptions","onDataChange","Fragment","user","password","dbname","required","Panel","Collapse","CollapseForm","active","accordion","margin","defaultActiveKey","header","ConnectionConfig","host","port","FormTextAreaItem","defaultBehaviours","DataSourceForm","behaviours","resourceId","unit","FormCheckBoxItems","concat","onClick","EnergyForm","dPath","initValue","consumInOnePeriod","low","slowDownRate","BooleanForm","EnumForm","values","defaultValueConstraints","regularMin","regularMax","step","ValueConstraintForm","IntegerFloatForm","withValueConstraints","valueConstraints","MultipleDataSources","sources","source","DataGeneratorForm","dataSpecs","scale","timePeriod","sensorBehaviours","dosAttackSpeedUpRate","timeBeforeFailed","isIPSOFormat","energy","withEnergy","overlay","placement","UpOutlined","SensorModal","props","sensorData","deviceId","isChanged","this","setState","prevState","newData","onOK","onClose","saveData","disabled","labelCol","wrapperCol","objectId","topic","ActuatorModal","actuatorData","modalID","act","deviceID","modes","tree","view","form","code","text","Object","allValues","Editor","htmlElementRef","jsonEditor","handleChange","bind","setRef","collapseAll","expandAll","focus","allowedModes","rest","innerRef","htmlElementProps","tag","createEditor","schema","schemaRefs","setSchema","getName","setName","destroy","newProps","set","element","JSONEditor","getText","currentJson","err","React","createElement","ref","defaultProps","history","navigationBar","statusBar","JSONView","ace","Title","Content","LayoutPage","pageTitle","pageSubTitle","backgroundColor","notification","toUpperCase","description","padding","level","paddingTop","tip","ModelDeviceItem","onDelete","onDuplicate","changeModalId","selectedModalId","onEnable","defaultChecked","stopPropagation","marginRight","danger","newId","orientation","testBroker","protocol","productionBroker","actions","newSensor","newActuator","newDevice","currentTime","now","timeToDown","ModelPage","isNewModel","tempModel","onModelChange","fileData","blob","Blob","URL","createObjectURL","link","document","download","click","devices","addNewModel","viewType","newDatasetId","tags","username","device","newDevices","SwitcherOutlined","exportModel","ExportOutlined","deleteSensor","deleteActuator","LogsPage","initData","deleteLogFile","avatar","loading","Meta","ClockCircleOutlined","LogLine","time","getLastURLPath","decodeURIComponent","setInterval","warn","getHours","getMinutes","getSeconds","getDay","getMonth","DummyPage","DataStoragePage","tempDataStorage","isDSChanged","onDataStorageChange","testConnection","updateDataStorage","color","setTimeout","TestCampaignListPage","webhookURL","undefined","fetchTestCampaigns","fetchDevOpts","tc","newTc","testCaseIds","addNewTestCampaign","wb","deleteTestCampaign","updateDevOpts","launchTestCampaign","stopTestCampaign","columns","render","updateTestCampaignId","duplicateTestCampaign","reportFileName","e","preventDefault","DownOutlined","updateWebhookURL","xs","offset","sm","isRunning","marginBottom","fetchTestCampaignStatus","ModelListPage","fileReader","FileReader","onloadend","importNewModel","readAsText","fetchAllModels","deleteModel","duplicateModel","ClearOutlined","inputFileDOM","ImportOutlined","onUpload","input","display","accept","multiple","trigger","CaretRightOutlined","CopyOutlined","DeleteOutlined","DataRecorderListPage","importNewDataRecorder","fetchAllDataRecorders","fetchDataRecorderStatus","deleteDataRecorder","duplicateDataRecorder","startDataRecorder","stopDataRecorder","startedTime","toLocaleTimeString","CloseSquareOutlined","DataRecorderItem","upStreams","newUpStreams","downStreams","newDownStreams","newDownstreams","forward","DataRecorderPage","isNewDataRecorder","tempDataRecorder","onDataRecorderChange","addNewDataRecorder","dr","newDataRecorders","RightOutlined","SelectionModal","width","TestCampaignPage","originalId","isNew","showTestCaseModal","fetchTestCampaign","fetchTestCases","newTestCaseIds","selectTC","newDescription","updateTestCampaign","moveTestCaseUp","moveTestCaseDown","removeTestCase","updateId","updateName","updateDescription","updateTestCaseIds","saveTestCampaign","updatedTestCampaign","TestCaseListPage","addNewTestCase","deleteTestCase","duplicateTestCase","TestCasePage","datasetIds","showDatasetModal","fetchTestCase","fetchModelFiles","fetchDatasets","newDatasetIds","selectDS","newDatasets","newModelFileName","newTags","updateTestCase","ds","moveDatasetUp","moveDatasetDown","removeDataset","updateModelFileName","updateTags","updateDatasets","saveTestCase","updatedTestCase","DatasetListPage","createdAt","lastModified","addNewDataset","deleteDataset","duplicateDataset","EventModal","timestamp","isSensorData","initEvent","DatasetPage","activeEventModal","fetchDataset","fetchEvents","newSource","addNewdataset","updatedataset","nbEvents","startTime","endTime","topicFilters","nbSensors","nbActuators","dataIndex","sorter","b","ts","moment","fromNow","filters","onFilter","deleteEvent","addNewEvent","changeActiveEventModal","updateEvent","updateSource","toLocaleString","savedataset","updateddataset","SimulationPage","datasetName","datasetDescription","datasetTags","fetchSimulationStatus","desc","stopSimulation","datasetOptions","onModelFileNameChange","onDatasetIdChange","onNewDatasetIdChange","onDatasetNameChange","onDatasetDescriptionChange","onDatasetTagsChange","startSimulation","App","height","exact","to","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.97478a49.chunk.js","sourcesContent":["module.exports = '0.7.0';","import {createAction } from 'redux-act';\n// Notification\nexport const setNotification = createAction('SET_NOTIFICATION');\nexport const resetNotification = createAction('RESET_NOTIFICATION');\n\n// All Models\nexport const requestAllModels = createAction('REQUEST_ALL_MODELS');\nexport const setAllModels = createAction('SET_ALL_MODELS');\nexport const requestDeleteModel = createAction('REQUEST_DELETE_MODEL');\nexport const requestDuplicateModel = createAction('REQUEST_DUPLICATE_MODEL');\nexport const deleteModelOK = createAction('DELETE_MODEL_OK');\nexport const duplicateModelOK = createAction('DUPLICATE_MODEL_OK');\nexport const requestAddNewModel = createAction('REQUEST_ADD_NEW_MODEL');\nexport const addNewModelOK = createAction('ADD_NEW_MODEL_OK');\nexport const requestUpdateModel = createAction('REQUEST_UPDATE_MODEL');\n// Model detail\nexport const updateModelOK = createAction('UPDATE_MODEL_OK');\nexport const requestModel = createAction('REQUEST_MODEL');\nexport const setModel = createAction('SET_MODEL');\n// Model - modification\nexport const changeModelName = createAction('CHANGE_MODEL_NAME');\nexport const addThing = createAction('ADD_THING');\nexport const deleteThing = createAction('DELETE_THING');\nexport const addSimulationSensor = createAction('ADD_SIMULATION_SENSOR');\nexport const addSimulationActuator = createAction('ADD_SIMULATION_ACTUATOR');\nexport const deleteSimulationSensor = createAction('DELETE_SIMULATION_SENSOR');\nexport const deleteSimulationActuator = createAction('DELETE_SIMULATION_ACTUATOR');\nexport const changeStatusSensor = createAction('CHANGE_STATUS_SENSOR');\nexport const changeStatusActuator = createAction('CHANGE_STATUS_ACTUATOR');\nexport const resetModel = createAction('RESET_MODEL');\n// Save Model to Server\nexport const uploadModel = createAction('UPLOAD_MODEL');\nexport const uploadModelOK = createAction('UPLOAD_MODEL_OK');\n\nexport const requestAllDataRecorders = createAction('REQUEST_ALL_DATA_RECORDERS');\nexport const setAllDataRecorders = createAction('SET_ALL_DATA_RECORDERS');\nexport const requestDeleteDataRecorder = createAction('REQUEST_DELETE_DATA_RECORDER');\nexport const requestDuplicateDataRecorder = createAction('REQUEST_DUPLICATE_DATA_RECORDER');\nexport const deleteDataRecorderOK = createAction('DELETE_DATA_RECORDER_OK');\nexport const duplicateDataRecorderOK = createAction('DUPLICATE_DATA_RECORDER_OK');\nexport const requestAddNewDataRecorder = createAction('REQUEST_ADD_NEW_DATA_RECORDER');\nexport const addNewDataRecorderOK = createAction('ADD_NEW_DATA_RECORDER_OK');\nexport const requestUpdateDataRecorder = createAction('REQUEST_UPDATE_DATA_RECORDER');\nexport const updateDataRecorderOK = createAction('UPDATE_DATA_RECORDER_OK');\nexport const requestDataRecorder = createAction('REQUEST_DATA_RECORDER');\nexport const setDataRecorder = createAction('SET_DATA_RECORDER');\nexport const changeDataRecorderName = createAction('CHANGE_DATA_RECORDER_NAME');\nexport const resetDataRecorder = createAction('RESET_DATA_RECORDER');\nexport const requestStartDataRecorder = createAction('REQUEST_START_DATA_RECORDER');\nexport const requestStopDataRecorder = createAction('REQUEST_STOP_DATA_RECORDER');\nexport const requestDataRecorderStatus = createAction('REQUEST_DATA_RECORDER_STATUS');\nexport const setDataRecorderStatus = createAction('SET_DATA_RECORDER_STATUS');\n\n// Control the Simulation\n// export const sendDeployStart = createAction('SEND_DEPLOY_START');\n// export const deployStartOK = createAction('DEPLOY_START_OK');\n// export const sendDeployStop = createAction('SEND_DEPLOY_STOP');\n// export const deployStopOK = createAction('DEPLOY_STOP_OK');\n// export const requestDeployStatus = createAction('REQUEST_DEPLOY_STATUS');\n\n\n// Control the logs\nexport const requestLogs = createAction('REQUEST_LOGS');\nexport const requestLogFiles = createAction('REQUEST_LOGFILES');\nexport const requestLogsOK = createAction('REQUEST_LOGS_OK');\nexport const requestLogFilesOK = createAction('REQUEST_LOGFILES_OK');\nexport const requestDeleteLogFile = createAction('REQUEST_DELETE_LOG_FILE');\n\n// editing forms\nexport const showModal = createAction('SHOW_MODAL');\nexport const selectDevice = createAction('SELECT_DEVICE');\nexport const changeStatusThing = createAction('CHANGE_STATUS_THING');\nexport const selectSensor = createAction('SELECT_SENSOR');\nexport const selectActuator = createAction('SELECT_ACTUATOR');\nexport const selectDataStorage = createAction('SELECT_DATA_STORAGE');\n\n\n// Statistics\nexport const requestStats = createAction('REQUEST_STATS');\nexport const requestStatsOK = createAction('REQUEST_STATS_OK');\n\n// Data storage\nexport const requestDataStorage = createAction('REQUEST_DATA_STORAGE');\nexport const requestUpdateDataStorage = createAction('REQUEST_UPDATE_DATA_STORAGE');\nexport const setDataStorage = createAction('SET_DATA_STORAGE');\nexport const requestTestDataStorageConnection = createAction('REQUEST_TEST_DATA_STORAGE_CONNECTION');\nexport const setDataStorageConnectionStatus = createAction('SET_DATA_STORAGE_CONNECTION_STATUS');\n\n\n// Test Campaigns\nexport const requestAllTestCampaigns = createAction('REQUEST_ALL_TEST_CAMPAIGNS');\nexport const setAllTestCampaigns = createAction('SET_ALL_TEST_CAMPAIGNS');\nexport const setCurrentTestCampaign = createAction('SET_CURRENT_TEST_CAMPAIGN');\nexport const requestDeleteTestCampaign = createAction('REQUEST_DELETE_TEST_CAMPAIGN');\nexport const deleteTestCampaignOK = createAction('DELETE_TEST_CAMPAIGN_OK');\nexport const requestAddNewTestCampaign = createAction('REQUEST_ADD_NEW_TEST_CAMPAIGN');\nexport const addNewTestCampaignOK = createAction('ADD_NEW_TEST_CAMPAIGN_OK');\nexport const requestTestCampaign = createAction('REQUEST_TEST_CAMPAIGN');\nexport const requestUpdateTestCampaign = createAction('REQUEST_UPDATE_TEST_CAMPAIGN');\nexport const updateTestCampaignOK = createAction('UPDATE_TEST_CAMPAIGN_OK');\n// Manage devopts\nexport const requestLaunchTestCampaign = createAction('REQUEST_LAUNCH_TEST_CAMPAIGN');\nexport const requestStopTestCampaign = createAction('REQUEST_STOP_TEST_CAMPAIGN');\nexport const requestTestCampaignStatus = createAction('REQUEST_TEST_CAMPAIGN_STATUS');\nexport const setTestCampaignRunningStatus = createAction('SET_TEST_CAMPAIGN_RUNNING_STATUS');\n\n// Test cases\nexport const requestAllTestCases = createAction('REQUEST_ALL_TEST_CASES');\nexport const setAllTestCases = createAction('SET_ALL_TEST_CASES');\nexport const setCurrentTestCase = createAction('SET_CURRENT_TEST_CASE');\nexport const requestDeleteTestCase = createAction('REQUEST_DELETE_TEST_CASE');\nexport const deleteTestCaseOK = createAction('DELETE_TEST_CASE_OK');\nexport const requestAddNewTestCase = createAction('REQUEST_ADD_NEW_TEST_CASE');\nexport const addNewTestCaseOK = createAction('ADD_NEW_TEST_CASE_OK');\nexport const requestTestCase = createAction('REQUEST_TEST_CASE');\nexport const requestUpdateTestCase = createAction('REQUEST_UPDATE_TEST_CASE');\nexport const updateTestCaseOK = createAction('UPDATE_TEST_CASE_OK');\n\n\n// Dataset\nexport const requestAllDatasets = createAction('REQUEST_ALL_DATA_SETS');\nexport const setAllDatasets = createAction('SET_ALL_DATA_SETS');\nexport const setCurrentDataset = createAction('SET_CURRENT_DATA_SET');\nexport const requestDeleteDataset = createAction('REQUEST_DELETE_DATA_SET');\nexport const deleteDatasetOK = createAction('DELETE_DATA_SET_OK');\nexport const requestAddNewDataset = createAction('REQUEST_ADD_NEW_DATA_SET');\nexport const addNewDatasetOK = createAction('ADD_NEW_DATA_SET_OK');\nexport const requestDataset = createAction('REQUEST_DATA_SET');\nexport const requestUpdateDataset = createAction('REQUEST_UPDATE_DATA_SET');\nexport const updateDatasetOK = createAction('UPDATE_DATA_SET_OK');\n\n// Event\nexport const requestEventsByDatasetId = createAction('REQUEST_EVENTS_BY_DATASET_ID');\nexport const setEvents = createAction('SET_EVENTS');\nexport const requestDeleteEvent = createAction('REQUEST_DELETE_EVENT');\nexport const deleteEventOK = createAction('DELETE_EVENT_OK');\nexport const requestAddNewEvent = createAction('REQUEST_ADD_NEW_EVENT');\nexport const addNewEventOK = createAction('ADD_NEW_EVENT_OK');\nexport const requestEvent = createAction('REQUEST_EVENT');\nexport const requestUpdateEvent = createAction('REQUEST_UPDATE_EVENT');\nexport const updateEventOK = createAction('UPDATE_EVENT_OK');\n\n// Simulation\nexport const requestStartSimulation = createAction('REQUEST_START_SIMULATION');\nexport const requestStopSimulation = createAction('REQUEST_STOP_SIMULATION');\nexport const requestSimulationStatus = createAction('REQUEST_SIMULATION_STATUS');\nexport const setSimulationStatus = createAction('SET_SIMULATION_STATUS');\n\n// DevOpts\nexport const requestDevOpts = createAction('REQUEST_DEV_OPTS');\nexport const requestUpdateDevOpts = createAction('REQUEST_UPDATE_DEV_OPTS');\nexport const setDevOpts = createAction('SET_DEV_OPTS');\n","/**\n *\n * @param {Object} obj Object to be updated\n * @param {String} path Path to be updated\n * @param {Value} value the new value to be updated\n */\nconst updateObjectByPath = (obj, path, value) => {\n  let stack = path.split(\".\");\n  while (stack.length > 1) {\n    // Not at the end of the path\n    let key = stack.shift();\n    if (key.indexOf(\"[\") > 0) {\n      // Contains array index\n      const array = key.split(\"[\");\n      key = array[0];\n      let index = array[1].replace(\"]\", \"\");\n      if (!obj[key]) {\n        // Create a new array if it does not exist\n        obj[key] = [];\n      }\n      if (obj[key].length === 0) {\n        // Empty array\n        index = 0;\n      } else if (obj[key].length <= index || index < 0) {\n        // index out of range\n        index = obj[key].length;\n      }\n      if (!obj[key][index]) {\n        obj[key].push({});\n        // throw Error(`ERROR: Invalid data path: ${path} in object ${JSON.stringify(obj)}`);\n      }\n      obj = obj[key][index];\n    } else {\n      if (!obj[key]) {\n        // Create a new path if it does not exist\n        obj[key] = {};\n      }\n      obj = obj[key];\n    }\n  }\n  let lastKey = stack.shift();\n  // At the end of the path\n  if (lastKey.indexOf(\"[\") > 0) {\n    // Contains array index\n    const array = lastKey.split(\"[\");\n    lastKey = array[0];\n    let index = array[1].replace(\"]\", \"\");\n    if (value === null) {\n      // Remove an element\n      if (obj[lastKey] && obj[lastKey][index]) {\n        obj[lastKey].splice(index, 1);\n      }\n    } else {\n      // Add an element\n      if (!obj[lastKey]) {\n        // Create a new array if it does not exist\n        obj[lastKey] = [];\n      }\n      if (obj[lastKey].length === 0) {\n        // Empty array\n        index = 0;\n      } else if (obj[lastKey].length <= index || index < 0) {\n        // index out of range\n        index = obj[lastKey].length;\n      }\n      if (!obj[lastKey][index]) {\n        obj[lastKey].push(value);\n        // throw Error(`ERROR: Invalid data path: ${path} in object ${JSON.stringify(obj)}`);\n      } else {\n        obj[lastKey][index] = value;\n      }\n    }\n  } else {\n    // Not contains array index\n    obj[lastKey] = value;\n  }\n};\n\nconst deepCloneObject = (obj) => JSON.parse(JSON.stringify(obj));\n\n/**\n * Add new element into array\n * @param {Array} array The array to be added\n * @param {Object} newElement New element to be updated or added\n */\nconst addNewElementToArray = (array, newElement) => {\n  let found = false;\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    if (element.id === newElement.id) {\n      // Found the element - update\n      array[index] = { ...newElement };\n      // array.splice(index, 1);\n      // array.push(newElement);\n      found = true;\n      break;\n    }\n  }\n  if (!found) {\n    array.push(newElement);\n  }\n  return array;\n};\n\nconst removeElementFromArray = (array, elmId) => {\n  let isDeleted = false;\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    if (element.id === elmId) {\n      array.splice(index, 1);\n      isDeleted = true;\n      break;\n    }\n  }\n  if (!isDeleted) {\n    console.log(`[ERROR] Cannot find the element: ${elmId}`);\n    return null;\n  }\n  return array;\n};\n\nconst getCreatedTimeFromFileName = (fileName) => {\n  const array = fileName.split(\"_\");\n  let timeString = array[array.length - 1].replace(\".log\", \"\");\n  return new Date(Number(timeString));\n};\n\nconst getLastURLPath = (url) => {\n  const array = url.split(\"/\");\n  return array[array.length - 1];\n};\n\nconst isDataGenerator = () => {\n  return window.location.pathname.indexOf(\"data-generator\") === 1;\n};\n\nconst getQuery = (qname) => {\n  const query = new URLSearchParams(window.location.search);\n  return query.get(qname);\n};\n\n/**\n * Get the last path in the URL /this-is-the-last-path?not-this-part\n */\nconst getLastPath = () => {\n  const array = window.location.pathname.split('/');\n  let lastPath = array[array.length - 1];\n  if (lastPath) {\n    lastPath = lastPath.split('?')[0]; // Remove query path\n  }\n  return lastPath;\n}\n\nexport {\n  getQuery,\n  isDataGenerator,\n  getLastURLPath,\n  updateObjectByPath,\n  addNewElementToArray,\n  removeElementFromArray,\n  getCreatedTimeFromFileName,\n  deepCloneObject,\n  getLastPath\n};\n","import { createReducer } from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setModel,\n  resetModel,\n  changeModelName,\n  addThing,\n  deleteThing,\n  changeStatusThing,\n  addSimulationSensor,\n  deleteSimulationSensor,\n  changeStatusSensor,\n  addSimulationActuator,\n  deleteSimulationActuator,\n  changeStatusActuator,\n} from \"../actions\";\nimport { addNewElementToArray, removeElementFromArray } from \"../utils\";\n\nconst initState = { name: \"NewModel\" };\n\nexport default createReducer(\n  {\n    [setModel]: produce((draft, model) => (draft = model)),\n    [resetModel]: state => initState,\n    // modification\n    [changeModelName]: produce((draft, newName) => {\n      draft.name = newName;\n    }),\n    [addThing]: produce((draft, thing) => {\n      if (draft.things) {\n        const newThings = addNewElementToArray(draft.things, thing);\n        draft.things = [...newThings];\n      } else {\n        draft.things = [thing];\n      }\n    }),\n    [deleteThing]: produce((draft, thingID) => {\n      const newThings = removeElementFromArray(draft.things, thingID);\n      if (newThings) draft.things = [...newThings];\n    }),\n    [changeStatusThing]: produce((draft, thingID) => {\n      for (let index = 0; index < draft.things.length; index++) {\n        if (draft.things[index].id === thingID) {\n          draft.things[index].enable = !draft.things[index].enable;\n          return;\n        };\n      }\n      console.error(`[ERROR] Cannot find the thing ${thingID}`);\n    }),\n    [addSimulationSensor]: produce((draft, { thingID, sensor }) => {\n      let foundThing = false;\n      if (draft.things) {\n        for (let index = 0; index < draft.things.length; index++) {\n          if (draft.things[index].id === thingID) {\n            foundThing = true;\n            const newSensors = addNewElementToArray(\n              draft.things[index].sensors,\n              sensor\n            );\n            draft.things[index].sensors = [...newSensors];\n            break;\n          }\n        }\n      }\n\n      if (!foundThing) {\n        if (!draft.sensors) {\n          draft.sensors = [];\n        }\n        // Add to free sensors list\n        const newSensors = addNewElementToArray(draft.sensors, sensor);\n        draft.sensors = [...newSensors];\n      } else {\n        if (draft.sensors) {\n          const newSensors = removeElementFromArray(draft.sensors, sensor.id);\n          if (newSensors) draft.sensors = [...newSensors];\n        }\n      }\n    }),\n    [addSimulationActuator]: produce((draft, { thingID, actuator }) => {\n      let foundThing = false;\n      if (draft.things) {\n        for (let index = 0; index < draft.things.length; index++) {\n          if (draft.things[index].id === thingID) {\n            foundThing = true;\n            const newActuators = addNewElementToArray(\n              draft.things[index].actuators,\n              actuator\n            );\n            draft.things[index].actuators = [...newActuators];\n            break;\n          }\n        }\n      }\n\n      if (!foundThing) {\n        if (!draft.actuators) {\n          draft.actuators = [];\n        }\n        // Add to free actuators list\n        const newActuators = addNewElementToArray(draft.actuators, actuator);\n        draft.actuators = [...newActuators];\n      } else {\n        if (draft.actuators) {\n          const newActuators = removeElementFromArray(\n            draft.actuators,\n            actuator.id\n          );\n          if (newActuators) draft.actuators = [...newActuators];\n        }\n      }\n    }),\n    [deleteSimulationSensor]: produce((draft, { sensorID, thingID }) => {\n      if (!thingID) {\n        // Remove a free sensors\n        const newSensors = removeElementFromArray(draft.sensors, sensorID);\n        if (newSensors) {\n          draft.sensors = [...newSensors];\n        }\n      } else {\n        // Remove sensors from a thing\n        let foundThing = false;\n        for (let index = 0; index < draft.things.length; index++) {\n          if (draft.things[index].id === thingID) {\n            foundThing = true;\n            const newSensors = removeElementFromArray(\n              draft.things[index].sensors,\n              sensorID\n            );\n            if (newSensors) {\n              draft.things[index].sensors = [...newSensors];\n            }\n            break;\n          }\n        }\n        if (!foundThing) {\n          console.log(`[ERROR] Cannot remove ${sensorID} from ${thingID}`);\n        }\n      }\n    }),\n    [changeStatusSensor]: produce((draft, { sensorID, thingID }) => {\n      if (!thingID) {\n        // free sensors\n        if (draft.sensors) {\n          for (let index = 0; index < draft.sensors.length; index++) {\n            if (draft.sensors[index].id === sensorID) {\n              draft.sensors[index].enable = !draft.sensors[index].enable;\n              return;\n            }\n          }\n        }\n        console.log(`[ERROR] Cannot change status of sensor ${sensorID} in ${thingID}`);\n      } else {\n        // Remove sensors from a thing\n        for (let tIndex = 0; tIndex < draft.things.length; tIndex++) {\n          if (draft.things[tIndex].id === thingID) {\n            for (let index = 0; index < draft.things[tIndex].sensors.length; index++) {\n              if (draft.things[tIndex].sensors[index].id === sensorID) {\n                draft.things[tIndex].sensors[index].enable = !draft.things[tIndex].sensors[index].enable;\n                return;\n              }\n            }\n            break;\n          }\n        }\n        console.log(`[ERROR] Cannot change status of sensor ${sensorID} in ${thingID}`);\n      }\n    }),\n    [deleteSimulationActuator]: produce((draft, { actuatorID, thingID }) => {\n      if (!thingID) {\n        // Remove a free actuators\n        const newActuators = removeElementFromArray(\n          draft.actuators,\n          actuatorID\n        );\n        if (newActuators) {\n          draft.actuators = [...newActuators];\n        }\n      } else {\n        // Remove actuators from a thing\n        let foundThing = false;\n        for (let index = 0; index < draft.things.length; index++) {\n          if (draft.things[index].id === thingID) {\n            foundThing = true;\n            const newActuators = removeElementFromArray(\n              draft.things[index].actuators,\n              actuatorID\n            );\n            if (newActuators) {\n              draft.things[index].actuators = [...newActuators];\n            }\n            break;\n          }\n        }\n        if (!foundThing) {\n          console.log(`[ERROR] Cannot remove ${actuatorID} from ${thingID}`);\n        }\n      }\n    }),[changeStatusActuator]: produce((draft, { actuatorID, thingID }) => {\n      if (!thingID) {\n        // free actuator\n        if (draft.actuators) {\n          for (let index = 0; index < draft.actuators.length; index++) {\n            if (draft.actuators[index].id === actuatorID) {\n              draft.actuators[index].enable = !draft.actuators[index].enable;\n              return;\n            }\n          }\n        }\n        console.log(`[ERROR] Cannot change status of actuator ${actuatorID} in ${thingID}`);\n      } else {\n        // Remove sensors from a thing\n        for (let tIndex = 0; tIndex < draft.things.length; tIndex++) {\n          if (draft.things[tIndex].id === thingID) {\n            for (let index = 0; index < draft.things[tIndex].actuators.length; index++) {\n              if (draft.things[tIndex].actuators[index].id === actuatorID) {\n                draft.things[tIndex].actuators[index].enable = !draft.things[tIndex].actuators[index].enable;\n                return;\n              }\n            }\n            break;\n          }\n        }\n        console.log(`[ERROR] Cannot change status of actuator ${actuatorID} in ${thingID}`);\n      }\n    })\n  },\n  initState\n);","import { createReducer } from \"redux-act\";\n\nimport {\n  uploadModelOK,\n  uploadModel,\n  requestModel,\n  // sendDeployStop,\n  // sendDeployStart,\n  setModel,\n  // deployStopOK,\n  // deployStartOK,\n  setNotification,\n  requestLogs,\n  requestLogsOK,\n  requestAllModels,\n  deleteModelOK,\n  setAllModels,\n  requestDuplicateModel,\n  duplicateModelOK,\n  requestDeleteModel,\n  requestAddNewModel,\n  addNewModelOK,\n  requestUpdateModel,\n  updateModelOK,\n  requestDataStorage,\n  requestUpdateDataStorage,\n  setDataStorage,\n  requestTestDataStorageConnection,\n  setDataStorageConnectionStatus\n} from \"../actions\";\n\nconst initState = false;\n\nexport default createReducer(\n  {\n    [uploadModel]: state => true,\n    [requestModel]: state => true,\n    // [sendDeployStop]: state => true,\n    // [sendDeployStart]: state => true,\n    [setNotification]: state => false,\n    [setModel]: state => false,\n    [uploadModelOK]: state => false,\n    // [deployStopOK]: state => false,\n    // [deployStartOK]: state => false,\n    [requestLogs]: state => true,\n    [requestLogsOK]: state => false,\n    [requestAllModels]: state => true,\n    [setAllModels]: state => false,\n    [requestDeleteModel]: state => true,\n    [deleteModelOK]: state => false,\n    [requestDuplicateModel]: state => true,\n    [duplicateModelOK]: state => false,\n    [requestAddNewModel]: state => true,\n    [addNewModelOK]: state => false,\n    [requestUpdateModel]: state => true,\n    [updateModelOK]: state => false,\n    [requestDataStorage]: state => true,\n    [requestUpdateDataStorage]: state => true,\n    [setDataStorage]: state => false,\n    [requestTestDataStorageConnection]: state => true,\n    [setDataStorageConnectionStatus]: state => false,\n  },\n  initState\n);\n","import { createReducer } from \"redux-act\";\nimport {\n  setNotification,\n  resetNotification,\n  addThing,\n  deleteThing,\n  addSimulationSensor,\n  addSimulationActuator,\n  deleteSimulationSensor,\n  deleteSimulationActuator,\n} from \"../actions\";\n\nexport default createReducer(\n  {\n    [setNotification]: (state, { type, message }) => {\n      if (message !== {}) {\n        return { type, message };\n      } else {\n        return null;\n      }\n    },\n    [resetNotification]: state => null,\n    [addThing]: (state, thing) => ({\n      type: \"success\",\n      message: `Thing ${thing.id} has been added!`\n    }),\n    [deleteThing]: (state, thingID) => ({\n      type: \"success\",\n      message: `Thing ${thingID} has been removed!`\n    }),\n    [addSimulationSensor]: (state, {sensor, thingID}) => ({\n      type: \"success\",\n      message: `Sensor ${sensor.id} has been added ${thingID? `into Thing ${thingID}`: ''}!`\n    }),\n    [deleteSimulationSensor]: (state, {sensorID, thingID}) => ({\n      type: \"success\",\n      message: `Sensor ${sensorID} has been removed${thingID? `from Thing ${thingID}`: ''}!`\n    }),\n    [addSimulationActuator]: (state, {actuator, thingID}) => ({\n      type: \"success\",\n      message: `Actuator ${actuator.id} has been added ${thingID? `into Thing ${thingID}`: ''}!`\n    }),\n    [deleteSimulationActuator]: (state, {actuatorID, thingID}) => ({\n      type: \"success\",\n      message: `Actuator ${actuatorID} has been removed${thingID? `from Thing ${thingID}`: ''}!`\n    })\n  },\n  null\n);\n","import { createReducer } from \"redux-act\";\nimport produce from 'immer';\nimport { requestLogsOK, requestLogFilesOK, requestDeleteLogFile } from \"../actions\";\n\nconst initState = {\n  logs: null,\n  logFiles: []\n};\n\nexport default createReducer(\n  {\n    [requestLogsOK]: (state, logs) => ({...state, logs}),\n    [requestLogFilesOK]: (state, logFiles) => ({...state, logFiles}),\n    [requestDeleteLogFile]: produce((draft, {isDG, logFile}) => {\n      const index = draft.logFiles.indexOf(logFile);\n      if (index > - 1) {\n        draft.logFiles.splice(index, 1);\n      }\n    })\n  },\n  initState\n);\n","import { createReducer } from 'redux-act';\nimport { selectDevice, selectSensor, selectActuator, showModal } from '../actions';\n\nconst initState = {\n  formID: null,\n  selectedDevice: null,\n  selectedSensor: null,\n  selectedActuator: null,\n  dataStorage: null\n}\nexport default createReducer({\n  [showModal] : (state, formID) => ({...state, formID}),\n  [selectDevice] : (state, selectedDevice) => ({...state, selectedDevice}),\n  [selectSensor] : (state, selectedSensor) => ({...state, selectedSensor}),\n  [selectActuator] : (state, selectedActuator) => ({...state, selectedActuator})\n}, initState);\n","import { createReducer } from 'redux-act';\nimport { setSimulationStatus } from '../actions';\n\nexport default createReducer({\n  [setSimulationStatus] : (state, status) => status\n}, false);\n","import { createReducer } from \"redux-act\";\nimport { requestStatsOK } from \"../actions\";\n\nconst initState = [];\n\nexport default createReducer(\n  {\n    [requestStatsOK]: (state, stats) => (stats),\n  },\n  initState\n);\n","import {\n  createReducer\n} from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setAllModels,\n  deleteModelOK,\n  duplicateModelOK,\n  addNewModelOK\n} from \"../actions\";\n\nexport default createReducer({\n    [setAllModels]: produce((draft, models) => (draft = models)),\n    [deleteModelOK]: produce((draft, modelFileName) => {\n      const index = draft.indexOf(modelFileName);\n      if (index === -1) {\n        console.error('Cannot find model to delete: ', modelFileName);\n      } else {\n        draft = draft.splice(index, 1);\n      }\n    }),\n    [duplicateModelOK]: produce((draft, dupModel) => draft = [...draft, dupModel]),\n    [addNewModelOK]:produce((draft, newModel) => draft = [...draft, newModel])\n  },\n  []\n);","import {\n  createReducer\n} from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setAllDataRecorders,\n  deleteDataRecorderOK,\n  duplicateDataRecorderOK,\n  addNewDataRecorderOK\n} from \"../actions\";\n\nexport default createReducer({\n    [setAllDataRecorders]: produce((draft, dataRecorders) => (draft = dataRecorders)),\n    [deleteDataRecorderOK]: produce((draft, dataRecorderFileName) => {\n      const index = draft.indexOf(dataRecorderFileName);\n      if (index === -1) {\n        console.error('Cannot find DataRecorder to delete: ', dataRecorderFileName);\n      } else {\n        draft = draft.splice(index, 1);\n      }\n    }),\n    [duplicateDataRecorderOK]: produce((draft, dupDataRecorder) => draft = [...draft, dupDataRecorder]),\n    [addNewDataRecorderOK]:produce((draft, newDataRecorder) => draft = [...draft, newDataRecorder])\n  },\n  []\n);","import { createReducer } from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setDataRecorder,\n  resetDataRecorder,\n  changeDataRecorderName,\n} from \"../actions\";\n\nconst initState = { name: \"New Data Recorder\" };\n\nexport default createReducer(\n  {\n    [setDataRecorder]: produce((draft, dataRecorder) => (draft = dataRecorder)),\n    [resetDataRecorder]: state => initState,\n    // modification\n    [changeDataRecorderName]: produce((draft, newName) => {\n      draft.name = newName;\n    })\n  },\n  initState\n);","import { createReducer } from 'redux-act';\nimport { setDataRecorderStatus } from '../actions';\n\nexport default createReducer({\n  [setDataRecorderStatus] : (state, status) => status\n}, null);\n","import {\n  createReducer\n} from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setDataStorage,\n  setDataStorageConnectionStatus\n} from \"../actions\";\n\nconst initState = {\n  connConfig: {},\n  connectionStatus: false\n};\n\nexport default createReducer({\n    [setDataStorage]: produce((draft, dataStorage) => {\n      draft.connConfig = dataStorage;\n    }),\n    [setDataStorageConnectionStatus]: produce((draft, status) => {\n      draft.connectionStatus = status;\n    }),\n  },\n  initState\n);","import {\n  createReducer\n} from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setAllTestCampaigns,\n  setCurrentTestCampaign,\n  deleteTestCampaignOK,\n  addNewTestCampaignOK,\n  setTestCampaignRunningStatus\n} from \"../actions\";\n\nimport { addNewElementToArray, removeElementFromArray } from \"../utils\";\n\nconst initState = {\n  allTestCampaigns: [],\n  currentTestCampaign: 0,\n  runningStatus: null\n};\n\nexport default createReducer({\n    [setAllTestCampaigns]: produce((draft, testCampaigns) => {\n      draft.allTestCampaigns = testCampaigns;\n    }),\n    [addNewTestCampaignOK]: produce((draft, newTC) => {\n      if (draft.allTestCampaigns) {\n        const newAllTestCampaigns = addNewElementToArray(draft.allTestCampaigns, newTC);\n        draft.allTestCampaigns = [...newAllTestCampaigns];\n      } else {\n        draft.allTestCampaigns = [newTC];\n      }\n    }),\n    [deleteTestCampaignOK]: produce((draft, testCampaignId) => {\n      const newAllTestCampaigns = removeElementFromArray(draft.allTestCampaigns, testCampaignId);\n      if (newAllTestCampaigns) draft.allTestCampaigns = [...newAllTestCampaigns];\n    }),\n    [setCurrentTestCampaign]: produce((draft, testCampaign) => {\n      draft.currentTestCampaign = testCampaign;\n    }),\n    [setTestCampaignRunningStatus]: produce((draft, runningStatus) => {\n      draft.runningStatus = runningStatus;\n    }),\n  },\n  initState\n);","import {\n  createReducer\n} from \"redux-act\";\nimport {\n  setDevOpts,\n} from \"../actions\";\n\nconst initState = null;\n\nexport default createReducer({\n    [setDevOpts]: (state, devOpts) => devOpts,\n  },\n  initState\n);","import {\n  createReducer\n} from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setAllTestCases,\n  setCurrentTestCase,\n  deleteTestCaseOK,\n  addNewTestCaseOK\n} from \"../actions\";\n\nimport { addNewElementToArray, removeElementFromArray } from \"../utils\";\n\nconst initState = {\n  allTestCases: [],\n  currentTestCase: 0\n};\n\nexport default createReducer({\n    [setAllTestCases]: produce((draft, testCases) => {\n      draft.allTestCases = testCases;\n    }),\n    [addNewTestCaseOK]: produce((draft, newTC) => {\n      if (draft.allTestCases) {\n        const newAllTestCases = addNewElementToArray(draft.allTestCases, newTC);\n        draft.allTestCases = [...newAllTestCases];\n      } else {\n        draft.allTestCases = [newTC];\n      }\n    }),\n    [deleteTestCaseOK]: produce((draft, testCaseId) => {\n      const newAllTestCases = removeElementFromArray(draft.allTestCases, testCaseId);\n      if (newAllTestCases) draft.allTestCases = [...newAllTestCases];\n    }),\n    [setCurrentTestCase]: produce((draft, testCase) => {\n      draft.currentTestCase = testCase;\n    }),\n  },\n  initState\n);","import {\n  createReducer\n} from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setAllDatasets,\n  setCurrentDataset,\n  deleteDatasetOK,\n  addNewDatasetOK,\n  setEvents,\n  addNewEventOK,\n  deleteEventOK,\n  updateEventOK\n} from \"../actions\";\n\nimport { addNewElementToArray, removeElementFromArray } from \"../utils\";\n\nconst initState = {\n  allDatasets: [],\n  currentDataset: {\n    dataset: null,\n    events:[]\n  }\n};\n\nexport default createReducer({\n    [setAllDatasets]: produce((draft, datasets) => {\n      draft.allDatasets = datasets;\n    }),\n    [addNewDatasetOK]: produce((draft, newDS) => {\n      if (draft.allDatasets) {\n        const newAllDatasets = addNewElementToArray(draft.allDatasets, newDS);\n        draft.allDatasets = [...newAllDatasets];\n      } else {\n        draft.allDatasets = [newDS];\n      }\n      draft.currentDataset.dataset = newDS;\n    }),\n    [deleteDatasetOK]: produce((draft, datasetId) => {\n      const newAllDatasets = removeElementFromArray(draft.allDatasets, datasetId);\n      if (newAllDatasets) draft.allDatasets = [...newAllDatasets];\n    }),\n    [setCurrentDataset]: produce((draft, dataset) => {\n      draft.currentDataset.dataset = dataset;\n    }),\n    [setEvents]: produce((draft, events) => {\n      draft.currentDataset.events = events;\n    }),\n    [addNewEventOK]: produce((draft, newEvent) => {\n      if (draft) {\n        draft.currentDataset.events.push(newEvent);\n      } else {\n        draft = [newEvent];\n      }\n    }),\n    [deleteEventOK]: produce((draft, eventId) => {\n      const newEvents = [];\n      for (let index = 0; index < draft.currentDataset.events.length; index++) {\n        const event = draft.currentDataset.events[index];\n        if (event._id !== eventId) {\n          newEvents.push(event);\n        }\n      }\n      draft.currentDataset.events = [...newEvents];\n    }),\n    [updateEventOK]: produce((draft, newEvent) => {\n      for (let index = 0; index < draft.currentDataset.events.length; index++) {\n        if (draft.currentDataset.events[index]._id === newEvent._id) {\n          draft.currentDataset.events[index] = {...newEvent};\n        };\n      }\n    })\n  },\n  initState\n);","import {\n  combineReducers\n} from 'redux';\n\nimport modelReducer from './modelReducer';\nimport requestingReducer from './requestingReducer';\nimport notificationReducer from './notificationReducer';\nimport logsReducer from './logsReducer';\nimport editingFormReducer from './editingFormReducer';\nimport simulationStatusReducer from './simulationStatusReducer';\nimport statsReducer from './statsReducer';\nimport allModelsReducer from './allModelsReducer';\nimport allDataRecordersReducer from './allDataRecordersReducer';\nimport dataRecorderReducer from './dataRecorderReducer';\nimport dataRecorderStatusReducer from './dataRecorderStatusReducer';\nimport dataStorageReducer from './dataStorageReducer';\nimport testCampaignsReducer from './testCampaignsReducer';\nimport devOptsReducer from './devOptsReducer';\nimport testCasesReducer from './testCasesReducer';\nimport datasetsReducer from './datasetsReducer';\n\nconst rootReducer = combineReducers({\n  allDataRecorders: allDataRecordersReducer,\n  dataRecorder: dataRecorderReducer,\n  dataRecorderStatus: dataRecorderStatusReducer,\n  dataStorage: dataStorageReducer,\n  allModels: allModelsReducer,\n  model: modelReducer,\n  stats: statsReducer,\n  logs: logsReducer,\n  notify: notificationReducer,\n  requesting: requestingReducer,\n  editingForm: editingFormReducer,\n  simulationStatus: simulationStatusReducer,\n  testCampaigns: testCampaignsReducer,\n  devOpts: devOptsReducer,\n  testCases: testCasesReducer,\n  datasets: datasetsReducer,\n});\n\nexport default rootReducer;\n","// read and pass the environment variables into reactjs application\n// const URL = `http://localhost:31057`;\nconst URL = \"\";\n\n// MODELS\nexport const requestAllModels = async () => {\n  const url = `${URL}/api/models`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.models;\n}\n\nexport const requestDeleteModel = async (modelFileName) => {\n  const url = `${URL}/api/models/${modelFileName}`;\n  const response = await fetch(url,{\n    method: 'DELETE',\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.result;\n}\n\nexport const requestDuplicateModel = async (modelFileName) => {\n  const url = `${URL}/api/models/${modelFileName}`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({\n      isDuplicated: true\n    })\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.modelFileName;\n}\n\nexport const requestModel = async (modelFileName) => {\n  const url = `${URL}/api/models/${modelFileName}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.model;\n};\n\nexport const uploadModel = async (model) => {\n  const url = `${URL}/api/models`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({model})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.modelFileName;\n};\n\nexport const updateModel = async (modelFileName, model) => {\n  const url = `${URL}/api/models/${modelFileName}`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({model})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.modelFileName;\n};\n\n// DATA RECORDERS\nexport const requestAllDataRecorders = async () => {\n  const url = `${URL}/api/data-recorders/models`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataRecorders;\n}\n\nexport const requestDeleteDataRecorder = async (dataRecorderFileName) => {\n  const url = `${URL}/api/data-recorders/models/${dataRecorderFileName}`;\n  const response = await fetch(url,{\n    method: 'DELETE',\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.result;\n}\n\nexport const requestDuplicateDataRecorder = async (dataRecorderFileName) => {\n  const url = `${URL}/api/data-recorders/models/${dataRecorderFileName}`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({\n      isDuplicated: true\n    })\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataRecorderFileName;\n}\n\nexport const requestDataRecorder = async (dataRecorderFileName) => {\n  const url = `${URL}/api/data-recorders/models/${dataRecorderFileName}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataRecorder;\n};\n\nexport const uploadDataRecorder = async (dataRecorder) => {\n  const url = `${URL}/api/data-recorders/models`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({dataRecorder})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataRecorderFileName;\n};\n\nexport const updateDataRecorder = async (dataRecorderFileName, dataRecorder) => {\n  const url = `${URL}/api/data-recorders/models/${dataRecorderFileName}`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({dataRecorder})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataRecorderFileName;\n};\n\nexport const sendRequestStartDataRecorder = async (dataRecorderFileName) => {\n  const url = `${URL}/api/data-recorders/start`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({dataRecorderFileName})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.status;\n}\n\nexport const sendRequestStopDataRecorder = async () => {\n  const url = `${URL}/api/data-recorders/stop`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.status;\n}\n\nexport const sendRequestDataRecorderStatus = async () => {\n  const url = `${URL}/api/data-recorders/status`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.status;\n};\n\n// DATA STORAGE\nexport const sendRequestDataStorage = async () => {\n  const url = `${URL}/api/data-storage`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataStorage;\n};\n\nexport const sendRequestUpdateDataStorage = async (dataStorage) => {\n  const url = `${URL}/api/data-storage`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({dataStorage})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataStorage;\n};\n\nexport const sendRequestTestDataStorageConnection = async (dataStorage) => {\n  const url = `${URL}/api/data-storage/test`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.connectionStatus;\n};\n\n\n\nexport const requestLogs = async (tool, logFile) => {\n  const url = `${URL}/api/${tool}/logs/${logFile}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.content;\n};\n\nexport const requestStats = async (tool) => {\n  const url = `${URL}/api/${tool}/stats`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.stats;\n};\n\nexport const requestDeleteLogFile = async (tool, logFile) => {\n  const url = `${URL}/api/${tool}/logs/${logFile}`;\n  const response = await fetch(url, {\n    method: 'POST'\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.result;\n};\n\n\nexport const requestLogFiles = async (tool) => {\n  const url = `${URL}/api/${tool}/logs`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.files;\n};\n\nexport const requestStartDeploy = async (tool, model) => {\n  const url = `${URL}/api/${tool}/deploy`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({model})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.simulationStatus;\n};\n\nexport const sendRequestStopSimulation = async () => {\n  const url = `${URL}/api/simulation/stop`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.simulationStatus;\n};\n\nexport const sendRequestSimulationStatus = async () => {\n  const url = `${URL}/api/simulation/status`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.simulationStatus;\n};\n\n\n// Test campaigns\nexport const sendRequestTestCampaign = async (tcId) => {\n  const url = `${URL}/api/test-campaigns/${tcId}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.testCampaign;\n};\n\nexport const sendRequestUpdateTestCampaign = async (id, testCampaign) => {\n  const url = `${URL}/api/test-campaigns/${id}`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({testCampaign})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.testCampaign;\n};\n\nexport const sendRequestAllTestCampaigns = async () => {\n  const url = `${URL}/api/test-campaigns`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.testCampaigns;\n};\n\nexport const sendRequestAddNewTestCampaign = async (testCampaign) => {\n  const url = `${URL}/api/test-campaigns`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({testCampaign})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.testCampaign;\n};\n\nexport const sendRequestDeleteTestCampaign = async (testCampaignId) => {\n  const url = `${URL}/api/test-campaigns/${testCampaignId}`;\n  const response = await fetch(url,{\n    method: 'DELETE',\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.result;\n};\n\n\n// DevOpts\nexport const sendRequestDevOpts = async () => {\n  const url = `${URL}/api/devopts`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.devOpts;\n};\n\nexport const sendRequestUpdateDevOpts = async (devOpts) => {\n  const url = `${URL}/api/devopts`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({devOpts})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.devOpts;\n};\n\n\n// Test cases\nexport const sendRequestTestCase = async (tcId) => {\n  const url = `${URL}/api/test-cases/${tcId}`;\n  const response = await fetch(url);\n  const status = await response.json();\n  if (status.error) {\n    throw status.error;\n  }\n  return status.testCase;\n};\n\nexport const sendRequestUpdateTestCase = async (id, testCase) => {\n  const url = `${URL}/api/test-cases/${id}`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({testCase})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.testCase;\n};\n\nexport const sendRequestAllTestCases = async () => {\n  const url = `${URL}/api/test-cases`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.testCases;\n};\n\nexport const sendRequestAddNewTestCase = async (testCase) => {\n  const url = `${URL}/api/test-cases`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({testCase})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.testCase;\n};\n\nexport const sendRequestDeleteTestCase = async (testCaseId) => {\n  const url = `${URL}/api/test-cases/${testCaseId}`;\n  const response = await fetch(url,{\n    method: 'DELETE',\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.result;\n};\n\n\n// Dataset\nexport const sendRequestDataset = async (tcId) => {\n  const url = `${URL}/api/data-sets/${tcId}`;\n  const response = await fetch(url);\n  const status = await response.json();\n  if (status.error) {\n    throw status.error;\n  }\n  return status.dataset;\n};\n\nexport const sendRequestUpdateDataset = async (id, dataset) => {\n  const url = `${URL}/api/data-sets/${id}`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({dataset})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataset;\n};\n\nexport const sendRequestAllDatasets = async () => {\n  const url = `${URL}/api/data-sets`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.datasets;\n};\n\nexport const sendRequestAddNewDataset = async (dataset) => {\n  const url = `${URL}/api/data-sets`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({dataset})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.dataset;\n};\n\nexport const sendRequestDeleteDataset = async (datasetId) => {\n  const url = `${URL}/api/data-sets/${datasetId}`;\n  const response = await fetch(url,{\n    method: 'DELETE',\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.result;\n};\n\n// Event\nexport const sendRequestEvent = async (tcId) => {\n  const url = `${URL}/api/events/${tcId}`;\n  const response = await fetch(url);\n  const status = await response.json();\n  if (status.error) {\n    throw status.error;\n  }\n  return status.event;\n};\n\nexport const sendRequestUpdateEvent = async (id, event) => {\n  const url = `${URL}/api/events/${id}`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({event})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.event;\n};\n\nexport const sendRequestEventsByDatasetId = async (dsId) => {\n  const url = `${URL}/api/events?datasetId=${dsId}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.events;\n};\n\nexport const sendRequestAddNewEvent = async (event) => {\n  const url = `${URL}/api/events`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({event})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.event;\n};\n\nexport const sendRequestDeleteEvent = async (eventId) => {\n  const url = `${URL}/api/events/${eventId}`;\n  const response = await fetch(url,{\n    method: 'DELETE',\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.result;\n};\n\n\nexport const sendRequestStartSimulation = async (modelFileName, datasetId, newDataset) => {\n  const url = `${URL}/api/simulation/start`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({\n      modelFileName,\n      options: {\n        datasetId,\n        newDataset\n      }\n    })\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.simulationStatus;\n}\n\n// Test campaign\nexport const sendRequestLaunchTestCampaign = async () => {\n  const url = `${URL}/api/devopts/start`;\n  const response = await fetch(url);\n  const status = await response.json();\n  if (status.error) {\n    throw status.error;\n  }\n  return status.runningStatus;\n};\n\nexport const sendRequestStopTestCampaign = async () => {\n  const url = `${URL}/api/devopts/stop`;\n  const response = await fetch(url);\n  const status = await response.json();\n  if (status.error) {\n    throw status.error;\n  }\n  return status.runningStatus;\n};\n\nexport const sendRequestTestCampaignStatus = async () => {\n  const url = `${URL}/api/devopts/status`;\n  const response = await fetch(url);\n  const status = await response.json();\n  if (status.error) {\n    throw status.error;\n  }\n  return status.runningStatus;\n};\n\n","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  requestModel,\n  requestAllModels,\n  requestDeleteModel,\n  requestDuplicateModel,\n  uploadModel,\n  updateModel\n} from '../api';\nimport {\n  setModel,\n  setNotification,\n  setAllModels,  \n  deleteModelOK,  \n  duplicateModelOK,  \n  addNewModelOK,\n  updateModelOK\n} from '../actions';\n\nfunction* handleRequestModel(action) {\n  try {\n    const modelFileName = action.payload;\n    const model = yield call(() => requestModel(modelFileName));\n    yield put(setModel(model));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestDeleteModel(action) {  \n  try {\n    const modelFileName = action.payload;\n    const result = yield call(() => requestDeleteModel(modelFileName));\n    yield put(deleteModelOK(modelFileName));\n    yield put(setNotification({type: 'success', message: `Model ${modelFileName} has been deleted!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestDuplicateModel(action) {  \n  try {\n    const modelFileName = action.payload;\n    const duplicatedModel = yield call(() => requestDuplicateModel(modelFileName));\n    yield put(duplicateModelOK(duplicatedModel));\n    yield put(setNotification({type: 'success', message: `Model ${duplicatedModel} has been created!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestAddNewModel(action) {  \n  try {\n    const model = action.payload;\n    const modelFileName = yield call(() => uploadModel(model));\n    yield put(addNewModelOK(modelFileName));\n    yield put(setNotification({type: 'success', message: `Model ${modelFileName} has been created!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestUpdateModel(action) {  \n  try {\n    const {modelFileName, model} = action.payload;\n    const result = yield call(() => updateModel(modelFileName, model));\n    yield put(updateModelOK(modelFileName));\n    yield put(setNotification({type: 'success', message: `Model ${modelFileName} has been updated!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestAllModels() {\n  try {\n    const models = yield call(() => requestAllModels());\n    yield put(setAllModels(models));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchRequestModel() {\n  yield takeEvery('REQUEST_MODEL', handleRequestModel);\n  yield takeEvery('REQUEST_ALL_MODELS', handleRequestAllModels);\n  yield takeEvery('REQUEST_DELETE_MODEL', handleRequestDeleteModel);\n  yield takeEvery('REQUEST_DUPLICATE_MODEL', handleRequestDuplicateModel);\n  yield takeEvery('REQUEST_ADD_NEW_MODEL', handleRequestAddNewModel);\n  yield takeEvery('REQUEST_UPDATE_MODEL', handleRequestUpdateModel);\n}\n\nexport default watchRequestModel;\n","// watcher saga -> actions -> worker saga\nimport { call, put, takeEvery, select } from \"redux-saga/effects\";\n\nimport { uploadModel } from \"../api\";\nimport { uploadModelOK, setNotification } from \"../actions\";\n\nconst getModel = ({ model }) => model;\n\nfunction* handleSaveModel(action) {\n  try {\n    const tool = action.payload ? 'data-generator' : 'simulation';\n    let model = yield select(getModel);\n    if (model) {\n      const data = yield call(() => uploadModel(tool, model));\n      yield put(uploadModelOK(data.data));\n      yield put(setNotification({type: 'success', message: `Model ${model.name} has been updated!`}));\n    } else {\n      throw Error(\"Undefined model\");\n    }\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchSaveModel() {\n  yield takeEvery(\"UPLOAD_MODEL\", handleSaveModel);\n}\n\nexport default watchSaveModel;\n","// watcher saga -> actions -> worker saga\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nimport {\n  sendRequestStartSimulation,\n  sendRequestStopSimulation,\n  sendRequestSimulationStatus\n} from \"../api\";\nimport {\n  setNotification,\n  setSimulationStatus\n} from \"../actions\";\n\nfunction* handleRequestStartSimulation(action) {\n  try {\n    const {modelFileName, datasetId, newDataset} = action.payload;\n    const SimulationStatus = yield call(() => sendRequestStartSimulation(modelFileName, datasetId, newDataset));\n    yield put(setSimulationStatus(SimulationStatus));\n    yield put(\n      setNotification({\n        type: \"success\",\n        message: `Simulation has been started!`\n      })\n    );\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({ type: \"error\", message: error }));\n  }\n}\n\nfunction* handleRequestStopSimulation() {\n  try {\n    yield call(() => sendRequestStopSimulation());\n    yield put(setSimulationStatus(null));\n    yield put(\n      setNotification({\n        type: \"success\",\n        message: `Simulation has been stopped!`\n      })\n    );\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({ type: \"error\", message: error }));\n  }\n}\n\nfunction* handleRequestSimulationStatus() {\n  try {\n    const status = yield call(() => sendRequestSimulationStatus());\n    // dispatch data\n    yield put(setSimulationStatus(status));\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({ type: \"error\", message: error }));\n  }\n}\n\nfunction* watchSimulation() {\n  yield takeEvery(\"REQUEST_START_SIMULATION\", handleRequestStartSimulation);\n  yield takeEvery(\"REQUEST_STOP_SIMULATION\", handleRequestStopSimulation);\n  yield takeEvery(\"REQUEST_SIMULATION_STATUS\", handleRequestSimulationStatus);\n}\n\nexport default watchSimulation;\n","// watcher saga -> actions -> worker saga\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { requestLogs, requestLogFiles, requestDeleteLogFile } from \"../api\";\nimport { requestLogsOK, setNotification, requestLogFilesOK } from \"../actions\";\n\nfunction* handleRequestLogFiles(action) {\n  try {\n    const isDG = action.payload;\n    const tool = isDG ? 'data-generator':'simulation';\n    const logFiles = yield call(() => requestLogFiles(tool));\n    yield put(requestLogFilesOK(logFiles));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({ type: \"error\", message: error }));\n  }\n}\n\nfunction* handleRequestLogs(action) {\n  try {\n    const {isDG, logFile} = action.payload;\n    const tool = isDG ? 'data-generator' : 'simulation';\n    const logs = yield call(() => requestLogs(tool, logFile));\n    yield put(requestLogsOK(logs));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestDeleteLogFile(action) {\n  try {\n    const {isDG, logFile} = action.payload;\n    const tool = isDG ? 'data-generator' : 'simulation';\n    yield call(() => requestDeleteLogFile(tool, logFile));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchRequestLogs() {\n  yield takeEvery('REQUEST_LOGS', handleRequestLogs);\n  yield takeEvery(\"REQUEST_LOGFILES\", handleRequestLogFiles);\n  yield takeEvery(\"REQUEST_DELETE_LOG_FILE\", handleRequestDeleteLogFile);\n}\n\nexport default watchRequestLogs;\n","// watcher saga -> actions -> worker saga\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { requestStats } from \"../api\";\nimport { requestStatsOK, setNotification } from \"../actions\";\n\nfunction* handleRequestStats(action) {\n  try {\n    const {isDG} = action.payload;\n    const tool = isDG ? 'data-generator' : 'simulation';\n    const stats = yield call(() => requestStats(tool));\n    yield put(requestStatsOK(stats));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchRequestStats() {\n  yield takeEvery('REQUEST_STATS', handleRequestStats);\n}\n\nexport default watchRequestStats;\n","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  requestDataRecorder,\n  requestAllDataRecorders,\n  requestDeleteDataRecorder,\n  requestDuplicateDataRecorder,\n  uploadDataRecorder,\n  updateDataRecorder,\n  sendRequestStartDataRecorder,\n  sendRequestStopDataRecorder,\n  sendRequestDataRecorderStatus\n} from '../api';\nimport {\n  setDataRecorder,\n  setNotification,\n  setAllDataRecorders,  \n  deleteDataRecorderOK,  \n  duplicateDataRecorderOK,  \n  addNewDataRecorderOK,\n  updateDataRecorderOK,\n  setDataRecorderStatus\n} from '../actions';\n\nfunction* handleRequestDataRecorder(action) {\n  try {\n    const dataRecorderFileName = action.payload;\n    const dataRecorder = yield call(() => requestDataRecorder(dataRecorderFileName));\n    yield put(setDataRecorder(dataRecorder));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestDeleteDataRecorder(action) {  \n  try {\n    const dataRecorderFileName = action.payload;\n    const status = yield call(() => requestDeleteDataRecorder(dataRecorderFileName));\n    yield put(deleteDataRecorderOK(dataRecorderFileName));\n    yield put(setNotification({type: 'success', message: `DataRecorder ${dataRecorderFileName} has been deleted!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestDuplicateDataRecorder(action) {  \n  try {\n    const dataRecorderFileName = action.payload;\n    const duplicatedDataRecorder = yield call(() => requestDuplicateDataRecorder(dataRecorderFileName));\n    yield put(duplicateDataRecorderOK(duplicatedDataRecorder));\n    yield put(setNotification({type: 'success', message: `DataRecorder ${duplicatedDataRecorder} has been created!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestAddNewDataRecorder(action) {  \n  try {\n    const dataRecorder = action.payload;\n    const dataRecorderFileName = yield call(() => uploadDataRecorder(dataRecorder));\n    yield put(addNewDataRecorderOK(dataRecorderFileName));\n    yield put(setNotification({type: 'success', message: `DataRecorder ${dataRecorderFileName} has been created!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestUpdateDataRecorder(action) {  \n  try {\n    const {dataRecorderFileName, dataRecorder} = action.payload;\n    const result = yield call(() => updateDataRecorder(dataRecorderFileName, dataRecorder));\n    yield put(updateDataRecorderOK(dataRecorderFileName));\n    yield put(setNotification({type: 'success', message: `DataRecorder ${dataRecorderFileName} has been updated!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestStartDataRecorder(action) {  \n  try {\n    const dataRecorderFileName = action.payload;\n    const status = yield call(() => sendRequestStartDataRecorder(dataRecorderFileName));\n    yield put(setDataRecorderStatus(status));\n    yield put(setNotification({type: 'success', message: `DataRecorder has been started!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestStopDataRecorder() {  \n  try {\n    const status = yield call(() => sendRequestStopDataRecorder());\n    yield put(setDataRecorderStatus(null));\n    yield put(setNotification({type: 'success', message: `DataRecorder has been stopped!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestDataRecorderStatus() {  \n  try {\n    const status = yield call(() => sendRequestDataRecorderStatus());\n    yield put(setDataRecorderStatus(status));\n    // yield put(setNotification({type: 'success', message: `DataRecorder ${dataRecorderFileName} has been started!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestAllDataRecorders() {\n  try {\n    const dataRecorders = yield call(() => requestAllDataRecorders());\n    yield put(setAllDataRecorders(dataRecorders));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchRequestDataRecorder() {\n  yield takeEvery('REQUEST_DATA_RECORDER', handleRequestDataRecorder);\n  yield takeEvery('REQUEST_ALL_DATA_RECORDERS', handleRequestAllDataRecorders);\n  yield takeEvery('REQUEST_DELETE_DATA_RECORDER', handleRequestDeleteDataRecorder);\n  yield takeEvery('REQUEST_DUPLICATE_DATA_RECORDER', handleRequestDuplicateDataRecorder);\n  yield takeEvery('REQUEST_ADD_NEW_DATA_RECORDER', handleRequestAddNewDataRecorder);\n  yield takeEvery('REQUEST_UPDATE_DATA_RECORDER', handleRequestUpdateDataRecorder);\n  yield takeEvery('REQUEST_START_DATA_RECORDER', handleRequestStartDataRecorder);\n  yield takeEvery('REQUEST_STOP_DATA_RECORDER', handleRequestStopDataRecorder);\n  yield takeEvery('REQUEST_DATA_RECORDER_STATUS', handleRequestDataRecorderStatus);\n}\n\nexport default watchRequestDataRecorder;\n","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  sendRequestDataStorage,\n  sendRequestUpdateDataStorage,\n  sendRequestTestDataStorageConnection\n} from '../api';\nimport {\n  setNotification,\n  setDataStorage,\n  setDataStorageConnectionStatus\n} from '../actions';\n\nfunction* handleRequestDataStorage() {\n  try {\n    const dataStorage = yield call(() => sendRequestDataStorage());\n    console.log('data storage: ', dataStorage);\n    yield put(setDataStorage(dataStorage));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestUpdateDataStorage(action) {  \n  try {\n    const newDataStorage = action.payload;\n    const result = yield call(() => sendRequestUpdateDataStorage(newDataStorage));\n    yield put(setDataStorage(newDataStorage));\n    yield put(setNotification({type: 'success', message: `DataStorage has been updated!`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestTestDataStorageConnection() {  \n  try {\n    const status = yield call(() => sendRequestTestDataStorageConnection());\n    yield put(setDataStorageConnectionStatus(status));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setDataStorageConnectionStatus(false));\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchRequestDataStorage() {\n  yield takeEvery('REQUEST_DATA_STORAGE', handleRequestDataStorage);\n  yield takeEvery('REQUEST_UPDATE_DATA_STORAGE', handleRequestUpdateDataStorage);\n  yield takeEvery('REQUEST_TEST_DATA_STORAGE_CONNECTION', handleRequestTestDataStorageConnection);\n}\n\nexport default watchRequestDataStorage;\n","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  sendRequestAllTestCampaigns,\n  sendRequestAddNewTestCampaign,\n  sendRequestDeleteTestCampaign,\n  sendRequestTestCampaign,\n  sendRequestUpdateTestCampaign,\n  sendRequestLaunchTestCampaign,\n  sendRequestStopTestCampaign,\n  sendRequestTestCampaignStatus,\n} from '../api';\nimport {\n  setNotification,\n  setAllTestCampaigns,\n  addNewTestCampaignOK,\n  deleteTestCampaignOK,\n  setCurrentTestCampaign,\n  setTestCampaignRunningStatus\n} from '../actions';\n\nfunction* handleRequestTestCampaign(action) {\n  try {\n    const tcId = action.payload;\n    const testCampaign = yield call(() => sendRequestTestCampaign(tcId));\n    yield put(setCurrentTestCampaign(testCampaign));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestUpdateTestCampaign(action) {\n  try {\n    const {id, testCampaign } = action.payload;\n    const newTestCampaign = yield call(() => sendRequestUpdateTestCampaign(id, testCampaign));\n    yield put(addNewTestCampaignOK(newTestCampaign));\n    yield put(setNotification({\n      type: 'success',\n      message: `A new test campaign ${newTestCampaign.name} has been added`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\n\nfunction* handleRequestAllTestCampaigns() {\n  try {\n    const allTestCampaigns = yield call(() => sendRequestAllTestCampaigns());\n    yield put(setAllTestCampaigns(allTestCampaigns));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestAddNewTestCampaign(action) {\n  try {\n    const testCampaign = action.payload;\n    const newTestCampaign = yield call(() => sendRequestAddNewTestCampaign(testCampaign));\n    yield put(addNewTestCampaignOK(newTestCampaign));\n    yield put(setNotification({\n      type: 'success',\n      message: `A new test campaign ${newTestCampaign.name} has been added`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestDeleteTestCampaign(action) {\n  try {\n    const testCampaignId = action.payload;\n    const result = yield call(() => sendRequestDeleteTestCampaign(testCampaignId));\n    yield put(deleteTestCampaignOK(testCampaignId));\n    yield put(setNotification({\n      type: 'success',\n      message: `Test campaign ${testCampaignId} has been deleted`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestLaunchTestCampaign() {\n  try {\n    const runningStatus = yield call(() => sendRequestLaunchTestCampaign());\n    yield put(setTestCampaignRunningStatus(runningStatus));\n    yield put(setNotification({\n      type: 'success',\n      message: `Test campaign has been started`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestStopTestCampaign() {\n  try {\n    const runningStatus = yield call(() => sendRequestStopTestCampaign());\n    yield put(setTestCampaignRunningStatus(runningStatus));\n    yield put(setNotification({\n      type: 'success',\n      message: `Test campaign has been stopped`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestTestCampaignStatus() {\n  try {\n    const runningStatus = yield call(() => sendRequestTestCampaignStatus());\n    yield put(setTestCampaignRunningStatus(runningStatus));\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* watchTestCampaigns() {\n  yield takeEvery('REQUEST_TEST_CAMPAIGN', handleRequestTestCampaign);\n  yield takeEvery('REQUEST_UPDATE_TEST_CAMPAIGN', handleRequestUpdateTestCampaign);\n  yield takeEvery('REQUEST_ALL_TEST_CAMPAIGNS', handleRequestAllTestCampaigns);\n  yield takeEvery('REQUEST_ADD_NEW_TEST_CAMPAIGN', handleRequestAddNewTestCampaign);\n  yield takeEvery('REQUEST_DELETE_TEST_CAMPAIGN', handleRequestDeleteTestCampaign);\n  yield takeEvery('REQUEST_LAUNCH_TEST_CAMPAIGN', handleRequestLaunchTestCampaign);\n  yield takeEvery('REQUEST_STOP_TEST_CAMPAIGN', handleRequestStopTestCampaign);\n  yield takeEvery('REQUEST_TEST_CAMPAIGN_STATUS', handleRequestTestCampaignStatus);\n}\n\nexport default watchTestCampaigns;","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  sendRequestAllTestCases,\n  sendRequestAddNewTestCase,\n  sendRequestDeleteTestCase,\n  sendRequestTestCase,\n  sendRequestUpdateTestCase\n} from '../api';\nimport {\n  setNotification,\n  setAllTestCases,\n  addNewTestCaseOK,\n  deleteTestCaseOK,\n  setCurrentTestCase,\n} from '../actions';\n\nfunction* handleRequestTestCase(action) {\n  try {\n    const tcId = action.payload;\n    const testCase = yield call(() => sendRequestTestCase(tcId));\n    yield put(setCurrentTestCase(testCase));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestUpdateTestCase(action) {\n  try {\n    const {id, testCase } = action.payload;\n    const newTestCase = yield call(() => sendRequestUpdateTestCase(id, testCase));\n    yield put(addNewTestCaseOK(newTestCase));\n    yield put(setNotification({\n      type: 'success',\n      message: `A new test case ${newTestCase.name} has been added`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\n\nfunction* handleRequestAllTestCases() {\n  try {\n    const allTestCases = yield call(() => sendRequestAllTestCases());\n    yield put(setAllTestCases(allTestCases));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestAddNewTestCase(action) {\n  try {\n    const testCase = action.payload;\n    const newTestCase = yield call(() => sendRequestAddNewTestCase(testCase));\n    yield put(addNewTestCaseOK(newTestCase));\n    yield put(setNotification({\n      type: 'success',\n      message: `A new test case ${newTestCase.name} has been added`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestDeleteTestCase(action) {\n  try {\n    const testCaseId = action.payload;\n    const result = yield call(() => sendRequestDeleteTestCase(testCaseId));\n    yield put(deleteTestCaseOK(testCaseId));\n    yield put(setNotification({\n      type: 'success',\n      message: `Test case ${testCaseId} has been deleted`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* watchTestCases() {\n  yield takeEvery('REQUEST_TEST_CASE', handleRequestTestCase);\n  yield takeEvery('REQUEST_UPDATE_TEST_CASE', handleRequestUpdateTestCase);\n  yield takeEvery('REQUEST_ALL_TEST_CASES', handleRequestAllTestCases);\n  yield takeEvery('REQUEST_ADD_NEW_TEST_CASE', handleRequestAddNewTestCase);\n  yield takeEvery('REQUEST_DELETE_TEST_CASE', handleRequestDeleteTestCase);\n}\n\nexport default watchTestCases;","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  sendRequestAllDatasets,\n  sendRequestAddNewDataset,\n  sendRequestDeleteDataset,\n  sendRequestDataset,\n  sendRequestUpdateDataset\n} from '../api';\nimport {\n  setNotification,\n  setAllDatasets,\n  addNewDatasetOK,\n  deleteDatasetOK,\n  setCurrentDataset,\n} from '../actions';\n\nfunction* handleRequestDataset(action) {\n  try {\n    const tcId = action.payload;\n    const dataset = yield call(() => sendRequestDataset(tcId));\n    yield put(setCurrentDataset(dataset));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestUpdateDataset(action) {\n  try {\n    const {id, Dataset } = action.payload;\n    const newDataset = yield call(() => sendRequestUpdateDataset(id, Dataset));\n    yield put(addNewDatasetOK(newDataset));\n    yield put(setNotification({\n      type: 'success',\n      message: `A new dataset ${newDataset.name} has been added`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\n\nfunction* handleRequestAllDatasets() {\n  try {\n    const allDatasets = yield call(() => sendRequestAllDatasets());\n    yield put(setAllDatasets(allDatasets));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestAddNewDataset(action) {\n  try {\n    const Dataset = action.payload;\n    const newDataset = yield call(() => sendRequestAddNewDataset(Dataset));\n    yield put(addNewDatasetOK(newDataset));\n    yield put(setNotification({\n      type: 'success',\n      message: `A new dataset ${newDataset.name} has been added`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestDeleteDataset(action) {\n  try {\n    const DatasetId = action.payload;\n    const result = yield call(() => sendRequestDeleteDataset(DatasetId));\n    yield put(deleteDatasetOK(DatasetId));\n    yield put(setNotification({\n      type: 'success',\n      message: `Test case ${DatasetId} has been deleted`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* watchDatasets() {\n  yield takeEvery('REQUEST_DATA_SET', handleRequestDataset);\n  yield takeEvery('REQUEST_UPDATE_DATA_SET', handleRequestUpdateDataset);\n  yield takeEvery('REQUEST_ALL_DATA_SETS', handleRequestAllDatasets);\n  yield takeEvery('REQUEST_ADD_NEW_DATA_SET', handleRequestAddNewDataset);\n  yield takeEvery('REQUEST_DELETE_DATA_SET', handleRequestDeleteDataset);\n}\n\nexport default watchDatasets;","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  sendRequestEventsByDatasetId,\n  sendRequestAddNewEvent,\n  sendRequestDeleteEvent,\n  sendRequestEvent,\n  sendRequestUpdateEvent\n} from '../api';\nimport {\n  setNotification,\n  setEvents,\n  addNewEventOK,\n  deleteEventOK,\n  updateEventOK\n} from '../actions';\n\nfunction* handleRequestEvent(action) {\n  try {\n    const tcId = action.payload;\n    const Event = yield call(() => sendRequestEvent(tcId));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestEventsByDatasetId(action) {\n  try {\n    const dsId = action.payload;\n    const events = yield call(() => sendRequestEventsByDatasetId(dsId));\n    yield put(setEvents(events));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestUpdateEvent(action) {\n  try {\n    const {id, event } = action.payload;\n    const newEvent = yield call(() => sendRequestUpdateEvent(id, event));\n    yield put(updateEventOK(event));\n    yield put(setNotification({\n      type: 'success',\n      message: `The event ${id} has been updated`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\n\nfunction* handleRequestAllEvents() {\n  try {\n    const allEvents = yield call(() => sendRequestEventsByDatasetId());\n    yield put(setEvents(allEvents));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestAddNewEvent(action) {\n  try {\n    const event = action.payload;\n    const newEvent = yield call(() => sendRequestAddNewEvent(event));\n    yield put(addNewEventOK(newEvent));\n    yield put(setNotification({\n      type: 'success',\n      message: `A new event ${newEvent._id} has been added`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* handleRequestDeleteEvent(action) {\n  try {\n    const eventId = action.payload;\n    const result = yield call(() => sendRequestDeleteEvent(eventId));\n    yield put(deleteEventOK(eventId));\n    yield put(setNotification({\n      type: 'success',\n      message: `Event ${eventId} has been deleted`\n    }));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({\n      type: 'error',\n      message: error\n    }));\n  }\n}\n\nfunction* watchEvents() {\n  yield takeEvery('REQUEST_EVENT', handleRequestEvent);\n  yield takeEvery('REQUEST_EVENTS_BY_DATASET_ID', handleRequestEventsByDatasetId);\n  yield takeEvery('REQUEST_UPDATE_EVENT', handleRequestUpdateEvent);\n  yield takeEvery('REQUEST_ALL_EVENTS', handleRequestAllEvents);\n  yield takeEvery('REQUEST_ADD_NEW_EVENT', handleRequestAddNewEvent);\n  yield takeEvery('REQUEST_DELETE_EVENT', handleRequestDeleteEvent);\n}\n\nexport default watchEvents;","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  sendRequestDevOpts, sendRequestUpdateDevOpts\n} from '../api';\nimport {\n  setNotification,\n  setDevOpts,\n} from '../actions';\n\nfunction* handleRequestDevOpts() {\n  try {\n    const devOpts = yield call(() => sendRequestDevOpts());\n    yield put(setDevOpts(devOpts));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestUpdateDevOpts(action) {\n  try {\n    const newDevOpts = action.payload;\n    const result = yield call(() => sendRequestUpdateDevOpts(newDevOpts));\n    yield put(setDevOpts(newDevOpts));\n    yield put(setNotification({type: 'success', message: `The dev Opts flow has been updated`}));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchDevOpts() {\n  yield takeEvery('REQUEST_DEV_OPTS', handleRequestDevOpts);\n  yield takeEvery('REQUEST_UPDATE_DEV_OPTS', handleRequestUpdateDevOpts);\n}\n\nexport default watchDevOpts;\n","import { all } from \"redux-saga/effects\";\n\nimport requestModelSaga from \"./requestModelSaga\";\nimport uploadModelSaga from \"./uploadModelSaga\";\nimport simulationSaga from \"./simulationSaga\";\nimport requestLogsSaga from './requestLogsSaga';\nimport requestStats from \"./requestStatsSaga\";\nimport requestDataRecorderSaga from \"./requestDataRecorderSaga\";\nimport dataStorageSaga from './dataStorageSaga';\nimport testCampaignsSaga from './testCampaignsSaga';\nimport testCasesSaga from './testCasesSaga';\nimport datasetsSaga from './datasetsSaga';\nimport eventsSaga from './eventsSaga';\nimport devOptsSaga from './devOptsSaga';\n\nfunction* rootSaga() {\n  yield all([\n    requestModelSaga(),\n    requestDataRecorderSaga(),\n    uploadModelSaga(),\n    simulationSaga(),\n    requestLogsSaga(),\n    requestStats(),\n    dataStorageSaga(),\n    testCampaignsSaga(),\n    devOptsSaga(),\n    testCasesSaga(),\n    datasetsSaga(),\n    eventsSaga(),\n  ]);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(sagaMiddleware)\n      ,\n      window.__REDUX_DEVTOOLS_EXTENSION__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    ),\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default configStore;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Layout, Menu, Row, Col, Typography, Spin } from \"antd\";\nimport {\n  ProfileOutlined, ApartmentOutlined, ClusterOutlined, DatabaseOutlined, DeploymentUnitOutlined, InteractionOutlined, FileTextOutlined, FolderOpenOutlined, EyeOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  setModel,\n  resetModel,\n  setNotification,\n  requestLogFiles,\n} from \"../../actions\";\nimport \"./styles.css\";\nimport { isDataGenerator } from \"../../utils\";\n\nconst { Header } = Layout;\n\nclass TSHeader extends Component {\n  render() {\n    const menuLinks = [\n      '/test-campaigns',\n      '/test-cases',\n      '/models',\n      '/simulation',\n      '/data-recorders',\n      '/data-sets',\n      '/data-storage'\n    ];\n    // Calculate the selected menu\n    let selectedMenu = 0;\n    const fullPath = window.location.pathname;\n    let currentPositionIndex = fullPath.length - 1;\n    for (let index = 0; index < menuLinks.length; index++) {\n      const positionIndex = fullPath.indexOf(menuLinks[index]);\n      if ( positionIndex > -1 && positionIndex < currentPositionIndex) {\n        currentPositionIndex = positionIndex;\n        selectedMenu = index;\n      }\n    }\n\n    return (\n      <Header>\n        <Row>\n          <Col span={4}>\n            <a href=\"/\">\n              <img\n                src={'/img/Logo.png'}\n                className=\"logo\"\n                alt=\"Logo\"\n                style={{ maxWidth: \"250px\", objectFit: \"contain\" }}\n              />\n            </a>\n          </Col>\n          <Col span={14} push={6}>\n            <Menu theme=\"dark\" mode=\"horizontal\" style={{ lineHeight: \"64px\" }} selectedKeys={`${selectedMenu}`}>\n              <Menu.Item key=\"0\">\n                <a href={menuLinks[0]}>\n                  <InteractionOutlined />\n                  Test Campaign\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"1\">\n                <a href={menuLinks[1]}>\n                  <FolderOpenOutlined />\n                  Test Case\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"2\">\n                <a href={menuLinks[2]}>\n                  <ClusterOutlined />\n                  Topology\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"3\">\n                <a href={menuLinks[3]}>\n                  <DeploymentUnitOutlined />\n                  Simulation\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <a href={menuLinks[4]}>\n                  <EyeOutlined />\n                  Data Recorder\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"5\">\n                <a href={menuLinks[5]}>\n                  <FileTextOutlined />\n                  Data Set\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"6\">\n                <a href={menuLinks[6]}>\n                  <DatabaseOutlined />\n                  Data Storage\n                </a>\n              </Menu.Item>\n            </Menu>\n          </Col>\n        </Row>\n\n      </Header>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ requesting, model, simulationStatus }) => ({\n  requesting,\n  model,\n  simulationStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNotification: ({ type, message }) =>\n    dispatch(setNotification({ type, message })),\n  setNewModel: (newModel) => {\n    dispatch(setModel(newModel));\n  },\n  resetEditor: () => {\n    dispatch(resetModel());\n  },\n  viewLogs: () => {\n    dispatch(requestLogFiles());\n  }\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(TSHeader);\n","import TSHeader from './TSHeader';\n\nexport default TSHeader;\n","import React from \"react\";\nimport { Layout, Affix } from \"antd\";\nimport VERSION from \"../../VERSION\";\n\nconst { Footer } = Layout;\nconst TSFooter = () => (\n  <Footer style={{ textAlign: \"center\", marginTop: \"30px\" }}>\n    ENACT ©{new Date().getFullYear()} Created by{\" \"}\n    <a href=\"https://www.montimage.com\">Montimage</a>. Version {VERSION}\n  </Footer>\n);\n\nexport default TSFooter;\n","import TSFooter from './TSFooter';\n\nexport default TSFooter;","import TSModal from './TSModal';\n\nexport default TSModal;","import React from \"react\";\nimport { Modal } from \"antd\";\nimport \"./style.css\";\n\nconst TSModal = ({ visible, title, footer, onCancel, children }) => (\n  <Modal visible={visible} title={title} footer={footer} onCancel={onCancel}>\n    {children}\n  </Modal>\n);\n\nexport default TSModal;\n","import React from \"react\";\nimport { Form, Input } from \"antd\";\n\nconst FormTextItem = ({\n  label,\n  defaultValue,\n  onChange,\n  placeholder,\n  helpText = null,\n  rules=null,\n}) => (\n  <Form.Item label={label} name={label} extra={helpText} rules={rules}>\n    <Input\n      defaultValue={defaultValue}\n      onChange={(v) => onChange(v.target.value)}\n      placeholder={placeholder}\n      style={{ minWidth: 300 }} \n    />\n  </Form.Item>\n);\n\nexport default FormTextItem;\n","import React from \"react\";\nimport { Form, Input } from \"antd\";\nconst { TextArea} = Input;\nconst FormTextItem = ({\n  label,\n  defaultValue,\n  onChange,\n  placeholder,\n  helpText = null,\n  rules=null,\n}) => (\n  <Form.Item label={label} name={label} extra={helpText} rules={rules}>\n    <TextArea\n      rows={4}\n      defaultValue={defaultValue}\n      onChange={(v) => onChange(v.target.value)}\n      placeholder={placeholder}\n      style={{ minWidth: 300 }} \n    />\n  </Form.Item>\n);\n\nexport default FormTextItem;\n","import React from 'react';\nimport { Form, Select } from \"antd\";\n\nconst FormSelectItem = ({label, defaultValue, onChange, options, helpText = null }) => (\n  <Form.Item label={label} extra={helpText}>\n    <Select\n      defaultValue={defaultValue ? defaultValue : (options ? options[0] : null) }\n      onChange={v => onChange( v)}\n      style={{ minWidth: 300 }} \n    >\n      {options.map(tid => (\n        <Select.Option value={tid} key={tid}>{tid}</Select.Option>\n      ))}\n    </Select>\n  </Form.Item>\n)\n\nexport default FormSelectItem;","import React from \"react\";\nimport { Form, InputNumber } from \"antd\";\n\nconst FormNumberItem = ({\n  label,\n  defaultValue,\n  min,\n  max,\n  onChange,\n  placeholder,\n  helpText = null,\n  rules = null,\n}) => (\n  <Form.Item label={label} extra={helpText} rules={rules}>\n    <InputNumber\n      min={min}\n      max={max}\n      defaultValue={defaultValue}\n      onChange={(v) => onChange(v)}\n      placeholder={placeholder}\n    />\n  </Form.Item>\n);\n\nexport default FormNumberItem;\n","import React from 'react';\nimport { Form, Switch } from \"antd\";\n\nconst FormSwitchItem = ({label, checked, onChange, checkedChildren, unCheckedChildren, helpText = null}) =>(\n  <Form.Item label={label} extra={helpText}>\n    <Switch\n      onChange={v => onChange(v)}\n      checkedChildren={checkedChildren}\n      unCheckedChildren={unCheckedChildren}\n      checked={checked}\n    />\n  </Form.Item>\n);\n\nexport default FormSwitchItem;","import React from \"react\";\nimport { Form, DatePicker } from \"antd\";\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst FormTimeRangeItem = ({ label, onChange, defaultValue, helpText = null }) => {\n  let startTime = moment();\n  let endTime = moment();\n  if (defaultValue && defaultValue.length === 2) {\n    startTime = moment(defaultValue[0]);\n    endTime = moment(defaultValue[1]);\n  }\n  return (\n    <Form.Item label={label} extra={helpText}>\n    <RangePicker\n      defaultValue={[startTime, endTime]}\n      showTime={{ format: \"HH:mm\" }}\n      format=\"YYYY-MM-DD HH:mm\"\n      onChange={(value, dateString) =>\n        onChange([\n          new Date(dateString[0]).getTime(),\n          new Date(dateString[1]).getTime()\n        ])\n      }\n    />\n  </Form.Item>\n  )\n};\n\nexport default FormTimeRangeItem;\n","import React from \"react\";\nimport { Form, Checkbox } from \"antd\";\n\nconst FormCheckBoxItem = ({ label, defaultValue, onChange, options, helpText = null  }) => (\n  <Form.Item label={label} extra={helpText}>\n    <Checkbox.Group\n      options={options}\n      defaultValue={defaultValue}\n      onChange={onChange}\n    />\n  </Form.Item>\n);\n\nexport default FormCheckBoxItem;\n","import React from \"react\";\nimport { Form, InputNumber, List, Card } from \"antd\";\n\nconst FormRegularNumberItem = ({ label, items, onChange, helpText = null  }) => (\n  <Form.Item label={label} extra={helpText}>\n    <List\n      grid={{ gutter: 16, column: items.length }}\n      dataSource={items}\n      renderItem={(item) => (\n        <List.Item>\n          <Card size=\"small\" bordered={false}  title={item.title}>\n            <InputNumber\n              onChange={(v) => onChange(item.dataPath, v)}\n              defaultValue={item.defaultValue ? item.defaultValue : 0}\n              placeholder={item.title}\n            />\n          </Card>\n        </List.Item>\n      )}\n    />\n  </Form.Item>\n);\n\nexport default FormRegularNumberItem;\n","import React from \"react\";\nimport { Form, Typography } from \"antd\";\nconst { Paragraph, Text } = Typography;\n\nconst FormEditableTextItem = ({ label, defaultValue, onChange, helpText=null }) => (\n  <Form.Item label={label} extra={helpText}>\n      <Text\n        editable={{\n          onChange: (v) => {\n            onChange(v);\n          },\n        }}\n      >\n        {defaultValue}\n      </Text>\n  </Form.Item>\n);\n\nexport default FormEditableTextItem;\n","import React from \"react\";\nimport { Form, Typography } from \"antd\";\nconst { Text } = Typography;\n\nconst FormTextNotEditableItem = ({ label, value, helpText = null, copyable = false }) => (\n  <Form.Item label={label} name={label} extra={helpText}>\n    <Text copyable={copyable}>{value}</Text>\n  </Form.Item>\n);\n\nexport default FormTextNotEditableItem;\n","import React from \"react\";\n\nimport FormTextItem from '../FormItems/FormTextItem';\nconst MongoDBOptions = ({ defaultValue, dataPath, onDataChange }) => (\n  <React.Fragment>\n    <FormTextItem\n      label=\"User\"\n      defaultValue={defaultValue.user}\n      onChange={v => onDataChange(`${dataPath ? `${dataPath}.` : ''}user`, v)}\n      placeholder=\"Username\"\n      helpText=\"Username to connect to database\"\n    />\n    <FormTextItem\n      label=\"Password\"\n      defaultValue={defaultValue.password}\n      onChange={v => onDataChange(`${dataPath ? `${dataPath}.` : ''}password`, v)}\n      placeholder=\"Password\"\n      helpText=\"Password to connect to database\"\n    />\n    <FormTextItem\n      label=\"Database\"\n      defaultValue={defaultValue.dbname}\n      onChange={v => onDataChange(`${dataPath ? `${dataPath}.` : ''}dbname`, v)}\n      placeholder=\"Database name\"\n      helpText=\"The database's name to working with\"\n      rules = {[\n              {\n                required: true,\n                message: \"Database's name is required!\"\n              }\n            ]}\n    />\n  </React.Fragment>\n);\n\nexport default MongoDBOptions;\n","import React from \"react\";\nimport { Collapse } from \"antd\";\n\nconst { Panel } = Collapse;\n\nconst CollapseForm = ({ title, children, bordered = true, active, extra=null }) => (\n  <Collapse accordion style={{margin: '10px'}} defaultActiveKey={active ? ['1'] : null} bordered={bordered}>\n    <Panel header={title} key=\"1\" extra={extra}>\n      {children}\n    </Panel>\n  </Collapse>\n);\n\nexport default CollapseForm;\n","import CollapseForm from './CollapseForm';\nexport default CollapseForm;","import ConnectionConfig from './ConnectionConfig';\nexport default ConnectionConfig;","import React from \"react\";\n\nimport FormTextItem from \"../FormItems/FormTextItem\";\nimport FormNumberItem from \"../FormItems/FormNumberItem\";\nimport MongoDBOptions from \"./MongoDBOptions\";\nimport CollapseForm from \"../CollapseForm\";\nimport { FormTextAreaItem } from \"../FormItems\";\n\nconst ConnectionConfig = ({ defaultValue, dataPath, onDataChange, type }) => (\n  <CollapseForm title=\"Connection Configuration\" bordered={false} active={true}>\n    <FormTextItem\n      label=\"Host\"\n      defaultValue={defaultValue.host}\n      onChange={(v) => onDataChange(`${dataPath ? `${dataPath}.` : \"\"}host`, v)}\n      helpText=\"Host name\"\n      rules = {[\n              {\n                required: true,\n                message: \"Host name is required!\"\n              }\n            ]}\n    />\n    <FormNumberItem\n      label=\"Port\"\n      min={1023}\n      max={65535}\n      defaultValue={defaultValue.port}\n      onChange={(v) => onDataChange(`${dataPath ? `${dataPath}.` : \"\"}port`, v)}\n      helpText=\"Port number\"\n      rules = {[\n              {\n                required: true,\n                message: \"Port number is required!\"\n              }\n            ]}\n    />\n    {type === \"MONGODB\" && (\n      <React.Fragment>\n        <MongoDBOptions\n          defaultValue={defaultValue}\n          dataPath={dataPath}\n          onDataChange={onDataChange}\n        />\n      </React.Fragment>\n    )}\n    <FormTextAreaItem\n      label=\"Options\"\n      defaultValue={JSON.stringify(defaultValue.options)}\n      onChange={(v) =>\n        onDataChange(`${dataPath ? `${dataPath}.` : \"\"}options`, v)\n      }\n      placeholder=\"{}\"\n      helpText=\"Connection options. Depends on the protocol. It must be in JSON format!\"\n    />\n  </CollapseForm>\n);\n\nexport default ConnectionConfig;\n","import React from \"react\";\nimport { FormTextItem, FormCheckBoxItems } from \"../../FormItems\";\nimport \"./DataSourceForm.css\";\nimport { Button } from \"antd\";\nimport CollapseForm from \"../../CollapseForm\";\n\nconst defaultBehaviours = [\n  \"AB_FIX_VALUE\",\n  \"AB_INVALID_VALUE\",\n  \"NORMAL_BEHAVIOUR\",\n];\n\nconst DataSourceForm = ({\n  dataPath,\n  defaultValue,\n  onChange,\n  behaviours,\n  children,\n}) => (\n  <CollapseForm title={defaultValue.key}>\n      <FormTextItem\n        label=\"key\"\n        defaultValue={defaultValue.key}\n        onChange={(v) => onChange(`${dataPath}.key`, v)}\n        placeholder=\"Require\"\n        helpText=\"The key or the id to identify this measurement\"\n        rules = {[\n              {\n                required: true,\n                message: \"Key is required!\"\n              }\n            ]}\n      />\n      <FormTextItem\n        label=\"Resource Id\"\n        defaultValue={defaultValue.resourceId}\n        onChange={(v) => onChange(`${dataPath}.resourceId`, v)}\n        placeholder=\"Optional\"\n        helpText=\"The resource id if the report follows the IPSO standard! For example: 5700 - for sensor value\"\n      />\n      <FormTextItem\n        label=\"unit\"\n        defaultValue={defaultValue.unit}\n        onChange={(v) => onChange(`${dataPath}.unit`, v)}\n        placeholder=\"Unit of the measurement\"\n        helpText=\"The unit of this measurement\"\n      />\n      <FormCheckBoxItems\n        label=\"Behaviours\"\n        defaultValue={defaultValue.behaviours}\n        onChange={(v) => onChange(`${dataPath}.behaviours`, v)}\n        options={\n          behaviours ? defaultBehaviours.concat(behaviours) : defaultBehaviours\n        }\n        helpText=\"The abnormal behaviours of the measurement.\"\n      />\n      {children}\n      <Button type=\"danger\" onClick={() => onChange(dataPath, null)}>\n        Remove\n      </Button>\n  </CollapseForm>\n);\n\nexport default DataSourceForm;\n","import React from \"react\";\nimport DataSourceForm from \"./DataSourceForm\";\nimport { FormNumberItem, FormRegularNumberItem } from \"../../FormItems\";\n\nconst EnergyForm = ({ dataPath, defaultValue, onChange }) => (\n  <React.Fragment>\n    <DataSourceForm\n      dataPath={dataPath}\n      defaultValue={defaultValue}\n      onChange={(dPath, v) => onChange(dPath, v)}\n    >\n      <FormNumberItem\n        label=\"Init Value\"\n        min={1}\n        max={65535}\n        defaultValue={defaultValue.initValue}\n        onChange={(v) => onChange(`${dataPath}.initValue`, v)}\n        helpText=\"The initialize energy value!\"\n      />\n      <FormRegularNumberItem\n        label=\"Energy\"\n        items={[\n          {\n            title: \"Consum\",\n            dataPath: `${dataPath}.consumInOnePeriod`,\n            defaultValue: defaultValue.consumInOnePeriod,\n          },\n          {\n            title: \"Low\",\n            dataPath: `${dataPath}.low`,\n            defaultValue: defaultValue.low,\n          },\n          {\n            title: \"Slow Down Rate\",\n            dataPath: `${dataPath}.slowDownRate`,\n            defaultValue: defaultValue.slowDownRate,\n          },\n        ]}\n        onChange={(dPath, v) => onChange(dPath, v)}\n        helpText=\"The energy specification!\"\n      />\n    </DataSourceForm>\n  </React.Fragment>\n);\n\nexport default EnergyForm;\n","import React from \"react\";\nimport DataSourceForm from \"./DataSourceForm\";\nimport { FormSwitchItem } from \"../../FormItems\";\n\nconst BooleanForm = ({ dataPath, defaultValue, onChange }) => (\n  <React.Fragment>\n    <DataSourceForm\n      dataPath={dataPath}\n      defaultValue={defaultValue}\n      onChange={(dPath, v) => onChange(dPath, v)}\n    >\n      <FormSwitchItem\n        label=\"Init Value\"\n        onChange={(v) => onChange(`${dataPath}.initValue`, v)}\n        checked={defaultValue.initValue ? true : false}\n        checkedChildren={\"True\"}\n        unCheckedChildren={\"False\"}\n        helpText=\"Initial value!\"\n      />\n    </DataSourceForm>\n  </React.Fragment>\n);\n\nexport default BooleanForm;\n","import React from \"react\";\nimport DataSourceForm from \"./DataSourceForm\";\nimport { FormSelectItem, FormTextItem } from \"../../FormItems\";\n\nconst EnumForm = ({ dataPath, defaultValue, onChange }) => (\n  <React.Fragment>\n    <DataSourceForm\n      dataPath={dataPath}\n      defaultValue={defaultValue}\n      onChange={(dPath, v) => onChange(dPath, v)}\n    >\n      <FormSelectItem\n        label=\"Init Value\"\n        defaultValue={defaultValue.initValue}\n        onChange={(v) => onChange(`${dataPath}.initValue`, v)}\n        options={defaultValue.values}\n        helpText=\"Initial value!\"\n      />\n      <FormTextItem\n        label=\"Value\"\n        defaultValue={JSON.stringify(defaultValue.values)}\n        onChange={(v) => onChange(`${dataPath}.values`, JSON.parse(v))}\n        placeholder=\"value1, value2, value3\"\n        helpText=\"The list of possible values. Each value should be separated by a comma (,)\"\n        rules = {[\n              {\n                required: true,\n                message: \"Values is required!\"\n              }\n            ]}\n      />\n    </DataSourceForm>\n  </React.Fragment>\n);\n\nexport default EnumForm;\n","import React from \"react\";\nimport DataSourceForm from \"./DataSourceForm\";\nimport {\n  FormNumberItem,\n  FormRegularNumberItem,\n  FormSwitchItem,\n} from \"../../FormItems\";\nimport CollapseForm from '../../CollapseForm';\nconst defaultValueConstraints = {\n  min: 0,\n  max: 100,\n  regularMin: 0,\n  regularMax: 100,\n  step: 2,\n};\nconst ValueConstraintForm = ({ defaultValue, dataPath, onChange }) => (\n  <CollapseForm title={\"Value Constraints\"}>\n    <FormRegularNumberItem\n      label=\"Range\"\n      items={[\n        {\n          title: \"Min\",\n          dataPath: `${dataPath}.min`,\n          defaultValue: defaultValue.min,\n        },\n        {\n          title: \"Max\",\n          dataPath: `${dataPath}.max`,\n          defaultValue: defaultValue.max,\n        },\n      ]}\n      onChange={(dPath, v) => onChange(dPath, v)}\n      helpText=\"The valid value range. For example the humage lifespan can be from 0 - 200\"\n    />\n    <FormRegularNumberItem\n      label=\"Regular Range\"\n      items={[\n        {\n          title: \"Regular Min\",\n          dataPath: `${dataPath}.regularMin`,\n          defaultValue: defaultValue.regularMin,\n        },\n        {\n          title: \"Regular Max\",\n          dataPath: `${dataPath}.regularMax`,\n          defaultValue: defaultValue.regularMax,\n        },\n        {\n          title: \"Step\",\n          dataPath: `${dataPath}.step`,\n          defaultValue: defaultValue.step,\n        },\n      ]}\n      onChange={(dPath, v) => onChange(dPath, v)}\n      helpText=\"The regular value range. For example the teenages age can be from 13-19. The step is the maximum different between 2 reports!\"\n    />\n  </CollapseForm>\n);\n\nconst IntegerFloatForm = ({ dataPath, defaultValue, onChange }) => (\n  <React.Fragment>\n    <DataSourceForm\n      dataPath={dataPath}\n      defaultValue={defaultValue}\n      onChange={(dPath, v) => onChange(dPath, v)}\n      behaviours={[\n        \"AB_VALUE_OUT_OF_RANGE\",\n        \"AB_VALUE_OUT_OF_REGULAR_RANGE\",\n        \"AB_VALUE_CHANGE_OUT_OF_REGULAR_STEP\",\n      ]}\n    >\n      <FormNumberItem\n        label=\"Init Value\"\n        defaultValue={defaultValue.initValue}\n        onChange={(v) => onChange(`${dataPath}.initValue`, v)}\n        helpText=\"Initial value!\"\n      />\n      <FormSwitchItem\n        label=\"Value Constraints\"\n        onChange={(v) => onChange(`${dataPath}.withValueConstraints`, v)}\n        checked={defaultValue.withValueConstraints ? true : false}\n        checkedChildren={\"Enable\"}\n        unCheckedChildren={\"Disable\"}\n        helpText=\"Enable or disable the value constraints specification\"\n      />\n      {defaultValue.withValueConstraints ? (\n        defaultValue.valueConstraints ? (\n          <ValueConstraintForm\n            defaultValue={defaultValue.valueConstraints}\n            dataPath={`${dataPath}.valueConstraints`}\n            onChange={(dPath, v) => onChange(dPath, v)}\n          />\n        ) : (\n          <ValueConstraintForm\n            defaultValue={defaultValueConstraints}\n            dataPath={`${dataPath}.valueConstraints`}\n            onChange={(dPath, v) => onChange(dPath, v)}\n          />\n        )\n      ) : (\n        <React.Fragment></React.Fragment>\n      )}\n    </DataSourceForm>\n  </React.Fragment>\n);\n\nexport default IntegerFloatForm;\n","import React, { Fragment } from \"react\";\nimport BooleanForm from \"./BooleanForm\";\nimport EnumForm from \"./EnumForm\";\nimport IntegerFloatForm from \"./IntegerFloatForm\";\n\nconst MultipleDataSources = ({ dataPath, sources, onChange }) => (\n  <Fragment>\n    {sources.map((source, index) => {\n      if (source) {\n        switch (source.type) {\n          case \"DATA_SOURCE_BOOLEAN\":\n            return <BooleanForm\n              key={index}\n              dataPath={`${dataPath}[${index}]`}\n              defaultValue={source}\n              onChange={(dPath, v) => onChange(dPath, v)}\n            />;\n          case \"DATA_SOURCE_ENUM\":\n            return <EnumForm\n              key={index}\n              dataPath={`${dataPath}[${index}]`}\n              defaultValue={source}\n              onChange={(dPath, v) => onChange(dPath, v)}\n            />;\n          case \"DATA_SOURCE_INTEGER\":\n          case \"DATA_SOURCE_FLOAT\":\n            return <IntegerFloatForm\n              key={index}\n              dataPath={`${dataPath}[${index}]`}\n              defaultValue={source}\n              onChange={(dPath, v) => onChange(dPath, v)}\n            />;\n        }\n      }\n    })}\n  </Fragment>\n);\nexport default MultipleDataSources;\n","import React from \"react\";\nimport {\n  FormNumberItem,\n  FormCheckBoxItems,\n  FormSwitchItem,\n} from \"../FormItems\";\n\nimport EnergyForm from \"./DataSourceForms/EnergyForm\";\nimport MultipleDataSources from \"./DataSourceForms/MultipleDataSources\";\nimport { Button, Divider, Dropdown, Menu } from \"antd\";\nimport { UpOutlined } from \"@ant-design/icons\";\n\nconst initEnergy = () => ({\n  type: \"DATA_SOURCE_ENERGY\",\n  key: \"battery\",\n  resourceId: \"battery-01\",\n  initValue: 1500,\n  unit: \"mA\",\n  behaviours: [],\n  low: 1000,\n  slowDownRate: 2,\n  consumInOnePeriod: 200,\n});\n\nconst initBoolean = () => ({\n  type: \"DATA_SOURCE_BOOLEAN\",\n  key: \"your-boolean-data-key\",\n  resourceId: \"boolean-measure-id\",\n  initValue: true,\n  unit: \"\",\n  behaviours: [],\n});\n\nconst initEnum = () => ({\n  type: \"DATA_SOURCE_ENUM\",\n  key: \"your-enum-data-key\",\n  resourceId: \"enum-measure-id\",\n  initValue: \"value1\",\n  unit: \"\",\n  behaviours: [],\n  values: [\"value1\", \"value2\"],\n});\n\nconst initInteger = () => ({\n  type: \"DATA_SOURCE_INTEGER\",\n  key: \"your-integer-data-key\",\n  resourceId: \"integer-measure-id\",\n  initValue: 10,\n  unit: \"\",\n  behaviours: [],\n  valueConstraints: {\n    min: 0,\n    max: 100,\n    regularMin: 20,\n    regularMax: 80,\n    step: 1,\n  },\n});\n\nconst initFloat = () => ({\n  type: \"DATA_SOURCE_FLOAT\",\n  key: \"your-float-data-key\",\n  resourceId: \"float-measure-id\",\n  initValue: 10.0,\n  unit: \"\",\n  behaviours: [],\n  valueConstraints: {\n    min: 0,\n    max: 100,\n    regularMin: 20,\n    regularMax: 80,\n    step: 1,\n  },\n});\n\nconst DataGeneratorForm = ({ dataPath, dataSpecs, onDataChange }) => (\n  <React.Fragment>\n    <FormNumberItem\n      label=\"Number of Instance\"\n      min={1}\n      max={1000000}\n      placeholder=\"Number of instances\"\n      defaultValue={dataSpecs.scale ? dataSpecs.scale : 1}\n      onChange={(v) => onDataChange(`${dataPath}.scale`, v)}\n      helpText=\"The number of device with the same configuration. The id of device will be indexed automatically!\"\n    />\n    <FormNumberItem\n      label=\"Time Internal (in seconds)\"\n      min={1}\n      max={65535}\n      defaultValue={dataSpecs.timePeriod ? dataSpecs.timePeriod : 5}\n      onChange={(v) => onDataChange(`${dataPath}.timePeriod`, v)}\n      helpText=\"The time period to define the publishing data frequency\"\n      rules={[\n        {\n          required: true,\n          message: \"Time internal is required!\",\n        },\n      ]}\n    />\n\n    <FormCheckBoxItems\n      label=\"Sensor Behaviours\"\n      defaultValue={dataSpecs.sensorBehaviours}\n      onChange={(v) => onDataChange(`${dataPath}.sensorBehaviours`, v)}\n      options={[\n        \"AB_LOW_ENERGY\",\n        \"AB_OUT_OF_ENERGY\",\n        \"AB_NODE_FAILED\",\n        \"AB_DOS_ATTACK\",\n        \"AB_SLOW_DOS_ATTACK\",\n        \"NORMAL_BEHAVIOUR\",\n      ]}\n      helpText=\"The possible behaviours of the sensor\"\n    />\n    {dataSpecs.sensorBehaviours.indexOf(\"AB_DOS_ATTACK\") > -1 && (\n      <FormNumberItem\n        label=\"Speedup rate\"\n        min={1}\n        max={100}\n        defaultValue={dataSpecs.dosAttackSpeedUpRate}\n        onChange={(v) => onDataChange(`${dataPath}.dosAttackSpeedUpRate`, v)}\n        helpText=\"The speedup rate in DDOS attack. Define how many time faster the sensor will publish data compare to normal condition\"\n      />\n    )}\n    {dataSpecs.sensorBehaviours.indexOf(\"AB_NODE_FAILED\") > -1 && (\n      <FormNumberItem\n        label=\"Time Before Failed (seconds)\"\n        min={1}\n        max={65535}\n        defaultValue={dataSpecs.timeBeforeFailed}\n        onChange={(v) => onDataChange(`${dataPath}.timeBeforeFailed`, v)}\n        helpText=\"The time before this device going to be failed!\"\n      />\n    )}\n    <FormSwitchItem\n      label=\"IP Smart Object Format\"\n      onChange={(v) => onDataChange(`${dataPath}.isIPSOFormat`, v)}\n      checked={dataSpecs.isIPSOFormat ? true : false}\n      checkedChildren={\"Enable\"}\n      unCheckedChildren={\"Disable\"}\n      helpText=\"Change the data report to IP Smart Object format\"\n    />\n    <Divider>\n      <h3>Measurements</h3>\n    </Divider>\n    <FormSwitchItem\n      label=\"Energy Measurement\"\n      onChange={(v) => {\n        onDataChange(`${dataPath}.withEnergy`, v);\n        if (v && !dataSpecs.energy) {\n          onDataChange(`${dataPath}.energy`, initEnergy());\n        }\n      }}\n      checked={dataSpecs.withEnergy ? true : false}\n      checkedChildren={\"Enable\"}\n      unCheckedChildren={\"Disable\"}\n      helpText=\"Enable or disable the energy measurement for this device\"\n    />\n    {dataSpecs.withEnergy && (\n      <EnergyForm\n        dataPath={`${dataPath}.energy`}\n        defaultValue={dataSpecs.energy ? dataSpecs.energy : initEnergy()}\n        onChange={(dPath, v) => onDataChange(dPath, v)}\n      />\n    )}\n    <MultipleDataSources\n      dataPath={`${dataPath}.sources`}\n      sources={dataSpecs.sources ? dataSpecs.sources : []}\n      onChange={(dPath, v) => onDataChange(dPath, v)}\n    />\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item\n            key=\"1\"\n            onClick={() => {\n              const index = dataSpecs.sources.length;\n              const dPath = `${dataPath}.sources[${index}]`;\n              onDataChange(dPath, initBoolean());\n            }}\n          >\n            Boolean Data Type\n          </Menu.Item>\n          <Menu.Item\n            key=\"2\"\n            onClick={() => {\n              const index = dataSpecs.sources.length;\n              const dPath = `${dataPath}.sources[${index}]`;\n              onDataChange(dPath, initEnum());\n            }}\n          >\n            Enum Data Type\n          </Menu.Item>\n          <Menu.Item\n            key=\"3\"\n            onClick={() => {\n              const index = dataSpecs.sources.length;\n              const dPath = `${dataPath}.sources[${index}]`;\n              onDataChange(dPath, initInteger());\n            }}\n          >\n            Integer Data Type\n          </Menu.Item>\n          <Menu.Item\n            key=\"4\"\n            onClick={() => {\n              const index = dataSpecs.sources.length;\n              const dPath = `${dataPath}.sources[${index}]`;\n              onDataChange(dPath, initFloat());\n            }}\n          >\n            Float Data Type\n          </Menu.Item>\n        </Menu>\n      }\n      placement=\"topLeft\"\n    >\n      <Button type=\"primary\" style={{ margin: \"20px\" }}>\n        Add New Measure <UpOutlined />\n      </Button>\n    </Dropdown>\n  </React.Fragment>\n);\n\nexport default DataGeneratorForm;\n","import React, { Component } from \"react\";\nimport TSModal from \"../TSModal\";\nimport { Form, Button } from \"antd\";\nimport {\n  FormTextItem,\n  FormSwitchItem,\n  FormEditableTextItem,\n  FormTextNotEditableItem,\n  FormSelectItem,\n} from \"../FormItems\";\nimport DataReplayerForm from \"./DataReplayerForm\";\nimport {\n  updateObjectByPath,\n} from \"../../utils\";\nimport DataGeneratorForm from \"./DataGeneratorForm\";\n\nconst replayDataSource = () => ({\n  connConfig: {\n    host: \"localhost\",\n    port: 27017,\n    username: null,\n    password: null,\n    options: null,\n  },\n  devId: null,\n  dbname: null,\n  startTime: Date.now(),\n  endTime: Date.now(),\n});\n\nconst generateDataSpecs = () => ({\n  timePeriod: 5,\n  scale: 1,\n  dosAttackSpeedUpRate: 5,\n  timeBeforeFailed: 20,\n  sensorBehaviours: [],\n  withEnergy: false,\n  isIPSOFormat: false,\n  energy: null,\n  sources: [],\n});\n\nconst initSensor = () => ({\n  id: `id-${Date.now()}`,\n  objectId: null,\n  name: `name-${Date.now()}`,\n  enable: true,\n  isFromDatabase: false,\n  topic: null,\n  dataSpecs: generateDataSpecs(),\n});\n\nclass SensorModal extends Component {\n  constructor(props) {\n    super(props);\n    const { sensorData, deviceId } = props;\n    this.state = {\n      sensorData,\n      isChanged: false,\n    };\n  }\n\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState };\n      updateObjectByPath(newData, dataPath, value);\n      return { ...newData, isChanged: true };\n    });\n  }\n\n  saveData() {\n    const { sensorData } = this.state;\n    this.props.onOK(sensorData);\n    this.props.onClose();\n  }\n\n  render() {\n    const { sensorData, isChanged } = this.state;\n    const {enable, onClose, deviceId} = this.props;\n    if (!sensorData) return null;\n    return (\n      <TSModal\n        title={`Sensor ${sensorData.name}`}\n        visible={enable}\n        onCancel={() => onClose()}\n        footer={[\n          <Button key=\"cancel\" onClick={() => onClose()}>\n            Cancel\n          </Button>,\n          <Button key=\"ok\" type=\"primary\" onClick={() => this.saveData()} disabled={isChanged ? false: true}>\n            OK\n          </Button>,\n        ]}\n      >\n        <Form\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 14,\n          }}\n        >\n          <FormTextNotEditableItem label=\"Device\" value={deviceId} />\n          <FormTextItem\n            label=\"Id\"\n            defaultValue={sensorData.id}\n            onChange={(v) => this.onDataChange(\"sensorData.id\", v)}\n            placeholder=\"Identify of the device\"\n            helpText=\"The identify of the device\"\n            rules={[\n              {\n                required: true,\n                message: \"Id is required!\",\n              },\n            ]}\n          />\n          <FormTextItem\n            label=\"Object Id\"\n            defaultValue={sensorData.objectId}\n            onChange={(v) => this.onDataChange(\"sensorData.objectId\", v)}\n            placeholder=\"Identify of the type of device (IPSO Standard)\"\n            helpText=\"The identify of the device type based on IPSO format. For example 3313 - for temperature\"\n          />\n          <FormTextItem\n            label=\"Name\"\n            defaultValue={sensorData.name}\n            onChange={(v) => this.onDataChange(\"sensorData.name\", v)}\n            helpText=\"The name of the device\"\n          />\n          <FormEditableTextItem\n            label=\"Topic\"\n            defaultValue={sensorData.topic}\n            onChange={(v) => this.onDataChange(\"sensorData.topic\", v)}\n            helpText=\"The topic to which the sensor will publish data!\"\n          />\n          <FormSwitchItem\n            label=\"Enable\"\n            onChange={(v) => this.onDataChange(\"sensorData.enable\", v)}\n            checked={sensorData.enable ? true : false}\n            checkedChildren={\"On\"}\n            unCheckedChildren={\"Off\"}\n            helpText=\"Enable or disable this device from the simulation\"\n          />\n          <FormSelectItem\n            label=\"Data Source\"\n            defaultValue={sensorData.dataSource}\n            options={['DATA_SOURCE_DATASET','DATA_SOURCE_GENERATOR','DATA_SOURCE_RECORDER']}\n            onChange={v => this.onDataChange('sensorData.dataSource', v)}\n          />\n          <DataGeneratorForm\n            dataPath={\"sensorData.dataSpecs\"}\n            dataSpecs={sensorData.dataSpecs}\n            onDataChange={(dataPath, value) => this.onDataChange(dataPath, value)}\n          />\n        </Form>\n      </TSModal>\n    );\n  }\n}\n\nexport default SensorModal;\n","import SensorModal from './SensorModal';\nimport './style.css';\nexport default SensorModal;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport TSModal from \"../TSModal\";\nimport {\n  addSimulationActuator,\n  showModal,\n  selectActuator,\n} from \"../../actions\";\nimport { Form, Button, Alert } from \"antd\";\nimport {\n  updateObjectByPath,\n} from \"../../utils\";\nimport {\n  FormTextItem,\n  FormTextNotEditableItem,\n  FormNumberItem,\n  FormSwitchItem,\n  FormEditableTextItem,\n} from \"../FormItems\";\n\nclass ActuatorModal extends Component {\n  constructor(props) {\n    super(props);\n    const { actuatorData } = props;\n    this.state = {\n      actuatorData,\n      isChanged: false\n    };\n  }\n\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState };\n      updateObjectByPath(newData, dataPath, value);\n      return { ...newData, isChanged: true };\n    });\n  }\n\n  saveData() {\n    const {actuatorData} = this.state;\n    this.props.onOK({actuatorData});\n    this.props.onClose();\n  }\n\n  render() {\n    const { actuatorData, isChanged } = this.state;\n    if (!actuatorData) return null;\n    const { deviceId, onClose, enable} = this.props;\n    return (\n      <TSModal\n        title={\"Actuator\"}\n        visible={enable}\n        onCancel={() => onClose()}\n        footer={\n          [<Button key=\"cancel\" onClick={() => onClose()}>\n          Cancel\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => this.saveData()} disabled={isChanged? false:true}>\n          OK\n        </Button>]\n        }\n      >\n        <Form\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 14,\n          }}\n        >\n        <FormTextNotEditableItem label=\"Device\" value={deviceId} />\n          <FormTextItem\n            label=\"Id\"\n            defaultValue={actuatorData.id}\n            onChange={(v) => this.onDataChange(\"actuatorData.id\", v)}\n            helpText=\"The identify of the actuator\"\n            rules = {[\n              {\n                required: true,\n                message: \"Id is required!\"\n              }\n            ]}\n          />\n          <FormTextItem\n            label=\"Object Id\"\n            defaultValue={actuatorData.objectId}\n            onChange={(v) => this.onDataChange(\"actuatorData.objectId\", v)}\n            placeholder=\"Identify of device type (IP Smart Object Format)\"\n            helpText=\"The identify of the device type based on IPSO format. For example 3313 - for temperature\"\n          />\n          <FormTextItem\n            label=\"Name\"\n            defaultValue={actuatorData.name}\n            onChange={(v) => this.onDataChange(\"actuatorData.name\", v)}\n            helpText=\"The actuator's name\"\n          />\n          <FormNumberItem\n            label=\"Number of Instance\"\n            min={1}\n            max={1000000}\n            placeholder=\"Number of instances\"\n            defaultValue={actuatorData.scale ? actuatorData.scale : 1}\n            onChange={(v) => this.onDataChange(\"actuatorData.scale\", v)}\n            helpText=\"The number of actuators with the same configuration. The id of the generated actuator will be indexed automatically\"\n          />\n          <FormEditableTextItem\n            label=\"Topic\"\n            defaultValue={actuatorData.topic}\n            onChange={(v) => this.onDataChange(\"actuatorData.topic\", v)}\n            helpText=\"The MQTT/STOMP topic on which the actuator will be listening to receive actuated data\"\n          />\n          <FormSwitchItem\n            label=\"Enable\"\n            onChange={(v) => this.onDataChange(\"actuatorData.enable\", v)}\n            checked={actuatorData.enable ? true : false}\n            checkedChildren={\"On\"}\n            unCheckedChildren={\"Off\"}\n            helpText=\"Enable or disable this actuator from the simulation\"\n          />\n        </Form>\n      </TSModal>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ editingForm, model }) => ({\n  formID: editingForm.formID,\n  selectedActuator: editingForm.selectedActuator,\n  model,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (modalID) => dispatch(showModal(modalID)),\n  selectActuator: (act) => dispatch(selectActuator(act)),\n  addSimulationActuator: (deviceID, data) =>\n    dispatch(addSimulationActuator({ deviceID, actuator: data })),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(ActuatorModal);\n","import ActuatorModal from './ActuatorModal';\nimport './style.css';\nexport default ActuatorModal;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JSONEditor from 'jsoneditor/dist/jsoneditor-minimalist';\nimport 'jsoneditor/dist/jsoneditor.css';\n\n/**\n * @typedef {{\n * tree: string,\n * view: string,\n * form: string,\n * code: string,\n * text: string,\n * allValues: Array<string>\n * }} TJsonEditorModes\n */\nconst modes = {\n    tree: 'tree',\n    view: 'view',\n    form: 'form',\n    code: 'code',\n    text: 'text'\n};\n\nconst values = Object.values(modes);\n\nmodes.allValues = values;\n\n/**\n * @type {object}\n * @property {object} [value]\n * @property {string} [mode='tree'] - Set the editor mode.\n * @property {string} [name=undefined] - Initial field name for the root node\n * @property {object} [schema] - Validate the JSON object against a JSON schema.\n * @property {object} [schemaRefs] - Schemas that are referenced using\n * the $ref property\n * @property {Function} [onChange] - Set a callback function\n * triggered when the contents of the JSONEditor change.\n * Called without parameters. Will only be triggered on changes made by the user.\n * Return new json.\n * @property {Function} [onError] - Set a callback function triggered when an error occurs.\n * Invoked with the error as first argument.\n * The callback is only invoked for errors triggered by a users action,\n * like switching from code mode to tree mode or clicking\n * the Format button whilst the editor doesn't contain valid JSON.\n * @property {Function} [onModeChange] - Set a callback function\n * triggered right after the mode is changed by the user.\n * @property {object} [ace] - Provide a version of the Ace editor.\n * Only applicable when mode is code\n * @property {object} [ajv] - Provide a instance of ajv,\n * the library used for JSON schema validation.\n * @property {string} [theme] - Set the Ace editor theme,\n * uses included 'ace/theme/jsoneditor' by default.\n * @property {boolean} [history=false] - Enables history,\n * adds a button Undo and Redo to the menu of the JSONEditor. Only applicable when\n * mode is 'tree' or 'form'\n * @property {boolean} [navigationBar=true] - Adds navigation bar to the menu\n * the navigation bar visualize the current position on the\n * tree structure as well as allows breadcrumbs navigation.\n * @property {boolean} [statusBar=true] - Adds status bar to the buttom of the editor\n * the status bar shows the cursor position and a count of the selected characters.\n * Only applicable when mode is 'code' or 'text'.\n * @property {boolean} [search=true] - Enables a search box in\n * the upper right corner of the JSONEditor.\n * @property {Array<string>} [allowedModes] - Create a box in the editor menu where\n * the user can switch between the specified modes.\n * @property {(string|PropTypes.elementType)} [tag='div'] - Html element, or react element to render\n * @property {object} [htmlElementProps] - html element custom props\n * @property {Function} [innerRef] - callback to get html element reference\n */\nexport default class Editor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.htmlElementRef = null;\n        this.jsonEditor = null;\n\n        this.handleChange = this.handleChange.bind(this);\n        this.setRef = this.setRef.bind(this);\n        this.collapseAll = this.collapseAll.bind(this);\n        this.expandAll = this.expandAll.bind(this);\n        this.focus = this.focus.bind(this);\n    }\n\n    componentDidMount() {\n        const {\n            allowedModes,\n            innerRef,\n            htmlElementProps,\n            tag,\n            onChange,\n            ...rest\n        } = this.props;\n\n        this.createEditor({\n            ...rest,\n            modes: allowedModes\n        });\n    }\n\n    // eslint-disable-next-line react/sort-comp\n    componentDidUpdate({\n        allowedModes,\n        schema,\n        name,\n        theme,\n        schemaRefs,\n        innerRef,\n        htmlElementProps,\n        tag,\n        onChange,\n        ...rest\n    }) {\n        if (this.jsonEditor) {\n            if (theme !== this.props.theme) {\n                this.createEditor({\n                    ...rest,\n                    theme,\n                    modes: allowedModes\n                });\n            } else {\n                if (schema !== this.props.schema\n                    || schemaRefs !== this.props.schemaRefs\n                ) {\n                    this.jsonEditor.setSchema(schema, schemaRefs);\n                }\n\n                if (name !== this.jsonEditor.getName()) {\n                    this.jsonEditor.setName(name);\n                }\n            }\n        }\n    }\n\n    shouldComponentUpdate({ htmlElementProps }) {\n        return htmlElementProps !== this.props.htmlElementProps;\n    }\n\n    componentWillUnmount() {\n        if (this.jsonEditor) {\n            this.jsonEditor.destroy();\n            this.jsonEditor = null;\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (this.props.value !== newProps.value) {\n            this.jsonEditor.set(newProps.value);\n        }\n    }\n\n    setRef(element) {\n        this.htmlElementRef = element;\n        if (this.props.innerRef) {\n            this.props.innerRef(element);\n        }\n    }\n\n    createEditor({ value, ...rest }) {\n        if (this.jsonEditor) {\n            this.jsonEditor.destroy();\n        }\n\n        this.jsonEditor = new JSONEditor(this.htmlElementRef, {\n            onChange: this.handleChange,\n            ...rest\n        });\n\n        this.jsonEditor.set(value);\n    }\n\n    handleChange() {\n        if (this.props.onChange) {\n            try {\n                const text = this.jsonEditor.getText();\n                if (text === '') {\n                    this.props.onChange(null);\n                }\n\n                const currentJson = this.jsonEditor.get();\n                if (this.props.value !== currentJson) {\n                    this.props.onChange(currentJson);\n                }\n            } catch (err) {\n                this.err = err;\n            }\n        }\n    }\n\n    collapseAll() {\n        if (this.jsonEditor) {\n            this.jsonEditor.collapseAll();\n        }\n    }\n\n    expandAll() {\n        if (this.jsonEditor) {\n            this.jsonEditor.expandAll();\n        }\n    }\n\n    focus() {\n        if (this.jsonEditor) {\n            this.jsonEditor.focus();\n        }\n    }\n\n    render() {\n        const {\n            htmlElementProps,\n            tag\n        } = this.props;\n\n        return React.createElement(\n            tag,\n            {\n                ...htmlElementProps,\n                ref: this.setRef\n            }\n        );\n    }\n}\n\nEditor.propTypes = {\n    //  jsoneditor props\n    value: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    mode: PropTypes.oneOf(values),\n    name: PropTypes.string,\n    schema: PropTypes.object,\n    schemaRefs: PropTypes.object,\n\n    onChange: PropTypes.func,\n    onError: PropTypes.func,\n    onModeChange: PropTypes.func,\n\n    ace: PropTypes.object,\n    ajv: PropTypes.object,\n    theme: PropTypes.string,\n    history: PropTypes.bool,\n    navigationBar: PropTypes.bool,\n    statusBar: PropTypes.bool,\n    search: PropTypes.bool,\n    allowedModes: PropTypes.arrayOf(PropTypes.oneOf(values)),\n\n    //  custom props\n    tag: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n    htmlElementProps: PropTypes.object,\n    innerRef: PropTypes.func,\n};\n\nEditor.defaultProps = {\n    tag: 'div',\n    mode: modes.tree,\n    history: false,\n    search: true,\n    navigationBar: true,\n    statusBar: true,\n};\n\n/**\n * @type TJsonEditorModes\n */\nEditor.modes = modes;\n","import JSONView from './JSONView';\n\nexport default JSONView;\n","import React from 'react';\nimport JsonEditor from './Editor';\n\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n\nimport './style.css';\n\nconst JSONView = ({value, onChange}) => (\n  <JsonEditor\n    value={value}\n    onChange={onChange}\n    allowedModes={[\"tree\", \"code\"]}\n    ace={ace}\n    theme=\"ace/theme/github\"\n  />\n)\n\nexport default JSONView;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { notification, Spin, Layout, Typography } from \"antd\";\nimport { resetNotification } from \"../actions\";\nimport TSFooter from \"../components/TSFooter\";\nimport \"./styles.css\";\nconst { Title, Text } = Typography;\n\nconst { Content } = Layout;\n\nclass LayoutPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      requesting,\n      notify,\n      resetNotification,\n      pageTitle,\n      pageSubTitle,\n    } = this.props;\n    return (\n      <Layout style={{backgroundColor: 'white'}}>\n        {notify &&\n          notification[notify.type]({\n            message: notify.type.toUpperCase(),\n            description:\n              typeof notify.message === \"object\"\n                ? JSON.stringify(notify.message)\n                : notify.message,\n            onClose: () => resetNotification(),\n          })}\n        <Layout style={{ padding: \"0px 48px 48px\", margin: \"30px 50px 50px\" }}>\n          <Content>\n            {pageTitle && <Title level={2}>{pageTitle}</Title>}\n            {pageSubTitle && <Text type=\"secondary\">{pageSubTitle}</Text>}\n            <div style={{ paddingTop: \"30px\" }} className=\"site-layout-content\">\n              {requesting ? <Spin tip=\"Loading...\" /> : this.props.children}\n              <TSFooter />\n            </div>\n          </Content>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ requesting, notify }) => ({\n  notify,\n  requesting,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetNotification: () => dispatch(resetNotification()),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(LayoutPage);\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Switch, Form, List, Typography, Divider } from \"antd\";\n// all the edit forms\nimport SensorModal from \"../components/SensorModal\";\nimport ActuatorModal from \"../components/ActuatorModal\";\n\nimport {\n  requestModel,\n  requestAddNewModel,\n  requestUpdateModel,\n  showModal,\n  selectDevice,\n  changeModelName,\n  deleteThing,\n  changeStatusThing,\n  selectSensor,\n  deleteSimulationSensor,\n  changeStatusSensor,\n  selectActuator,\n  deleteSimulationActuator,\n  changeStatusActuator,\n} from \"../actions\";\nimport JSONView from \"../components/JSONView\";\nimport LayoutPage from \"./LayoutPage\";\n\nimport { SwitcherOutlined, ExportOutlined } from \"@ant-design/icons\";\nimport {\n  FormEditableTextItem,\n  FormSelectItem,\n  FormTextItem,\n  FormSwitchItem,\n  FormTextAreaItem,\n} from \"../components/FormItems\";\nimport ConnectionConfig from \"../components/ConnectionConfig\";\nimport CollapseForm from \"../components/CollapseForm\";\nimport {\n  getQuery,\n  getLastPath,\n  updateObjectByPath,\n  deepCloneObject,\n} from \"../utils\";\n\nconst { Text } = Typography;\n\nconst ModelDeviceItem = ({\n  data,\n  onChange,\n  onDelete,\n  onDuplicate,\n  changeModalId,\n  selectedModalId,\n  onEnable,\n}) => (\n  <CollapseForm\n    title={`${data.name}`}\n    extra={\n      <Fragment>\n        <Switch\n          defaultChecked={data.enable ? true : false}\n          checkedChildren=\"Enable\"\n          unCheckedChildren=\"Disable\"\n          onClick={(value, event) => {\n            event.stopPropagation();\n            onEnable();\n          }}\n          style={{ marginRight: 10 }}\n        />\n        <Button\n          onClick={(event) => {\n            event.stopPropagation();\n            onDuplicate();\n          }}\n          size=\"small\"\n          style={{ marginRight: 10 }}\n        >\n          Duplicate\n        </Button>\n        <Button\n          onClick={(event) => {\n            event.stopPropagation();\n            onDelete();\n          }}\n          size=\"small\"\n          danger\n        >\n          Delete\n        </Button>\n      </Fragment>\n    }\n  >\n    <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }}>\n      <FormEditableTextItem\n        label=\"Name\"\n        defaultValue={data.name}\n        onChange={(newName) => onChange(\"name\", newName)}\n      />\n      <FormEditableTextItem\n        label=\"Id\"\n        defaultValue={data.id}\n        onChange={(newId) => onChange(\"id\", newId)}\n      />\n      <Divider orientation=\"left\">Test Broker </Divider>\n      <FormSelectItem\n        label=\"Protocol\"\n        defaultValue={data.testBroker.protocol}\n        onChange={(v) => onChange(\"testBroker.protocol\", v)}\n        options={[\"MQTT\", \"MONGODB\"]}\n      />\n      <ConnectionConfig\n        defaultValue={data.testBroker.connConfig}\n        dataPath={\"testBroker.connConfig\"}\n        onDataChange={onChange}\n        type={data.testBroker.protocol}\n      />\n      <Divider orientation=\"left\">Production Broker </Divider>\n      {data.productionBroker ? (\n        <Fragment>\n          <FormSelectItem\n            label=\"Protocol\"\n            defaultValue={data.productionBroker.protocol}\n            onChange={(v) => onChange(\"productionBroker.protocol\", v)}\n            options={[\"MQTT\", \"MONGODB\"]}\n          />\n          <ConnectionConfig\n            defaultValue={data.productionBroker.connConfig}\n            dataPath={\"productionBroker.connConfig\"}\n            onDataChange={onChange}\n            type={data.productionBroker.protocol}\n          />\n          <Button danger onClick={() => onChange(\"productionBroker\", null)}>\n            Remove Production Broker\n          </Button>\n        </Fragment>\n      ) : (\n        <Button\n          onClick={() =>\n            onChange(\"productionBroker\", {\n              protocol: \"MQTT\",\n              connConfig: {\n                host: \"localhost\",\n                port: 1883,\n                options: null,\n              },\n            })\n          }\n        >\n          Add Production Broker\n        </Button>\n      )}\n      <Divider orientation=\"left\">Sensors</Divider>\n      <List\n        header={<strong>Sensors ({data.sensors.length})</strong>}\n        footer={\n          <Button onClick={() => showModal(\"SENSOR-FORM\")}>\n            Add New Sensor\n          </Button>\n        }\n        size=\"small\"\n        bordered\n        dataSource={data.sensors}\n        renderItem={(item, index) => (\n          <List.Item\n            actions={[\n              <Switch\n                checkedChildren=\"Enable\"\n                unCheckedChildren=\"Disable\"\n                defaultChecked={item.enable ? true : false}\n                onChange={() =>\n                  onChange(`sensors[${index}].enable`, !item.enable)\n                }\n              />,\n              <Button\n                size=\"small\"\n                key=\"edit\"\n                onClick={() => changeModalId(item.id)}\n              >\n                Edit\n              </Button>,\n              <Button\n                size=\"small\"\n                key=\"duplicate\"\n                onClick={() => {\n                  const newSensor = {\n                    ...item,\n                    id: `${item.id}-duplicated`,\n                    name: `${item.name} [duplicaed]`,\n                  };\n                  let newSensors = [...data.sensors, newSensor];\n                  onChange(\"sensors\", newSensors);\n                }}\n              >\n                Duplicate\n              </Button>,\n              <Button\n                size=\"small\"\n                danger\n                key=\"delete\"\n                onClick={() => {\n                  if (data.sensors.length === 1) {\n                    onChange(\"sensors\", []);\n                  } else {\n                    let newSensors = [...data.sensors];\n                    newSensors.splice(index, 1);\n                    onChange(\"sensors\", newSensors);\n                  }\n                }}\n              >\n                Delete\n              </Button>,\n            ]}\n          >\n            <Text>{item.name}</Text>\n            <SensorModal\n              enable={selectedModalId === item.id}\n              sensorData={item}\n              deviceId={data.id}\n              onOK={(dataPath, value) =>\n                onChange(`sensors[${index}].${dataPath}`, value)\n              }\n              onClose={() => {\n                changeModalId(null);\n              }}\n            />\n          </List.Item>\n        )}\n      />\n      <p></p>\n      <Divider orientation=\"left\">Actuator </Divider>\n      <List\n        header={<strong>Actuators ({data.actuators.length})</strong>}\n        footer={\n          <Button onClick={() => showModal(\"ACTUATOR-FORM\")}>\n            Add New Actuator\n          </Button>\n        }\n        size=\"small\"\n        bordered\n        dataSource={data.actuators}\n        renderItem={(item, index) => (\n          <List.Item\n            actions={[\n              <Switch\n                checkedChildren=\"Enable\"\n                unCheckedChildren=\"Disable\"\n                defaultChecked={item.enable ? true : false}\n                onChange={() =>\n                  onChange(`actuators[${index}].enable`, !item.enable)\n                }\n              />,\n              <Button\n                size=\"small\"\n                key=\"edit\"\n                onClick={() => changeModalId(item.id)}\n              >\n                Edit\n              </Button>,\n              <Button\n                size=\"small\"\n                key=\"duplicate\"\n                onClick={() => {\n                  const newActuator = {\n                    ...item,\n                    id: `${item.id}-duplicated`,\n                    name: `${item.name} [duplicaed]`,\n                  };\n                  let newActuators = [...data.actuators, newActuator];\n                  onChange(\"actuators\", newActuators);\n                }}\n              >\n                Duplicate\n              </Button>,\n              <Button\n                size=\"small\"\n                danger\n                key=\"delete\"\n                onClick={() => {\n                  if (data.actuators.length === 1) {\n                    onChange(\"actuators\", []);\n                  } else {\n                    let newActuators = [...data.actuators];\n                    newActuators.splice(index, 1);\n                    onChange(\"actuators\", newActuators);\n                  }\n                }}\n              >\n                Delete\n              </Button>,\n            ]}\n          >\n            <Text>{item.name}</Text>\n            <ActuatorModal\n              enable={selectedModalId === item.id}\n              actuatorData={item}\n              deviceId={data.id}\n              onOK={(dataPath, value) =>\n                onChange(`actuators[${index}].${dataPath}`, value)\n              }\n              onClose={() => {\n                changeModalId(null);\n              }}\n            />\n          </List.Item>\n        )}\n      />\n    </Form>\n  </CollapseForm>\n);\n\nconst newDevice = () => {\n  const currentTime = Date.now();\n  return {\n    id: `id-new-device-${currentTime}`,\n    name: `name-new-device-${currentTime}`,\n    enable: false,\n    scale: 1,\n    behaviours: [],\n    timeToDown: 0,\n    testBroker: {\n      protocol: \"MQTT\",\n      connConfig: {\n        host: \"192.168.1.21\",\n        port: 1883,\n        options: null,\n      },\n    },\n    productionBroker: null,\n    sensors: [],\n    actuators: [],\n  };\n};\n\nclass ModelPage extends Component {\n  constructor(props) {\n    super(props);\n    let modelFileName = getLastPath();\n    let isNewModel = modelFileName.indexOf(\".json\") === -1;\n    this.state = {\n      modelFileName: isNewModel ? `${modelFileName}.json` : modelFileName,\n      tempModel: isNewModel\n        ? {\n            name: modelFileName,\n          }\n        : {},\n      isNewModel,\n      selectedModalId: null,\n      isChanged: false,\n    };\n\n    this.onModelChange = this.onModelChange.bind(this);\n  }\n\n  componentDidMount() {\n    let modelFileName = getLastPath();\n    if (modelFileName.indexOf(\".json\") === -1) {\n      // This is a new model page\n      this.setState({\n        modelFileName: `${modelFileName}.json`,\n        tempModel: {\n          name: modelFileName,\n        },\n        isNewModel: true,\n      });\n    } else {\n      this.props.requestModel(modelFileName);\n      this.setState({ modelFileName, isNewModel: false });\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      tempModel: deepCloneObject(newProps.model),\n    });\n  }\n\n  onModelChange(newModel) {\n    this.setState({\n      tempModel: newModel,\n      isChanged: true,\n    });\n  }\n\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState.tempModel };\n      updateObjectByPath(newData, dataPath, value);\n      return { tempModel: newData, error: null, isChanged: true };\n    });\n  }\n\n  exportModel(model) {\n    if (model) {\n      const fileData = JSON.stringify(model);\n      const blob = new Blob([fileData], { type: \"text/json\" });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.download = `${model.name.replace(/ /g, \"\")}.json`;\n      link.href = url;\n      link.click();\n    }\n  }\n\n  addNewDevice() {\n    this.setState((prevState) => ({\n      tempModel: {\n        ...prevState.tempModel,\n        devices: [...prevState.tempModel.devices, newDevice()],\n      },\n      isChanged: true,\n    }));\n  }\n\n  changeModalId(newId) {\n    this.setState({ selectedModalId: newId });\n  }\n\n  render() {\n    const {\n      modelFileName,\n      tempModel,\n      isNewModel,\n      selectedModalId,\n      isChanged,\n    } = this.state;\n    const { addNewModel, updateModel, showModal } = this.props;\n\n    let viewType = getQuery(\"view\");\n    if (!viewType) viewType = \"form\";\n    let view = null;\n    if (viewType === \"json\") {\n      view = <JSONView value={tempModel} onChange={this.onModelChange} />;\n    } else {\n      view = (\n        <Fragment>\n          <p></p>\n          <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }}>\n            <FormEditableTextItem\n              label=\"Name\"\n              defaultValue={tempModel.name}\n              onChange={(newName) => this.onDataChange(\"name\", newName)}\n            />\n            <Divider orientation=\"left\">Dataset </Divider>\n            <p>The Id of data source</p>\n            <FormEditableTextItem\n              label=\"Dataset Id\"\n              defaultValue={tempModel.datasetId ? tempModel.datasetId : null}\n              onChange={(newDatasetId) =>\n                this.onDataChange(\"datasetId\", newDatasetId)\n              }\n            />\n            {tempModel.newDataset ? (\n              <Fragment>\n                <p>New Dataset to save the simulated data</p>\n                <FormTextItem\n                  label=\"Id\"\n                  placeholder=\"Dataset Id\"\n                  helpText=\"The Id of the dataset to be used in the simulation\"\n                  defaultValue={tempModel.newDataset.id}\n                  onChange={(value) =>\n                    this.onDataChange(\"newDataset.id\", value)\n                  }\n                />\n                <FormTextItem\n                  label=\"Name\"\n                  placeholder=\"Name\"\n                  defaultValue={tempModel.newDataset.name}\n                  onChange={(value) =>\n                    this.onDataChange(\"newDataset.name\", value)\n                  }\n                />\n                <FormTextAreaItem\n                  label=\"Description\"\n                  placeholder=\"Description\"\n                  defaultValue={tempModel.newDataset.description}\n                  onChange={(value) =>\n                    this.onDataChange(\"newDataset.description\", value)\n                  }\n                />\n                <FormTextItem\n                  label=\"Tags\"\n                  placeholder=\"Tags\"\n                  defaultValue={JSON.stringify(tempModel.newDataset.tags)}\n                  onChange={(value) =>\n                    this.onDataChange(\"newDataset.tags\", JSON.parse(value))\n                  }\n                />\n                <Button\n                  danger\n                  onClick={() => this.onDataChange(\"newDataset\", null)}\n                >\n                  Remove New Dataset\n                </Button>\n              </Fragment>\n            ) : (\n              <Button\n                onClick={() =>\n                  this.onDataChange(\"newDataset\", {\n                    id: `new-data-set-${Date.now()}`,\n                    name: `New Data Set ${Date.now()}`,\n                    description: \"Dataset descriptions\",\n                    tags: [\"recorded\", \"random\", \"test\"],\n                  })\n                }\n              >\n                Add New Dataset\n              </Button>\n            )}\n            <Divider orientation=\"left\">Data Storage </Divider>\n            {tempModel.dataStorage ? (\n              <ConnectionConfig\n                defaultValue={tempModel.dataStorage.connConfig}\n                dataPath={\"dataStorage.connConfig\"}\n                onDataChange={(dataPath, value) =>\n                  this.onDataChange(dataPath, value)\n                }\n                type={tempModel.dataStorage.protocol}\n              />\n            ) : (\n              <Button\n                onClick={() =>\n                  this.onDataChange(\"dataStorage\", {\n                    protocol: \"MONGODB\",\n                    connConfig: {\n                      host: \"localhost\",\n                      port: 27017,\n                      username: null,\n                      password: null,\n                      dbname: \"my_db_name\",\n                      options: null,\n                    },\n                  })\n                }\n              >\n                Add Data Storage\n              </Button>\n            )}\n          </Form>\n          <Divider orientation=\"left\">Devices </Divider>\n          {tempModel.devices ? (\n            <Fragment>\n              <p>Number of devices: {tempModel.devices.length}</p>\n              <Button onClick={() => showModal(\"THING-FORM\")}>\n                Add New Device\n              </Button>\n              {tempModel.devices.map((device, index) => (\n                <ModelDeviceItem\n                  key={index}\n                  data={device}\n                  selectedModalId={selectedModalId}\n                  changeModalId={(newId) => this.changeModalId(newId)}\n                  onEnable={() => {\n                    this.onDataChange(\n                      `devices[${index}].enable`,\n                      !device.enable\n                    );\n                  }}\n                  onChange={(dataPath, value) =>\n                    this.onDataChange(`devices[${index}].${dataPath}`, value)\n                  }\n                  onDelete={() => {\n                    let newDevices = [...tempModel.devices];\n                    newDevices.splice(index, 1);\n                    this.onDataChange(\"devices\", newDevices);\n                  }}\n                  onDuplicate={() => {\n                    let newDevice = {\n                      ...device,\n                      id: `${device.id}-duplicated`,\n                      name: `${device.name} [duplicated]`,\n                    };\n                    let newDevices = [...tempModel.devices, newDevice];\n                    this.onDataChange(\"devices\", newDevices);\n                  }}\n                />\n              ))}\n            </Fragment>\n          ) : (\n            <Button onClick={() => showModal(\"THING-FORM\")}>\n              Add New Device\n            </Button>\n          )}\n          <p></p>\n          <ActuatorModal />\n        </Fragment>\n      );\n    }\n\n    return (\n      <Fragment>\n        <LayoutPage>\n          <a\n            href={`${window.location.pathname}?view=${\n              viewType === \"json\" ? \"form\" : \"json\"\n            }`}\n            style={{ marginRight: 10 }}\n          >\n            {\" \"}\n            <SwitcherOutlined /> Switch View\n          </a>\n          <Button onClick={() => this.exportModel(tempModel)}>\n            <ExportOutlined />\n            Export Model\n          </Button>\n          <p></p>\n          {view}\n          <Button\n            type=\"primary\"\n            onClick={() => {\n              if (isNewModel) {\n                addNewModel(tempModel);\n              } else {\n                updateModel(modelFileName, tempModel);\n              }\n            }}\n            style={{ marginTop: \"10px\" }}\n            disabled={isChanged ? false : true}\n          >\n            Save\n          </Button>\n        </LayoutPage>\n      </Fragment>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ model, editingForm }) => ({\n  model,\n  formID: editingForm.formID,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestModel: (modelFileName) => dispatch(requestModel(modelFileName)),\n  addNewModel: (newModel) => dispatch(requestAddNewModel(newModel)),\n  updateModel: (modelFileName, model) =>\n    dispatch(requestUpdateModel({ modelFileName, model })),\n  showModal: (formID) => dispatch(showModal(formID)),\n  changeModelName: (newName) => dispatch(changeModelName(newName)),\n  selectDevice: (device) => dispatch(selectDevice(device)),\n  deleteThing: (thingID) => dispatch(deleteThing(thingID)),\n  changeStatusThing: (thingID) => dispatch(changeStatusThing(thingID)),\n  selectSensor: (sensor) => dispatch(selectSensor(sensor)),\n  deleteSensor: (sensorID, thingID) =>\n    dispatch(deleteSimulationSensor({ sensorID, thingID })),\n  changeStatusSensor: (sensorID, thingID) =>\n    dispatch(changeStatusSensor({ sensorID, thingID })),\n  selectActuator: (actuator) => dispatch(selectActuator(actuator)),\n  deleteActuator: (actuatorID, thingID) =>\n    dispatch(deleteSimulationActuator({ actuatorID, thingID })),\n  changeStatusActuator: (actuatorID, thingID) =>\n    dispatch(changeStatusActuator({ actuatorID, thingID })),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(ModelPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, Skeleton, Avatar, Button, PageHeader } from \"antd\";\nimport { ClockCircleOutlined } from \"@ant-design/icons\";\nimport { getCreatedTimeFromFileName, isDataGenerator } from \"../utils\";\n\nimport { requestLogFiles, requestDeleteLogFile } from \"../actions\";\nimport LayoutPage from \"./LayoutPage\";\n\nclass LogsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logFiles: props.logFiles,\n    };\n  }\n\n  componentDidMount() {\n    this.props.initData(isDataGenerator());\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({ logFiles: newProps.logFiles });\n  }\n\n  render() {\n    const { deleteLogFile } = this.props;\n    const { logFiles } = this.state;\n    const isDG = isDataGenerator();\n    return (\n      <LayoutPage>\n        <PageHeader className=\"site-page-header\" title=\"Log files\" />\n        <List\n          bordered\n          dataSource={logFiles}\n          renderItem={(item) => (\n            <List.Item\n              actions={[\n                <Button\n                  key=\"list-loadmore-edit\"\n                  onClick={() => deleteLogFile(isDG, item)}\n                  type=\"danger\"\n                >\n                  Delete\n                </Button>,\n              ]}\n            >\n              <Skeleton avatar title={false} loading={item.loading}>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar>\n                      <ClockCircleOutlined />\n                    </Avatar>\n                  }\n                  title={\n                    <a href={`${isDG ? \"/data-generator\" : \"\"}/logs/${item}`}>\n                      {item}\n                    </a>\n                  }\n                  description={`Created at: ${getCreatedTimeFromFileName(\n                    item\n                  )}`}\n                />\n              </Skeleton>\n            </List.Item>\n          )}\n        />\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ logs }) => ({\n  logFiles: logs.logFiles,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteLogFile: (isDG, logFile) => {\n    dispatch(requestDeleteLogFile({ isDG, logFile }));\n  },\n  initData: (isDG) => {\n    dispatch(requestLogFiles(isDG));\n  },\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(LogsPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Typography, PageHeader } from \"antd\";\nimport { getLastURLPath, isDataGenerator } from \"../utils\";\nimport LayoutPage from \"./LayoutPage\";\nimport { requestLogs } from \"../actions\";\n\nconst { Text } = Typography;\n\nconst LogLine = ({ type, time, device, message }) => (\n  <Row>\n    <Col span={4}>\n      <Text type={type}>{time}</Text>\n    </Col>\n    <Col span={5}>\n      <Text type={type}>{device}</Text>\n    </Col>\n    <Col span={15}>\n      <Text type={type}>{message}</Text>\n    </Col>\n  </Row>\n);\n\nclass LogsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logFile: null,\n      isDG: false,\n    };\n  }\n  componentDidMount() {\n    const logFile = getLastURLPath(window.location.pathname);\n    const isDG = isDataGenerator();\n    this.setState({ logFile: decodeURIComponent(logFile) });\n    this.props.requestLogs(isDG, logFile);\n    setInterval(() => {\n      this.props.requestLogs(isDG, logFile);\n    }, 20000);\n  }\n\n  render() {\n    const { logFile } = this.state;\n    const { logs } = this.props;\n    return (\n      <LayoutPage>\n        <PageHeader className=\"site-page-header\" title={logFile} />\n        <LogLine\n          key={-1}\n          type={\"warning\"}\n          time={\"Time\"}\n          device={\"Device\"}\n          message={\"Message\"}\n        />\n        {!logs ? (\n          <p>Empty</p>\n        ) : (\n          logs.split(\"\\n\").map((log, index) => {\n            const array = log.split(\" \");\n            if (array.length < 4) {\n              console.warn(\"Log is not going to show: \", log);\n              return null;\n            }\n            const type = array[2] === \"info:\" ? \"secondary\" : \"danger\";\n            const time = new Date(array[0]);\n            const timeString = `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()} ${time.getDay()}/${time.getMonth()}/${time.getFullYear()}`;\n            const device = array[3].replace(\"[\", \"\").replace(\"]\", \"\");\n            const message = log.split(array[3])[1];\n            return (\n              <LogLine\n                key={index}\n                type={type}\n                time={timeString}\n                device={device}\n                message={message}\n              />\n            );\n          })\n        )}\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ logs }) => ({\n  logs: logs.logs,\n  logFile: logs.logFile,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestLogs: (isDG, logFile) => dispatch(requestLogs({ isDG, logFile })),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(LogsPage);\n","import React, { Component } from 'react';\nimport LayoutPage from './LayoutPage';\nclass DummyPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {message} = this.props;\n    return (\n      <LayoutPage pageTitle=\"Dummy Page\" pageSubTitle=\"This is a dummy page\">\n        <div> Hello from Dummy Page: {message}</div>\n      </LayoutPage>\n    );\n  }\n}\n\nexport default DummyPage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Alert, Form } from \"antd\";\n\nimport {\n  requestDataStorage,\n  requestUpdateDataStorage,\n  requestTestDataStorageConnection,\n} from \"../actions\";\nimport JSONView from \"../components/JSONView\";\nimport LayoutPage from \"./LayoutPage\";\nimport { getQuery, updateObjectByPath, deepCloneObject } from \"../utils\";\nimport ConnectionConfig from \"../components/ConnectionConfig\";\n\nclass DataStoragePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tempDataStorage: { connConfig: {} },\n      connectionStatus: false,\n      isDSChanged: false,\n    };\n\n    this.onDataStorageChange = this.onDataStorageChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.requestDataStorage();\n    this.props.testConnection();\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      tempDataStorage: deepCloneObject(newProps.dataStorage),\n      connectionStatus: newProps.connectionStatus,\n    });\n  }\n\n  onDataStorageChange(newDataStorage) {\n    this.setState({\n      tempDataStorage: newDataStorage,\n      isDSChanged: true,\n    });\n  }\n\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState.tempDataStorage };\n      // console.log(dataPath, value);\n      updateObjectByPath(newData, dataPath, value);\n      return { tempDataStorage: newData, isDSChanged: true };\n    });\n  }\n\n  render() {\n    const { tempDataStorage, connectionStatus, isDSChanged } = this.state;\n    const { updateDataStorage, testConnection } = this.props;\n\n    let viewType = getQuery(\"view\");\n    if (!viewType) viewType = \"form\";\n    let view = null;\n    if (viewType === \"json\") {\n      view = (\n        <JSONView value={tempDataStorage} onChange={this.onDataStorageChange} />\n      );\n    } else {\n      view = (\n        <Form\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 14,\n          }}\n        >\n          <ConnectionConfig\n            defaultValue={tempDataStorage.connConfig}\n            dataPath={\"connConfig\"}\n            onDataChange={(dataPath, value) =>\n              this.onDataChange(dataPath, value)\n            }\n            type=\"MONGODB\"\n          />\n        </Form>\n      );\n    }\n    return (\n      <LayoutPage>\n        Connection Status:{\" \"}\n        <strong>\n          {\" \"}\n          {connectionStatus ? (\n            <span style={{ color: \"green\" }}>Connected</span>\n          ) : (\n            <span style={{ color: \"red\" }}>Not Connected</span>\n          )}{\" \"}\n        </strong>\n        {view}\n        <Button\n          style={{ marginTop: \"10px\", marginRight: \"10px\" }}\n          onClick={() => {\n            if (isDSChanged) {\n              updateDataStorage(tempDataStorage);\n              this.setState({ isDSChanged: false });\n              setTimeout(testConnection, 3000);\n            } else {\n              testConnection();\n            }\n          }}\n        >\n          Test Connection\n        </Button>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            updateDataStorage(tempDataStorage);\n            this.setState({ isDSChanged: false });\n            setTimeout(testConnection, 3000);\n          }}\n          style={{ marginTop: \"10px\" }}\n          disabled={this.state.isDSChanged ? false : true}\n        >\n          Save\n        </Button>\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ dataStorage }) => ({\n  dataStorage: dataStorage.connConfig,\n  connectionStatus: dataStorage.connectionStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestDataStorage: () => dispatch(requestDataStorage()),\n  updateDataStorage: (newDataStorage) =>\n    dispatch(requestUpdateDataStorage(newDataStorage)),\n  testConnection: () => dispatch(requestTestDataStorageConnection()),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(DataStoragePage);\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Menu, Dropdown, Button, Form, Alert } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport LayoutPage from \"./LayoutPage\";\nimport {\n  requestAllTestCampaigns,\n  requestAddNewTestCampaign,\n  requestDeleteTestCampaign,\n  requestDevOpts,\n  requestUpdateDevOpts,\n  requestLaunchTestCampaign,\n  requestStopTestCampaign,\n  requestTestCampaignStatus,\n} from \"../actions\";\nimport {\n  FormEditableTextItem,\n  FormTextNotEditableItem,\n} from \"../components/FormItems\";\nimport CollapseForm from \"../components/CollapseForm\";\n\nclass TestCampaignListPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      webhookURL: undefined,\n      testCampaignId: \"Select the test Campaign for next build\",\n      isChanged: false,\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTestCampaigns();\n    this.props.fetchDevOpts();\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (newProps.devOpts) {\n      this.setState(newProps.devOpts);\n    }\n  }\n\n  duplicateTestCampaign(tc) {\n    const newTc = {\n      id: `${tc.id}-[duplicated]`,\n      name: `${tc.name}-[duplicated]`,\n      description: tc.description,\n      testCaseIds: tc.testCaseIds,\n    };\n    this.props.addNewTestCampaign(newTc);\n  }\n\n  updateWebhookURL(wb) {\n    this.setState({\n      webhookURL: wb,\n      isChanged: true,\n    });\n  }\n\n  updateTestCampaignId(tcId) {\n    this.setState({\n      testCampaignId: tcId,\n      isChanged: true,\n    });\n  }\n\n  render() {\n    const {\n      testCampaigns,\n      deleteTestCampaign,\n      updateDevOpts,\n      launchTestCampaign,\n      stopTestCampaign,\n      runningStatus,\n    } = this.props;\n    const { webhookURL, testCampaignId, isChanged } = this.state;\n    const dataSource = testCampaigns.map((tc) => ({ ...tc, key: tc.id }));\n    const columns = [\n      {\n        title: \"Id\",\n        key: \"data\",\n        render: (tc) => (\n          <a href={`/test-campaigns/${tc.id}`}>\n            {tc.id === testCampaignId ? (\n              <strong>\n                {tc.id} <span style={{ color: \"green\" }}>**Next Build**</span>\n              </strong>\n            ) : (\n              tc.id\n            )}\n          </a>\n        ),\n      },\n      {\n        title: \"Action\",\n        key: \"data\",\n        render: (tc) => (\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item\n                  key=\"select\"\n                  onClick={() => this.updateTestCampaignId(tc.id)}\n                >\n                  Select for next Build\n                </Menu.Item>\n                <Menu.Item\n                  key=\"duplicate\"\n                  onClick={() => this.duplicateTestCampaign(tc)}\n                >\n                  Duplicate\n                </Menu.Item>\n                {tc.reportFileName && (\n                  <Menu.Item\n                    key=\"report\"\n                    onClick={() =>\n                      console.log(\"View report of test campaign: \", tc)\n                    }\n                  >\n                    <a href={`/reports/test-campaigns/${tc.reportFileName}`}>\n                      View Report\n                    </a>\n                  </Menu.Item>\n                )}\n                <Menu.Item\n                  key=\"delete\"\n                  onClick={() => deleteTestCampaign(tc.id)}\n                >\n                  Delete\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Button>\n                Action <DownOutlined />\n              </Button>\n            </a>\n          </Dropdown>\n        ),\n      },\n    ];\n    return (\n      <LayoutPage\n        pageTitle=\"Test Campaign\"\n        pageSubTitle=\"All the test campaigns\"\n      >\n        <CollapseForm title=\"Configuration for next build\" active={true}>\n          <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }}>\n            <FormEditableTextItem\n              label=\"WebhookURL\"\n              defaultValue={webhookURL}\n              onChange={(wb) => this.updateWebhookURL(wb)}\n            />\n            <FormTextNotEditableItem\n              label=\"Next build\"\n              value={\n                <a href={`/test-campaigns/${testCampaignId}`}>\n                  <strong>{testCampaignId}</strong>\n                </a>\n              }\n            />\n            <Form.Item\n              wrapperCol={{\n                xs: {\n                  span: 24,\n                  offset: 0,\n                },\n                sm: {\n                  span: 16,\n                  offset: 4,\n                },\n              }}\n            >\n              <Button\n                onClick={() => {\n                  updateDevOpts({\n                    webhookURL,\n                    testCampaignId,\n                  });\n                  this.setState({ isChanged: false });\n                }}\n                disabled={isChanged ? false : true}\n                type=\"primary\"\n                style={{ marginRight: 10 }}\n              >\n                Save\n              </Button>\n              {runningStatus ? (\n                <Fragment>\n                  {runningStatus.isRunning ? (\n                    <Button\n                      type=\"primary\"\n                      danger\n                      onClick={() => stopTestCampaign()}\n                    >\n                      Stop\n                    </Button>\n                  ) : (\n                    <Button\n                      type=\"primary\"\n                      onClick={() => launchTestCampaign()}\n                      disabled={isChanged ? true : false}\n                    >\n                      Launch\n                    </Button>\n                  )}\n                  <a href={`/logs/test-campaigns/${runningStatus.logFile}`}>\n                    <Button type=\"link\">View Log</Button>\n                  </a>\n                </Fragment>\n              ) : (\n                <Button\n                  type=\"primary\"\n                  onClick={() => launchTestCampaign()}\n                  disabled={isChanged ? true : false}\n                >\n                  Launch\n                </Button>\n              )}\n            </Form.Item>\n          </Form>\n        </CollapseForm>\n        <a href={`/test-campaigns/new-campaign-${Date.now()}`}>\n          <Button style={{ marginBottom: \"10px\" }}>Add New Campaign</Button>\n        </a>\n        <Table columns={columns} dataSource={dataSource} />\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ testCampaigns, devOpts }) => ({\n  testCampaigns: testCampaigns.allTestCampaigns,\n  runningStatus: testCampaigns.runningStatus,\n  devOpts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTestCampaigns: () => dispatch(requestAllTestCampaigns()),\n  fetchDevOpts: () => dispatch(requestDevOpts()),\n  fetchTestCampaignStatus: () => dispatch(requestTestCampaignStatus()),\n  updateDevOpts: (newDevOpts) => dispatch(requestUpdateDevOpts(newDevOpts)),\n  deleteTestCampaign: (testCampaignId) =>\n    dispatch(requestDeleteTestCampaign(testCampaignId)),\n  addNewTestCampaign: (testCampaign) =>\n    dispatch(requestAddNewTestCampaign(testCampaign)),\n  launchTestCampaign: () => dispatch(requestLaunchTestCampaign()),\n  stopTestCampaign: () => dispatch(requestStopTestCampaign()),\n});\n\nexport default connect(\n  mapPropsToStates,\n  mapDispatchToProps\n)(TestCampaignListPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, Button, Menu, Dropdown } from \"antd\";\nimport {\n  ClearOutlined,\n  ImportOutlined,\n  DownOutlined,\n  CaretRightOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n} from \"@ant-design/icons\";\nimport LayoutPage from \"./LayoutPage\";\nimport {\n  requestAllModels,\n  requestDeleteModel,\n  requestDuplicateModel,\n  requestAddNewModel,\n} from \"../actions\";\n\nclass ModelListPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onUpload(files) {\n    const fileReader = new FileReader();\n    fileReader.onloadend = () => {\n      try {\n        const newModel = JSON.parse(fileReader.result);\n        this.props.importNewModel(newModel);\n      } catch (error) {\n        this.props.setNotification({ type: \"error\", message: error });\n      }\n    };\n    fileReader.readAsText(files[0]);\n  }\n\n  componentDidMount() {\n    this.props.fetchAllModels();\n  }\n\n  render() {\n    const { allModels, deleteModel, duplicateModel } = this.props;\n    return (\n      <LayoutPage\n        pageTitle=\"Model\"\n        pageSubTitle=\"Model defines the topology and the specification of the sensors, actuators and the gateways\"\n      >\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item key=\"model:3\">\n                <a href={`/models/new-model-${Date.now()}`}>\n                  <ClearOutlined /> Create New\n                </a>\n              </Menu.Item>\n              <Menu.Item\n                key=\"model:1\"\n                onClick={() => this.inputFileDOM.click()}\n              >\n                <ImportOutlined /> Import From File\n                <input\n                  type=\"file\"\n                  onChange={(event) => this.onUpload(event.target.files)}\n                  ref={(input) => {\n                    this.inputFileDOM = input;\n                  }}\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  multiple={false}\n                />\n              </Menu.Item>\n            </Menu>\n          }\n          trigger={[\"click\"]}\n        >\n          <Button\n            className=\"ant-dropdown-link\"\n            onClick={(e) => e.preventDefault()}\n            style={{ marginBottom: \"15px\" }}\n          >\n            Add Model <DownOutlined />\n          </Button>\n        </Dropdown>\n        <List\n          bordered\n          dataSource={allModels}\n          renderItem={(item) => (\n            <List.Item\n              actions={[\n                <a\n                  key=\"item-edit\"\n                  type=\"button\"\n                  href={`/simulation?model=${item}`}\n                >\n                  <Button>\n                    <CaretRightOutlined /> Simulate\n                  </Button>\n                </a>,\n                <Button key=\"item-delete\" onClick={() => duplicateModel(item)}>\n                  <CopyOutlined /> Duplicate\n                </Button>,\n                <Button\n                  key=\"item-delete\"\n                  onClick={() => deleteModel(item)}\n                  type=\"danger\"\n                >\n                  <DeleteOutlined />\n                  Delete\n                </Button>,\n              ]}\n            >\n              <a href={`/models/${item}`}>{item}</a>\n            </List.Item>\n          )}\n        />\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ allModels }) => ({\n  allModels,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllModels: () => dispatch(requestAllModels()),\n  deleteModel: (modelFileName) => dispatch(requestDeleteModel(modelFileName)),\n  duplicateModel: (modelFileName) =>\n    dispatch(requestDuplicateModel(modelFileName)),\n  importNewModel: (model) => dispatch(requestAddNewModel(model)),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(ModelListPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, Button, Menu, Dropdown, Alert } from \"antd\";\nimport {\n  ClearOutlined,\n  ImportOutlined,\n  DownOutlined,\n  CaretRightOutlined,\n  CopyOutlined,\n  DeleteOutlined,\n  CloseSquareOutlined,\n} from \"@ant-design/icons\";\nimport LayoutPage from \"./LayoutPage\";\nimport {\n  requestAllDataRecorders,\n  requestDeleteDataRecorder,\n  requestDuplicateDataRecorder,\n  requestAddNewDataRecorder,\n  requestStartDataRecorder,\n  requestDataRecorderStatus,\n  requestStopDataRecorder,\n} from \"../actions\";\n\nclass DataRecorderListPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  onUpload(files) {\n    const fileReader = new FileReader();\n    fileReader.onloadend = () => {\n      try {\n        const newDataRecorder = JSON.parse(fileReader.result);\n        this.props.importNewDataRecorder(newDataRecorder);\n      } catch (error) {\n        this.props.setNotification({ type: \"error\", message: error });\n      }\n    };\n    fileReader.readAsText(files[0]);\n  }\n\n  componentDidMount() {\n    this.props.fetchAllDataRecorders();\n    this.props.fetchDataRecorderStatus();\n  }\n\n  render() {\n    const {\n      allDataRecorders,\n      deleteDataRecorder,\n      duplicateDataRecorder,\n      startDataRecorder,\n      dataRecorderStatus,\n      stopDataRecorder,\n    } = this.props;\n    return (\n      <LayoutPage\n        pageTitle=\"DataRecorder\"\n        pageSubTitle=\"DataRecorder will collect data from the target environment and store the data into the DataStorage and also can forward the data into the simulation environment\"\n      >\n        {dataRecorderStatus && (\n          <Alert\n            style={{ marginBottom: \"15px\" }}\n            message={\n              <div>\n                {`Model: ${dataRecorderStatus.model}. Started time: ${(new Date(dataRecorderStatus.startedTime)).toLocaleTimeString()}. Log file: ${dataRecorderStatus.logFile}`} <Button type=\"danger\" onClick={() => stopDataRecorder()}>\n                  <CloseSquareOutlined /> Stop\n                </Button>\n              </div>              \n            }\n            type=\"success\"\n          />\n        )}\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item key=\"DataRecorder:3\">\n                <a href={`/data-recorders/new-DataRecorder-${Date.now()}`}>\n                  <ClearOutlined /> Create New\n                </a>\n              </Menu.Item>\n              <Menu.Item\n                key=\"DataRecorder:1\"\n                onClick={() => this.inputFileDOM.click()}\n              >\n                <ImportOutlined /> Import From File\n                <input\n                  type=\"file\"\n                  onChange={(event) => this.onUpload(event.target.files)}\n                  ref={(input) => {\n                    this.inputFileDOM = input;\n                  }}\n                  style={{ display: \"none\" }}\n                  accept=\".json\"\n                  multiple={false}\n                />\n              </Menu.Item>\n            </Menu>\n          }\n          trigger={[\"click\"]}\n        >\n          <Button\n            className=\"ant-dropdown-link\"\n            onClick={(e) => e.preventDefault()}\n            style={{ marginBottom: \"15px\" }}\n          >\n            Add DataRecorder <DownOutlined />\n          </Button>\n        </Dropdown>\n\n        <List\n          bordered\n          dataSource={allDataRecorders}\n          renderItem={(item) => (\n            <List.Item\n              actions={[\n                <Button\n                  key=\"item-start\"\n                  onClick={() => startDataRecorder(item)}\n                  disabled={dataRecorderStatus ? true : false}\n                >\n                  <CaretRightOutlined /> Start\n                </Button>,\n                <Button\n                  key=\"item-duplicate\"\n                  onClick={() => duplicateDataRecorder(item)}\n                >\n                  <CopyOutlined /> Duplicate\n                </Button>,\n                <Button\n                  key=\"item-delete\"\n                  onClick={() => deleteDataRecorder(item)}\n                  type=\"danger\"\n                >\n                  <DeleteOutlined />\n                  Delete\n                </Button>,\n              ]}\n            >\n              <a href={`/data-recorders/${item}`}>{item}</a>\n            </List.Item>\n          )}\n        />\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ allDataRecorders, dataRecorderStatus }) => ({\n  allDataRecorders,\n  dataRecorderStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAllDataRecorders: () => dispatch(requestAllDataRecorders()),\n  fetchDataRecorderStatus: () => dispatch(requestDataRecorderStatus()),\n  deleteDataRecorder: (dataRecorderFileName) =>\n    dispatch(requestDeleteDataRecorder(dataRecorderFileName)),\n  startDataRecorder: (dataRecorderFileName) =>\n    dispatch(requestStartDataRecorder(dataRecorderFileName)),\n  stopDataRecorder: () => dispatch(requestStopDataRecorder()),\n  duplicateDataRecorder: (dataRecorderFileName) =>\n    dispatch(requestDuplicateDataRecorder(dataRecorderFileName)),\n  importNewDataRecorder: (dataRecorder) =>\n    dispatch(requestAddNewDataRecorder(dataRecorder)),\n});\n\nexport default connect(\n  mapPropsToStates,\n  mapDispatchToProps\n)(DataRecorderListPage);\n","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Switch, Form, List, Typography, Divider } from \"antd\";\nimport { SwitcherOutlined, ExportOutlined, RightOutlined } from \"@ant-design/icons\";\n\nimport {\n  requestDataRecorder,\n  requestAddNewDataRecorder,\n  requestUpdateDataRecorder,\n  showModal,\n  changeDataRecorderName,\n} from \"../actions\";\nimport JSONView from \"../components/JSONView\";\nimport LayoutPage from \"./LayoutPage\";\n\nimport {\n  getQuery,\n  getLastPath,\n  updateObjectByPath,\n  deepCloneObject,\n} from \"../utils\";\nimport {\n  FormEditableTextItem,\n  FormSelectItem,\n  FormTextItem,\n  FormTextAreaItem,\n} from \"../components/FormItems\";\nimport ConnectionConfig from \"../components/ConnectionConfig\";\nimport CollapseForm from \"../components/CollapseForm\";\n\nconst { Text } = Typography;\n\nconst DataRecorderItem = ({\n  data,\n  onChange,\n  onDelete,\n  onDuplicate,\n  onEnable\n}) => (\n  <CollapseForm\n    title={`${data.name}`}\n    extra={\n      <Fragment>\n      <Switch\n        defaultChecked={data.enable ? true : false}\n        checkedChildren=\"Enable\"\n        unCheckedChildren=\"Disable\"\n        onClick={(value, event) => {\n          event.stopPropagation();\n          onEnable();\n        }}\n        style={{ marginRight: 10 }}\n      />\n      <Button\n          onClick={(event) => {\n            event.stopPropagation();\n            onDuplicate();\n          }}\n          size=\"small\"\n          style={{ marginRight: 10 }}\n        >\n          Duplicate\n        </Button>\n        <Button\n          onClick={(event) => {\n            event.stopPropagation();\n            onDelete();\n          }}\n          size=\"small\"\n          danger\n        >\n          Delete\n        </Button>\n      </Fragment>\n    }\n  >\n    <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }}>\n      <FormEditableTextItem\n        label=\"Name\"\n        defaultValue={data.name}\n        onChange={(newName) => onChange(\"name\", newName)}\n      />\n      <FormEditableTextItem\n        label=\"Id\"\n        defaultValue={data.id}\n        onChange={(newId) => onChange(\"id\", newId)}\n      />\n      <Divider orientation=\"left\">Source </Divider>\n      <FormSelectItem\n        label=\"Protocol\"\n        defaultValue={data.source.protocol}\n        onChange={(v) => onChange(\"source.protocol\", v)}\n        options={[\"MQTT\", \"MONGODB\"]}\n      />\n      <ConnectionConfig\n        defaultValue={data.source.connConfig}\n        dataPath={\"source.connConfig\"}\n        onDataChange={onChange}\n        type={data.source.protocol}\n      />\n      <List\n        header={<strong>Upstreams ({data.source.upStreams.length})</strong>}\n        footer={\n          <Button\n            onClick={() => {\n              const newUpStreams = [\n                ...data.source.upStreams,\n                `new-up-stream-${Date.now()}`,\n              ];\n              onChange(\"source.upStreams\", newUpStreams);\n            }}\n          >\n            Add New UpStream\n          </Button>\n        }\n        size=\"small\"\n        bordered\n        dataSource={data.source.upStreams}\n        renderItem={(item, index) => (\n          <List.Item\n            actions={[\n              <Button\n                size=\"small\"\n                danger\n                key=\"delete\"\n                onClick={() => {\n                  if (data.source.upStreams.length === 1) {\n                    onChange(\"source.upStreams\", []);\n                  } else {\n                    let newUpStreams = [...data.source.upStreams];\n                    newUpStreams.splice(index, 1);\n                    onChange(\"source.upStreams\", newUpStreams);\n                  }\n                }}\n              >\n                Delete\n              </Button>,\n            ]}\n          >\n            <Text\n              editable={{\n                onChange: (v) => onChange(`source.upStreams[${index}]`, v),\n              }}\n            >\n              {item}\n            </Text>\n          </List.Item>\n        )}\n      />\n      <p></p>\n      <List\n        header={<strong>Downstreams ({data.source.downStreams.length})</strong>}\n        footer={\n          <Button\n            onClick={() => {\n              const newDownStreams = [\n                ...data.source.downStreams,\n                `new-down-stream-${Date.now()}`,\n              ];\n              onChange(\"source.downStreams\", newDownStreams);\n            }}\n          >\n            Add New DownStream\n          </Button>\n        }\n        size=\"small\"\n        bordered\n        dataSource={data.source.downStreams}\n        renderItem={(item, index) => (\n          <List.Item\n            actions={[\n              <Button\n                size=\"small\"\n                danger\n                key=\"delete\"\n                onClick={() => {\n                  if (data.source.downStreams.length === 1) {\n                    onChange(\"source.downStreams\", []);\n                  } else {\n                    let newDownstreams = [...data.source.downStreams];\n                    newDownstreams.splice(index, 1);\n                    onChange(\"source.downStreams\", newDownstreams);\n                  }\n                }}\n              >\n                Delete\n              </Button>,\n            ]}\n          >\n            <Text\n              value={item}\n              editable={{\n                onChange: (v) => onChange(`source.downStreams[${index}]`, v),\n              }}\n            >\n              {item}\n            </Text>\n          </List.Item>\n        )}\n      />\n      <Divider orientation=\"left\">Forward </Divider>\n      {data.forward ? (\n        <Fragment>\n          <FormSelectItem\n            label=\"Protocol\"\n            defaultValue={data.forward.protocol}\n            onChange={(v) => onChange(\"forward.protocol\", v)}\n            options={[\"MQTT\", \"MONGODB\"]}\n          />\n          <ConnectionConfig\n            defaultValue={data.forward.connConfig}\n            dataPath={\"forward.connConfig\"}\n            onDataChange={onChange}\n            type={data.forward.protocol}\n          />\n          <Button danger onClick={() => onChange(\"forward\", null)}>\n            Remove Forward\n          </Button>\n        </Fragment>\n      ) : (\n        <Button\n          onClick={() =>\n            onChange(\"forward\", {\n              protocol: \"MQTT\",\n              connConfig: {\n                host: \"localhost\",\n                port: 1883,\n                options: null,\n              },\n            })\n          }\n        >\n          Add Forward\n        </Button>\n      )}\n      <Divider orientation=\"left\">Data Storage </Divider>\n      {data.dataStorage ? (\n        <Fragment>\n          <ConnectionConfig\n            defaultValue={data.dataStorage.connConfig}\n            dataPath={\"dataStorage.connConfig\"}\n            onDataChange={onChange}\n            type={data.dataStorage.protocol}\n          />\n          <p>Define the Dataset to save the recorded data</p>\n          <FormTextItem\n            label=\"Id\"\n            placeholder=\"Dataset Id\"\n            defaultValue={data.dataStorage.dataset.id}\n            onChange={(value) => onChange(\"dataStorage.dataset.id\", value)}\n          />\n          <FormTextItem\n            label=\"Name\"\n            placeholder=\"Name\"\n            defaultValue={data.dataStorage.dataset.name}\n            onChange={(value) => onChange(\"dataStorage.dataset.name\", value)}\n          />\n          <FormTextAreaItem\n            label=\"Description\"\n            placeholder=\"Description\"\n            defaultValue={data.dataStorage.dataset.description}\n            onChange={(value) =>\n              onChange(\"dataStorage.dataset.description\", value)\n            }\n          />\n          <FormTextItem\n            label=\"Tags\"\n            placeholder=\"Tags\"\n            defaultValue={JSON.stringify(data.dataStorage.dataset.tags)}\n            onChange={(value) =>\n              onChange(\"dataStorage.dataset.tags\", JSON.parse(value))\n            }\n          />\n          <Button\n            onClick={() =>\n              onChange(\"dataStorage\", null)\n            }\n            danger\n          >\n            Remove Data Storage\n          </Button>\n        </Fragment>\n      ) : (\n        <Button\n          onClick={() =>\n            onChange(\"dataStorage\", {\n              protocol: \"MONGODB\",\n              connConfig: {\n                host: \"localhost\",\n                port: 27017,\n                username: null,\n                password: null,\n                dbname: \"my_db_name\",\n                options: null,\n              },\n              dataset: {\n                id: `new-data-set-id-${Date.now()}`,\n                name: `New Data Set ${Date.now()}`,\n                description: \"Dataset descriptions\",\n                tags: [\"recorded\", \"random\", \"test\"],\n              },\n            })\n          }\n        >\n          Add Data Storage\n        </Button>\n      )}\n    </Form>\n  </CollapseForm>\n);\n\nconst newDataRecorder = () => {\n  const currentTime = Date.now();\n  return {\n    id: `id-new-data-recorder-${currentTime}`,\n    name: `name-new-data-recorder-${currentTime}`,\n    enable: false,\n    source: {\n      protocol: \"MQTT\",\n      connConfig: {\n        host: \"localhost\",\n        port: 1883,\n        options: null,\n      },\n      upStreams: [],\n      downStreams: [],\n    },\n  };\n};\n\nclass DataRecorderPage extends Component {\n  constructor(props) {\n    super(props);\n    let dataRecorderFileName = getLastPath();\n    let isNewDataRecorder = dataRecorderFileName.indexOf(\".json\") === -1;\n    this.state = {\n      dataRecorderFileName: isNewDataRecorder\n        ? `${dataRecorderFileName}.json`\n        : dataRecorderFileName,\n      tempDataRecorder: isNewDataRecorder\n        ? {\n            name: dataRecorderFileName,\n          }\n        : {},\n      isNewDataRecorder,\n    };\n\n    this.onDataRecorderChange = this.onDataRecorderChange.bind(this);\n  }\n\n  componentDidMount() {\n    let dataRecorderFileName = getLastPath();\n    if (dataRecorderFileName.indexOf(\".json\") === -1) {\n      // This is a new DataRecorder page\n      this.setState({\n        dataRecorderFileName: `${dataRecorderFileName}.json`,\n        tempDataRecorder: {\n          name: dataRecorderFileName,\n        },\n        isNewDataRecorder: true,\n      });\n    } else {\n      this.props.requestDataRecorder(dataRecorderFileName);\n      this.setState({ dataRecorderFileName, isNewDataRecorder: false });\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      tempDataRecorder: deepCloneObject(newProps.dataRecorder),\n    });\n  }\n\n  onDataRecorderChange(newDataRecorder) {\n    this.setState({\n      tempDataRecorder: newDataRecorder,\n    });\n  }\n\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState.tempDataRecorder };\n      updateObjectByPath(newData, dataPath, value);\n      return { tempDataRecorder: newData, error: null };\n    });\n  }\n\n  addNewDataRecorder() {\n    this.setState((prevState) => ({\n      tempDataRecorder: {\n        ...prevState.tempDataRecorder,\n        dataRecorders: [\n          ...prevState.tempDataRecorder.dataRecorders,\n          newDataRecorder(),\n        ],\n      },\n    }));\n  }\n\n  exportModel(model) {\n    if (model) {\n      const fileData = JSON.stringify(model);\n      const blob = new Blob([fileData], { type: \"text/json\" });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.download = `${model.name.replace(/ /g, \"\")}.json`;\n      link.href = url;\n      link.click();\n    }\n  }\n\n  render() {\n    const {\n      dataRecorderFileName,\n      tempDataRecorder,\n      isNewDataRecorder,\n    } = this.state;\n    const { addNewDataRecorder, updateDataRecorder } = this.props;\n\n    let viewType = getQuery(\"view\");\n    if (!viewType) viewType = \"form\";\n    let view = null;\n    //TODO: Fix JSON view - do not reload while editting\n    if (viewType === \"json\") {\n      view = (\n        <JSONView\n          value={tempDataRecorder}\n          onChange={this.onDataRecorderChange}\n        />\n      );\n    } else {\n      view = (\n        <Fragment>\n          <p></p>\n          <FormEditableTextItem\n            label=\"Name\"\n            defaultValue={tempDataRecorder.name}\n            onChange={(newName) => this.onDataChange(\"name\", newName)}\n          />\n          {tempDataRecorder.dataRecorders ? (\n            <Fragment>\n              <p>\n                Number of recorders: {tempDataRecorder.dataRecorders.length}\n              </p>\n              <Button onClick={() => this.addNewDataRecorder()}>\n                Add New Data Recorder\n              </Button>\n              {tempDataRecorder.dataRecorders.map((dr, index) => (\n                <DataRecorderItem\n                  key={index}\n                  data={dr}\n                  onChange={(dataPath, value) =>\n                    this.onDataChange(\n                      `dataRecorders[${index}].${dataPath}`,\n                      value\n                    )\n                  }\n                  onEnable={()=> {\n                    this.onDataChange(\n                      `dataRecorders[${index}].enable`,\n                      !dr.enable\n                    )\n                  }}\n                  onDelete={() => {\n                    let newDataRecorders = [...tempDataRecorder.dataRecorders];\n                    newDataRecorders.splice(index, 1);\n                    this.onDataChange(\"dataRecorders\", newDataRecorders);\n                  }}\n                  onDuplicate={() => {\n                    let dataRecorder = {\n                      ...dr,\n                      id: `${dr.id}-duplicated`,\n                      name: `${dr.name} [duplicated]`,\n                    };\n                    let newDataRecorders = [\n                      ...tempDataRecorder.dataRecorders,\n                      dataRecorder,\n                    ];\n                    this.onDataChange(\"dataRecorders\", newDataRecorders);\n                  }}\n                />\n              ))}\n            </Fragment>\n          ) : (\n            <Button onClick={() => this.addNewDataRecorder()}>\n              Add New Data Recorder\n            </Button>\n          )}\n          <p></p>\n        </Fragment>\n      );\n    }\n\n    return (\n      <LayoutPage>\n        <a\n          href={`${window.location.pathname}?view=${\n            viewType === \"json\" ? \"form\" : \"json\"\n          }`}\n          style={{ marginRight: 10 }}\n        >\n          {\" \"}\n          <SwitcherOutlined /> Switch View\n        </a>\n        <Button style={{ marginRight: 10 }} onClick={() => this.exportModel(tempDataRecorder)}>\n          <ExportOutlined />\n          Export Model\n        </Button>\n        <Button type=\"primary\" onClick={() => this.exportModel(tempDataRecorder)}>\n          <RightOutlined />\n          Start Recording\n        </Button>\n        <p></p>\n        {view}\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            if (isNewDataRecorder) {\n              addNewDataRecorder(tempDataRecorder);\n            } else {\n              updateDataRecorder(dataRecorderFileName, tempDataRecorder);\n            }\n          }}\n          style={{ marginTop: \"10px\" }}\n        >\n          Save\n        </Button>\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ dataRecorder }) => ({\n  dataRecorder,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestDataRecorder: (dataRecorderFileName) =>\n    dispatch(requestDataRecorder(dataRecorderFileName)),\n  addNewDataRecorder: (newDataRecorder) =>\n    dispatch(requestAddNewDataRecorder(newDataRecorder)),\n  updateDataRecorder: (dataRecorderFileName, dataRecorder) =>\n    dispatch(requestUpdateDataRecorder({ dataRecorderFileName, dataRecorder })),\n  showModal: (formID) => dispatch(showModal(formID)),\n  changeDataRecorderName: (newName) =>\n    dispatch(changeDataRecorderName(newName)),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(DataRecorderPage);\n","import React from \"react\";\nimport TSModal from \"../TSModal\";\nimport { Checkbox, List } from \"antd\";\n\nconst SelectionModal = ({\n  onCancel,\n  onChange,\n  enable,\n  options,\n  defaultValue,\n  title\n}) => (\n  <TSModal\n    title={title}\n    visible={enable}\n    onCancel={() => onCancel()}\n    footer={[]}\n  >\n    <Checkbox.Group\n      style={{ width: \"100%\" }}\n      defaultValue={defaultValue}\n      onChange={(values) => onChange(values)}\n    >\n      <List\n        size=\"small\"\n        dataSource={options}\n        renderItem={(item) => (\n          <List.Item>\n            <Checkbox value={item.id}>{item.name}</Checkbox>\n          </List.Item>\n        )}\n      />\n    </Checkbox.Group>\n  </TSModal>\n);\nexport default SelectionModal;\n","import SelectionModal from './SelectionModal';\nimport './style.css';\nexport default SelectionModal;","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Menu, Dropdown, Button, Form, Alert } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport LayoutPage from \"./LayoutPage\";\nimport {\n  requestTestCampaign,\n  requestAddNewTestCampaign,\n  requestUpdateTestCampaign,\n  requestAllTestCases,  \n} from \"../actions\";\nimport { FormEditableTextItem } from \"../components/FormItems\";\nimport SelectionModal from \"../components/SelectionModal\";\nimport { getLastPath } from \"../utils\";\n\n//TODO: add test case\nclass TestCampaignPage extends Component {\n  constructor(props) {\n    super(props);\n    const { testCampaign } = props;\n    if (testCampaign) {\n      const { id, name, description, testCaseIds } = testCampaign;\n      this.state = {\n        id,\n        originalId: id,\n        name,\n        description,\n        testCaseIds,\n        isChanged: false,\n        isNew: false,\n        showTestCaseModal: false,\n      };\n    } else {\n      const currentTime = Date.now();\n      const tcId = getLastPath();\n      this.state = {\n        id: tcId,\n        originalId: null,\n        name: `new-test-campaign-${currentTime}-name`,\n        description: `new-test-campaign-${currentTime}-description`,\n        testCaseIds: [],\n        isChanged: true,\n        isNew: true,\n        showTestCaseModal: false,\n      };\n    }\n  }\n\n  componentDidMount() {\n    const tcId = getLastPath();\n    this.props.fetchTestCampaign(tcId);\n    this.props.fetchTestCases();\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { testCampaign } = newProps;\n    if (testCampaign) {\n      const { id, name, description, testCaseIds } = testCampaign;\n      this.setState({\n        id,\n        originalId: id,\n        name,\n        description,\n        testCaseIds,\n        isChanged: false,\n        isNew: false,\n      });\n    }\n  }\n\n  moveTestCaseUp(index) {\n    const { testCaseIds } = this.state;\n    let newTestCaseIds = [...testCaseIds];\n    const selectTC = newTestCaseIds[index];\n    newTestCaseIds[index] = newTestCaseIds[index - 1];\n    newTestCaseIds[index - 1] = selectTC;\n    this.setState({ testCaseIds: newTestCaseIds, isChanged: true });\n  }\n\n  moveTestCaseDown(index) {\n    const { testCaseIds } = this.state;\n    let newTestCaseIds = [...testCaseIds];\n    const selectTC = newTestCaseIds[index];\n    newTestCaseIds[index] = newTestCaseIds[index + 1];\n    newTestCaseIds[index + 1] = selectTC;\n    this.setState({ testCaseIds: newTestCaseIds, isChanged: true });\n  }\n\n  removeTestCase(index) {\n    const { testCaseIds } = this.state;\n    let newTestCaseIds = [...testCaseIds];\n    newTestCaseIds.splice(index, 1);\n    this.setState({ testCaseIds: newTestCaseIds, isChanged: true });\n  }\n\n  updateTestCaseIds(values) {\n    this.setState({ testCaseIds: values, isChanged: true });\n  }\n\n  updateId(newId) {\n    if (newId !== this.state.originalId) {\n      this.setState({ id: newId, isChanged: true });\n    }\n  }\n  updateName(newName) {\n    this.setState({ name: newName, isChanged: true });\n  }\n  updateDescription(newDescription) {\n    this.setState({ description: newDescription, isChanged: true });\n  }\n\n  saveTestCampaign() {\n    const {\n      id,\n      name,\n      description,\n      testCaseIds,\n      originalId,\n      isNew,\n    } = this.state;\n    if (isNew) {\n      this.props.addNewTestCampaign({ id, name, description, testCaseIds });\n      this.setState({ isChanged: false, isNew: false, originalId: id });\n    } else {\n      this.props.updateTestCampaign(originalId, {\n        id,\n        name,\n        description,\n        testCaseIds,\n      });\n      this.setState({ isChanged: false, originalId: id });\n    }\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      description,\n      testCaseIds,\n      isChanged,\n      isNew,\n      showTestCaseModal,\n    } = this.state;\n\n    const dataSource = testCaseIds.map((tcId, index) => ({\n      id: tcId,\n      key: index,\n    }));\n    const columns = [\n      {\n        title: \"Id\",\n        key: \"data\",\n        render: (tc) => <a href={`/test-cases/${tc.id}`}>{tc.id}</a>,\n      },\n      {\n        title: \"Action\",\n        key: \"data\",\n        render: (tc) => (\n          <Dropdown\n            overlay={\n              <Menu>\n                {tc.key > 0 && (\n                  <Menu.Item\n                    key=\"moveup\"\n                    onClick={() => this.moveTestCaseUp(tc.key)}\n                  >\n                    Move Up\n                  </Menu.Item>\n                )}\n                {tc.key < testCaseIds.length - 1 && (\n                  <Menu.Item\n                    key=\"movedown\"\n                    onClick={() => this.moveTestCaseDown(tc.key)}\n                  >\n                    Move Down\n                  </Menu.Item>\n                )}\n                <Menu.Item\n                  key=\"delete\"\n                  onClick={() => this.removeTestCase(tc.key)}\n                >\n                  Remove\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Button>\n                Action <DownOutlined />\n              </Button>\n            </a>\n          </Dropdown>\n        ),\n      },\n    ];\n    return (\n      <LayoutPage\n        pageTitle={name}\n        pageSubTitle=\"View and update the test campaign detail\"\n      >        \n        <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }}>\n          <FormEditableTextItem\n            label=\"Id\"\n            defaultValue={id}\n            onChange={(newId) => this.updateId(newId)}\n          />\n          <FormEditableTextItem\n            label=\"Name\"\n            defaultValue={name}\n            onChange={(newName) => this.updateName(newName)}\n          />\n          <FormEditableTextItem\n            label=\"Description\"\n            defaultValue={description}\n            onChange={(newDescription) =>\n              this.updateDescription(newDescription)\n            }\n          />\n        </Form>\n        <Button\n          style={{ marginBottom: \"10px\" }}\n          onClick={() => {\n            if (showTestCaseModal === false) {\n              this.setState({ showTestCaseModal: true });\n            }\n          }}\n        >\n          Add Test Case\n          <SelectionModal\n            title=\"Select test cases\"\n            enable={showTestCaseModal}\n            onCancel={() => {\n              this.setState({ showTestCaseModal: false });\n            }}\n            defaultValue={testCaseIds}\n            options={this.props.allTestCases}\n            onChange={(values) => this.updateTestCaseIds(values)}\n          />\n        </Button>\n        <Table columns={columns} dataSource={dataSource} />\n        {isChanged && (\n          <Button\n            onClick={() => this.saveTestCampaign()}\n            disabled={isChanged ? false : true}\n            type=\"primary\"\n          >\n            Save\n          </Button>\n        )}\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ testCampaigns, testCases }) => ({\n  testCampaign: testCampaigns.currentTestCampaign,\n  allTestCases: testCases.allTestCases,\n  runningStatus: testCampaigns.runningStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTestCampaign: (testCampaignId) =>\n    dispatch(requestTestCampaign(testCampaignId)),\n  fetchTestCases: () => dispatch(requestAllTestCases()),\n  updateTestCampaign: (originalId, updatedTestCampaign) =>\n    dispatch(\n      requestUpdateTestCampaign({\n        id: originalId,\n        testCampaign: updatedTestCampaign,\n      })\n    ),\n  addNewTestCampaign: (testCampaign) =>\n    dispatch(requestAddNewTestCampaign(testCampaign)),  \n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(TestCampaignPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Menu, Dropdown, Button, Form, Alert } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport LayoutPage from \"./LayoutPage\";\nimport {\n  requestAllTestCases,\n  requestAddNewTestCase,\n  requestDeleteTestCase,\n} from \"../actions\";\n\nclass TestCaseListPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchTestCases();\n  }\n\n  duplicateTestCase(tc) {\n    const newTc = {\n      id: `${tc.id}-[duplicated]`,\n      name: `${tc.name}-[duplicated]`,\n      description: tc.description,\n      testCaseIds: tc.testCaseIds,\n    };\n    this.props.addNewTestCase(newTc);\n  }\n\n  render() {\n    const { testCases, deleteTestCase } = this.props;\n    const dataSource = testCases.map((tc) => ({ ...tc, key: tc.id }));\n    const columns = [\n      {\n        title: \"Id\",\n        key: \"data\",\n        render: (tc) => <a href={`/test-cases/${tc.id}`}> {tc.name} </a>,\n      },\n      {\n        title: \"Action\",\n        key: \"data\",\n        render: (tc) => (\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item\n                  key=\"duplicate\"\n                  onClick={() => this.duplicateTestCase(tc)}\n                >\n                  Duplicate\n                </Menu.Item>\n                <Menu.Item\n                  key=\"delete\"\n                  onClick={() => deleteTestCase(tc.id)}\n                >\n                  Delete\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Button>\n                Action <DownOutlined />\n              </Button>\n            </a>\n          </Dropdown>\n        ),\n      },\n    ];\n    return (\n      <LayoutPage\n        pageTitle=\"Test Case\"\n        pageSubTitle=\"All the test cases\"\n      >\n        <a href={`/test-cases/new-case-${Date.now()}`}>\n          <Button style={{ marginBottom: \"10px\" }}>Add New Case</Button>\n        </a>\n        <Table columns={columns} dataSource={dataSource} />\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ testCases }) => ({\n  testCases: testCases.allTestCases,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchTestCases: () => dispatch(requestAllTestCases()),\n  deleteTestCase: (testCaseId) =>\n    dispatch(requestDeleteTestCase(testCaseId)),\n  addNewTestCase: (testCase) =>\n    dispatch(requestAddNewTestCase(testCase)),\n});\n\nexport default connect(\n  mapPropsToStates,\n  mapDispatchToProps\n)(TestCaseListPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Menu, Dropdown, Button, Form } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport LayoutPage from \"./LayoutPage\";\nimport {\n  requestTestCase,\n  requestAddNewTestCase,\n  requestUpdateTestCase,\n  requestAllModels,\n  requestAllDatasets,\n} from \"../actions\";\nimport { FormEditableTextItem, FormSelectItem } from \"../components/FormItems\";\nimport { getLastPath } from \"../utils\";\nimport SelectionModal from \"../components/SelectionModal\";\n// TODO: add dataset\nclass TestCasePage extends Component {\n  constructor(props) {\n    super(props);\n    const { testCase } = props;\n    if (testCase) {\n      const {\n        id,\n        name,\n        description,\n        tags,\n        modelFileName,\n        datasetIds,\n      } = testCase;\n      this.state = {\n        id,\n        originalId: id,\n        name,\n        description,\n        tags,\n        modelFileName,\n        datasetIds,\n        isChanged: false,\n        isNew: false,\n        showDatasetModal: false,\n      };\n    } else {\n      const currentTime = Date.now();\n      const dsId = getLastPath();\n      this.state = {\n        id: dsId,\n        originalId: null,\n        name: `new-test-case-${currentTime}-name`,\n        description: `new-test-case-${currentTime}-description`,\n        tags: [],\n        modelFileName: null,\n        datasetIds: [],\n        isChanged: true,\n        isNew: true,\n        showDatasetModal: false,\n      };\n    }\n  }\n\n  componentDidMount() {\n    const dsId = getLastPath();\n    this.props.fetchTestCase(dsId);\n    this.props.fetchModelFiles();\n    this.props.fetchDatasets();\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { testCase } = newProps;\n    if (testCase) {\n      const {\n        id,\n        name,\n        description,\n        tags,\n        modelFileName,\n        datasetIds,\n      } = testCase;\n      this.setState({\n        id,\n        originalId: id,\n        name,\n        description,\n        tags,\n        modelFileName,\n        datasetIds,\n        isChanged: false,\n        isNew: false,\n      });\n    }\n  }\n\n  moveDatasetUp(index) {\n    const { datasetIds } = this.state;\n    let newDatasetIds = [...datasetIds];\n    const selectDS = newDatasetIds[index];\n    newDatasetIds[index] = newDatasetIds[index - 1];\n    newDatasetIds[index - 1] = selectDS;\n    this.setState({ datasetIds: newDatasetIds, isChanged: true });\n  }\n\n  moveDatasetDown(index) {\n    const { datasetIds } = this.state;\n    let newDatasetIds = [...datasetIds];\n    const selectDS = newDatasetIds[index];\n    newDatasetIds[index] = newDatasetIds[index + 1];\n    newDatasetIds[index + 1] = selectDS;\n    this.setState({ datasetIds: newDatasetIds, isChanged: true });\n  }\n\n  removeDataset(index) {\n    const { datasetIds } = this.state;\n    let newDatasetIds = [...datasetIds];\n    newDatasetIds.splice(index, 1);\n    this.setState({ datasetIds: newDatasetIds, isChanged: true });\n  }\n\n  updateDatasets(newDatasets) {\n    this.setState({ datasetIds: newDatasets, isChanged: true });\n  }\n\n  updateId(newId) {\n    if (newId !== this.state.originalId) {\n      this.setState({ id: newId, isChanged: true });\n    }\n  }\n  updateName(newName) {\n    this.setState({ name: newName, isChanged: true });\n  }\n\n  updateDescription(newDescription) {\n    this.setState({ description: newDescription, isChanged: true });\n  }\n\n  updateModelFileName(newModelFileName) {\n    this.setState({ modelFileName: newModelFileName, isChanged: true });\n  }\n\n  updateTags(newTags) {\n    this.setState({ tags: JSON.parse(newTags), isChanged: true });\n  }\n\n  saveTestCase() {\n    const {\n      id,\n      name,\n      description,\n      tags,\n      modelFileName,\n      datasetIds,\n      originalId,\n      isNew,\n    } = this.state;\n    if (isNew) {\n      this.props.addNewTestCase({\n        id,\n        name,\n        description,\n        tags,\n        modelFileName,\n        datasetIds,\n      });\n      this.setState({ isChanged: false, isNew: false, originalId: id });\n    } else {\n      this.props.updateTestCase(originalId, {\n        id,\n        name,\n        description,\n        tags,\n        modelFileName,\n        datasetIds,\n      });\n      this.setState({ isChanged: false, originalId: id });\n    }\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      description,\n      tags,\n      modelFileName,\n      datasetIds,\n      isChanged,\n      isNew,\n      showDatasetModal,\n    } = this.state;\n    const { allModels } = this.props;\n    const dataSource = datasetIds.map((dsId, index) => ({\n      id: dsId,\n      key: index,\n    }));\n    const columns = [\n      {\n        title: \"Id\",\n        key: \"data\",\n        render: (ds) => <a href={`/data-sets/${ds.id}`}>{ds.id}</a>,\n      },\n      {\n        title: \"Action\",\n        key: \"data\",\n        render: (ds) => (\n          <Dropdown\n            overlay={\n              <Menu>\n                {ds.key > 0 && (\n                  <Menu.Item\n                    key=\"moveup\"\n                    onClick={() => this.moveDatasetUp(ds.key)}\n                  >\n                    Move Up\n                  </Menu.Item>\n                )}\n                {ds.key < datasetIds.length - 1 && (\n                  <Menu.Item\n                    key=\"movedown\"\n                    onClick={() => this.moveDatasetDown(ds.key)}\n                  >\n                    Move Down\n                  </Menu.Item>\n                )}\n                <Menu.Item\n                  key=\"delete\"\n                  onClick={() => this.removeDataset(ds.key)}\n                >\n                  Remove\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Button>\n                Action <DownOutlined />\n              </Button>\n            </a>\n          </Dropdown>\n        ),\n      },\n    ];\n    // TODO: improve the tags view: https://ant.design/components/tag/\n    // - color\n    // - action remove/add new tags\n    return (\n      <LayoutPage\n        pageTitle={name}\n        pageSubTitle=\"View and update the test case detail\"\n      >\n        <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }}>\n          <FormEditableTextItem\n            label=\"Id\"\n            defaultValue={id}\n            onChange={(newId) => this.updateId(newId)}\n          />\n          <FormEditableTextItem\n            label=\"Name\"\n            defaultValue={name}\n            onChange={(newName) => this.updateName(newName)}\n          />\n          <FormEditableTextItem\n            label=\"Description\"\n            defaultValue={description}\n            onChange={(newDescription) =>\n              this.updateDescription(newDescription)\n            }\n          />\n          <FormSelectItem\n            label=\"Model File Name\"\n            defaultValue={modelFileName}\n            options={allModels}\n            onChange={(newModelFileName) =>\n              this.updateModelFileName(newModelFileName)\n            }\n          />\n          <FormEditableTextItem\n            label=\"Tags\"\n            defaultValue={JSON.stringify(tags)}\n            onChange={(newTags) => this.updateTags(newTags)}\n          />\n        </Form>\n        <Button\n          style={{ marginBottom: \"10px\" }}\n          onClick={() => {\n            if (showDatasetModal === false) {\n              this.setState({ showDatasetModal: true });\n            }\n          }}\n        >\n          Add Dataset\n          <SelectionModal\n            title=\"Dataset\"\n            enable={showDatasetModal}\n            onCancel={() => {\n              this.setState({ showDatasetModal: false });\n            }}\n            defaultValue={datasetIds}\n            options={this.props.allDatasets}\n            onChange={(values) => this.updateDatasets(values)}\n          />\n        </Button>\n        <Table columns={columns} dataSource={dataSource} />\n        {isChanged && (\n          <Button\n            onClick={() => this.saveTestCase()}\n            disabled={isChanged ? false : true}\n            type=\"primary\"\n          >\n            Save\n          </Button>\n        )}\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ testCases, allModels, datasets }) => ({\n  testCase: testCases.currentTestCase,\n  allModels,\n  allDatasets: datasets.allDatasets,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchModelFiles: () => dispatch(requestAllModels()),\n  fetchTestCase: (testCaseId) => dispatch(requestTestCase(testCaseId)),\n  fetchDatasets: () => dispatch(requestAllDatasets()),\n  updateTestCase: (originalId, updatedTestCase) =>\n    dispatch(\n      requestUpdateTestCase({\n        id: originalId,\n        testCase: updatedTestCase,\n      })\n    ),\n  addNewTestCase: (testCase) => dispatch(requestAddNewTestCase(testCase)),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(TestCasePage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Table, Menu, Dropdown, Button, Form, Alert } from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport LayoutPage from \"./LayoutPage\";\nimport {\n  requestAllDatasets,\n  requestAddNewDataset,\n  requestDeleteDataset,\n} from \"../actions\";\n\nclass DatasetListPage extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.props.fetchDatasets();\n  }\n\n  /**\n   * - id\n- name\n- tags\n- description\n- createdAt/ lastModified\n- source:  \n   + GENERATED\n   + MUTATED\n   + RECORDED\n\n   * @param {Object} ds The selected dataset to be duplicated\n   */\n  duplicateDataset(ds) {\n    const currentTime = Date.now();\n    const newDS = {\n      id: `${ds.id}-[duplicated]`,\n      name: `${ds.name}-[duplicated]`,\n      description: ds.description,\n      tags: ds.tags,\n      createdAt: currentTime,\n      lastModified: currentTime,\n      source: 'MUTATED',\n    };\n    this.props.addNewDataset(newDS);\n  }\n\n  render() {\n    const { datasets, deleteDataset } = this.props;\n    const dataSource = datasets.map((ds) => ({ ...ds, key: ds.id }));\n    const columns = [\n      {\n        title: \"Id\",\n        key: \"data\",\n        render: (ds) => <a href={`/data-sets/${ds.id}`}> {ds.id} </a>,\n      },\n      {\n        title: \"Action\",\n        key: \"data\",\n        render: (ds) => (\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item\n                  key=\"simulate\"\n                >\n                  <a href={`/simulation?datasetId=${ds.id}`}>Simulate</a>\n                </Menu.Item>\n                <Menu.Item\n                  key=\"duplicate\"\n                  onClick={() => this.duplicateDataset(ds)}\n                >\n                  Duplicate\n                </Menu.Item>\n                <Menu.Item\n                  key=\"delete\"\n                  onClick={() => deleteDataset(ds.id)}\n                >\n                  Delete\n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Button>\n                Action <DownOutlined />\n              </Button>\n            </a>\n          </Dropdown>\n        ),\n      },\n    ];\n    return (\n      <LayoutPage\n        pageTitle=\"Dataset\"\n        pageSubTitle=\"All the datasets\"\n      > \n        <a href={`/data-sets/new-dataset-${Date.now()}`}>\n          <Button style={{ marginBottom: \"10px\" }}>Add New Dataset</Button>\n        </a>\n        <Table columns={columns} dataSource={dataSource} />\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ datasets }) => ({\n  datasets: datasets.allDatasets,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchDatasets: () => dispatch(requestAllDatasets()),\n  deleteDataset: (datasetId) =>\n    dispatch(requestDeleteDataset(datasetId)),\n  addNewDataset: (dataset) =>\n    dispatch(requestAddNewDataset(dataset)),\n});\n\nexport default connect(\n  mapPropsToStates,\n  mapDispatchToProps\n)(DatasetListPage);\n","import React, { Component } from \"react\";\nimport TSModal from \"../TSModal\";\nimport { Form, Button } from \"antd\";\nimport {\n  updateObjectByPath,\n  deepCloneObject,\n} from \"../../utils\";\nimport {\n  FormTextItem,\n  FormSwitchItem,\n  FormEditableTextItem,\n} from \"../FormItems\";\n\nconst initEvent = () => ({\n  timestamp: Date.now(),\n  topic: `topic-${Date.now()}`,\n  isSensorData: false,\n  values: `values-${Date.now()}`,\n  datasetId: `datasetId-${Date.now()}`,\n});\n\nclass EventModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      event: props.event? deepCloneObject(props.event) : initEvent(),\n    };\n  }\n\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState.event };\n      updateObjectByPath(newData, dataPath, value);\n      return { event: newData};\n    });\n  }\n\n  render() {\n    const { event } = this.state;\n    const {timestamp, topic, isSensorData, values, datasetId } = event;\n    const {onCancel, onOK, enable } = this.props;\n    const footer = [\n      <Button key=\"cancel\" onClick={() => onCancel()}>\n        Cancel\n      </Button>,\n      <Button key=\"ok\" type=\"primary\" onClick={() => onOK(event)}>\n        OK\n      </Button>,\n    ];\n\n    return (\n      <TSModal\n        title={\"Event\"}\n        visible={enable}\n        onCancel={() => onCancel()}\n        footer={footer}\n      >\n        <Form\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 14,\n          }}\n        >\n          <FormTextItem\n            label=\"Timestamp\"\n            defaultValue={timestamp}\n            onChange={(v) => this.onDataChange(\"timestamp\", v)}\n            helpText=\"The timestamp of the event\"\n          />\n          <FormEditableTextItem\n            label=\"Topic\"\n            defaultValue={topic}\n            onChange={(v) => this.onDataChange(\"topic\", v)}\n            helpText=\"The MQTT/STOMP topic on which the actuator will be listening to receive actuated data\"\n          />\n          <FormSwitchItem\n            label=\"Is Sensor Data\"\n            onChange={(v) => this.onDataChange(`isSensorData`, v)}\n            checked={isSensorData ? true : false}\n            checkedChildren={\"data sent by sensor\"}\n            unCheckedChildren={\"data received by actuator\"}\n            helpText=\"True if this is the data sent by sensor\"\n          />\n          <FormTextItem\n            label=\"Dataset Id\"\n            defaultValue={datasetId}\n            onChange={(v) => this.onDataChange(\"datasetId\", v)}\n            helpText=\"The timestamp of the event\"\n          />\n          <FormTextItem\n            label=\"Value\"\n            defaultValue={JSON.stringify(values)}\n            onChange={(v) => this.onDataChange(\"values\", JSON.parse(v))}\n            helpText=\"The value of the event\"\n          />\n        </Form>\n      </TSModal>\n    );\n  }\n}\n\nexport default EventModal;","import EventModal from './EventModal';\nimport './style.css';\nexport default EventModal;","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport moment from 'moment';\nimport {\n  Table,\n  Menu,\n  Dropdown,\n  Button,\n  Tooltip,\n  Form\n} from \"antd\";\nimport { DownOutlined } from \"@ant-design/icons\";\nimport LayoutPage from \"./LayoutPage\";\nimport {\n  requestDataset,\n  requestAddNewDataset,\n  requestUpdateDataset,\n  requestEventsByDatasetId,\n  requestAddNewEvent,\n  requestDeleteEvent,\n  requestUpdateEvent,\n} from \"../actions\";\nimport {\n  FormEditableTextItem,\n  FormSelectItem,\n  FormTextNotEditableItem,\n} from \"../components/FormItems\";\nimport { getLastPath } from \"../utils\";\nimport EventModal from \"../components/EventModal\";\n\n/**\n * - id\n- name\n- tags\n- description\n- createdAt/ lastModified\n- source:  \n   + GENERATED\n   + MUTATED\n   + RECORDED\n\n */\n\nconst initEvent = (dsId) => ({\n  _id: `new-event-id`,\n  timestamp: Date.now(),\n  topic: `topic-${Date.now()}`,\n  isSensorData: false,\n  values: `values-${Date.now()}`,\n  datasetId: dsId,\n});\n\nclass DatasetPage extends Component {\n  constructor(props) {\n    super(props);\n    const { dataset } = props;\n    if (dataset) {\n      const {\n        id,\n        name,\n        description,\n        tags,\n        createdAt,\n        lastModified,\n        source,\n      } = dataset;\n      this.state = {\n        id,\n        originalId: id,\n        name,\n        description,\n        tags,\n        createdAt,\n        lastModified,\n        source,\n        isChanged: false,\n        events: [],\n        isNew: false,\n        newEvent: initEvent(id),\n        activeEventModal: null,\n      };\n    } else {\n      const currentTime = Date.now();\n      const dsId = getLastPath();\n      this.state = {\n        id: dsId,\n        originalId: null,\n        name: `new-dataset-${currentTime}-name`,\n        description: `new-dataset-${currentTime}-description`,\n        tags: [],\n        createdAt: currentTime,\n        lastModified: currentTime,\n        source: \"GENERATED\",\n        isChanged: true,\n        isNew: true,\n        events: [],\n        newEvent: initEvent(dsId),\n        activeEventModal: null,\n      };\n    }\n  }\n\n  componentDidMount() {\n    const dsId = getLastPath();\n    this.props.fetchDataset(dsId);\n    this.props.fetchEvents(dsId);\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { dataset, events } = newProps;\n    if (dataset) {\n      const {\n        id,\n        name,\n        description,\n        tags,\n        createdAt,\n        lastModified,\n        source,\n      } = dataset;\n      this.setState({\n        id,\n        originalId: id,\n        name,\n        description,\n        tags,\n        createdAt,\n        lastModified,\n        source,\n        isChanged: false,\n        events,\n        isNew: false,\n        activeEventModal: null,\n      });\n    }\n  }\n\n  moveEventUp(index) {\n    const { events } = this.state;\n    let newEvents = [...events];\n    const selectDS = newEvents[index];\n    newEvents[index] = newEvents[index - 1];\n    newEvents[index - 1] = selectDS;\n    this.setState({ events: newEvents, isChanged: true });\n  }\n\n  moveEventDown(index) {\n    const { events } = this.state;\n    let newEvents = [...events];\n    const selectDS = newEvents[index];\n    newEvents[index] = newEvents[index + 1];\n    newEvents[index + 1] = selectDS;\n    this.setState({ events: newEvents, isChanged: true });\n  }\n\n  updateId(newId) {\n    if (newId !== this.state.originalId) {\n      this.setState({ id: newId, isChanged: true, newEvent: initEvent(newId) });\n    }\n  }\n  updateName(newName) {\n    this.setState({ name: newName, isChanged: true });\n  }\n\n  updateDescription(newDescription) {\n    this.setState({ description: newDescription, isChanged: true });\n  }\n\n  updateSource(newSource) {\n    this.setState({ source: newSource, isChanged: true });\n  }\n\n  updateTags(newTags) {\n    this.setState({ tags: JSON.parse(newTags), isChanged: true });\n  }\n\n  savedataset() {\n    const {\n      id,\n      name,\n      description,\n      tags,\n      source,\n      datasetIds,\n      originalId,\n      isNew,\n    } = this.state;\n    if (isNew) {\n      this.props.addNewdataset({\n        id,\n        name,\n        description,\n        tags,\n        source,\n        datasetIds,\n      });\n      this.setState({ isChanged: false, isNew: false, originalId: id });\n    } else {\n      this.props.updatedataset(originalId, {\n        id,\n        name,\n        description,\n        tags,\n        source,\n        datasetIds,\n      });\n      this.setState({ isChanged: false, originalId: id });\n    }\n  }\n\n  changeActiveEventModal(id) {\n    this.setState({ activeEventModal: id });\n  }\n\n  render() {\n    const {\n      id,\n      name,\n      description,\n      tags,\n      source,\n      events,\n      isChanged,\n      newEvent,\n      isNew,\n    } = this.state;\n    const nbEvents = events.length;\n    const startTime = events[0] ? events[0].timestamp : 0;\n    const endTime = events[nbEvents - 1] ? events[nbEvents - 1].timestamp : 0;\n    let sensors = [];\n    let actuators = [];\n    let topicFilters = [];\n    for (let index = 0; index < events.length; index++) {\n      const event = events[index];\n      if (event.isSensorData && sensors.indexOf(event.topic) === -1) {\n        // this is a new sensor\n        sensors.push(event.topic);\n        topicFilters.push({text: event.topic, value: event.topic});\n      } else if (!event.isSensorData && actuators.indexOf(event.topic) === -1) {\n        // This is a new actuator\n        actuators.push(event.topic);\n        topicFilters.push({text: event.topic, value: event.topic});\n      }\n    }\n    const nbSensors = sensors.length;\n    const nbActuators = actuators.length;\n\n    const dataSource = events.map((event, index) => ({\n      ...event,\n      key: index,\n    }));\n    const columns = [\n      {\n        title: \"Timestamp\",\n        key: \"timestamp\",\n        dataIndex: \"timestamp\",\n        sorter: (a, b) => a.timestamp - b.timestamp,\n        render: ts => moment(ts).fromNow(),\n      },\n      {\n        title: \"Topic\",\n        key: \"topic\",\n        dataIndex: \"topic\",\n        render: (topic) => topic,\n        filters: topicFilters,\n        onFilter: (value, data) => data.topic === value,\n      },\n      {\n        title: \"Is sensor's data\",\n        key: \"isSensorData\",\n        dataIndex: \"isSensorData\",\n        filters: [\n          {\n            text: \"Sensor's Data\",\n            value: true\n          },{\n            text: \"Actuator's Data\",\n            value: false\n          },\n        ],\n        onFilter: (value, data) => data.isSensorData === value,\n        render: (isSensorData) => (isSensorData ? \"Yes\" : \"No\"),\n      },\n      {\n        title: \"Values\",\n        key: \"values\",\n        dataIndex: \"values\",\n        render: (value) => JSON.stringify(value),\n      },\n      {\n        title: \"Action\",\n        key: \"data\",\n        render: (event) => (\n          <Dropdown\n            overlay={\n              <Menu>\n                <Menu.Item\n                  key=\"delete\"\n                  onClick={() => this.props.deleteEvent(event._id)}\n                >\n                  Delete\n                </Menu.Item>\n                <Menu.Item\n                  key=\"duplicate\"\n                  onClick={() => this.props.addNewEvent(event)}\n                >\n                  Duplicate\n                </Menu.Item>\n                <Menu.Item\n                  key=\"mutate\"\n                  onClick={() => {\n                    if (this.state.activeEventModal === null) {\n                      this.changeActiveEventModal(event._id);\n                    }\n                  }}\n                >\n                  Modify Value\n                  <EventModal\n                    event={event}\n                    enable={event._id === this.state.activeEventModal}\n                    onCancel={() => {\n                      this.changeActiveEventModal(null);\n                    }}\n                    onOK={(newEvent) => {\n                      this.props.updateEvent(event._id, newEvent);\n                      this.changeActiveEventModal(null);\n                    }}\n                    onDataChange={(dataPath, value) => {\n                      console.log(dataPath, value);\n                    }}\n                  />                  \n                </Menu.Item>\n              </Menu>\n            }\n          >\n            <a\n              className=\"ant-dropdown-link\"\n              onClick={(e) => e.preventDefault()}\n            >\n              <Button>\n                Action <DownOutlined />\n              </Button>\n            </a>            \n          </Dropdown>\n        ),\n      },\n    ];\n    // TODO: improve the tags view: https://ant.design/components/tag/\n    // - color\n    // - action remove/add new tags\n    // Statistic on events data\n    // - Total number of events\n    // - Number of sensors\n    // - Number of actuators\n    // - Number of gateway\n    // - Started time/ End time\n    // - Source: recorded, generated, etc..\n    \n    // TODO: Make statistic beautiful\n    return (\n      <LayoutPage\n        pageTitle={name}\n        pageSubTitle=\"View and update the test case detail\"\n      >\n        <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }}>\n          {isNew ? (\n            <Fragment>\n              <FormEditableTextItem\n                label=\"Id\"\n                defaultValue={id}\n                onChange={(newId) => this.updateId(newId)}\n              />\n              <FormSelectItem\n                label=\"Source\"\n                defaultValue={source}\n                options={[\"GENERATED\", \"MUTATED\", \"RECORDED\"]}\n                onChange={(newSource) => this.updateSource(newSource)}\n              />\n            </Fragment>\n          ) : (\n            <Fragment>\n              <FormTextNotEditableItem label=\"Id\" value={id} />\n              <FormTextNotEditableItem label=\"Source\" value={source} />\n            </Fragment>\n          )}\n\n          <FormEditableTextItem\n            label=\"Name\"\n            defaultValue={name}\n            onChange={(newName) => this.updateName(newName)}\n          />\n          <FormEditableTextItem\n            label=\"Description\"\n            defaultValue={description}\n            onChange={(newDescription) =>\n              this.updateDescription(newDescription)\n            }\n          />\n          <FormEditableTextItem\n            label=\"Tags\"\n            defaultValue={JSON.stringify(tags)}\n            onChange={(newTags) => this.updateTags(newTags)}\n          />\n          <FormTextNotEditableItem label=\"Number of events\" value={nbEvents} />\n          <FormTextNotEditableItem\n            label=\"Number of sensors\"\n            value={nbSensors}\n          />\n          <FormTextNotEditableItem\n            label=\"Number of actuators\"\n            value={nbActuators}\n          />\n          <FormTextNotEditableItem\n            label=\"Started Time\"\n            value={new Date(startTime).toLocaleString()}\n          />\n          <FormTextNotEditableItem\n            label=\"Ended Time\"\n            value={new Date(endTime).toLocaleString()}\n          />\n        </Form>\n        <Tooltip title=\"The dataset need to be created before adding event\">\n          <Button\n            style={{ marginBottom: \"10px\" }}\n            onClick={() => {\n              if (this.state.activeEventModal === null) {\n                this.changeActiveEventModal(newEvent._id);\n              }\n            }}\n            disabled={isNew ? true : false}\n          >\n            Add Event\n            <EventModal\n              event={newEvent}\n              enable={newEvent._id === this.state.activeEventModal}\n              onCancel={() => {\n                console.log(\"Going to close the modal\");\n                this.changeActiveEventModal(null);\n              }}\n              onOK={(newEvent) => {\n                const {\n                  timestamp,\n                  isSensorData,\n                  topic,\n                  datasetId,\n                  values,\n                } = newEvent;\n                this.props.addNewEvent({\n                  timestamp,\n                  isSensorData,\n                  topic,\n                  datasetId,\n                  values,\n                });\n                this.changeActiveEventModal(null);\n              }}\n              onDataChange={(dataPath, value) => {\n                console.log(dataPath, value);\n              }}\n            />\n          </Button>\n        </Tooltip>\n        <Table\n          columns={columns}\n          dataSource={dataSource}\n        />\n        {isChanged && (\n          <Button\n            onClick={() => this.savedataset()}\n            disabled={isChanged ? false : true}\n            type=\"primary\"\n          >\n            Save\n          </Button>\n        )}\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ datasets }) => ({\n  dataset: datasets.currentDataset.dataset,\n  events: datasets.currentDataset.events,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchEvents: (datasetId) => dispatch(requestEventsByDatasetId(datasetId)),\n  fetchDataset: (datasetId) => dispatch(requestDataset(datasetId)),\n  updatedataset: (originalId, updateddataset) =>\n    dispatch(\n      requestUpdateDataset({\n        id: originalId,\n        dataset: updateddataset,\n      })\n    ),\n  addNewdataset: (dataset) => dispatch(requestAddNewDataset(dataset)),\n  addNewEvent: (event) => dispatch(requestAddNewEvent(event)),\n  updateEvent: (id, event) => dispatch(requestUpdateEvent({ id, event })),\n  deleteEvent: (eventId) => dispatch(requestDeleteEvent(eventId)),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(DatasetPage);\n\n// TODO: load more data in the table","import React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport LayoutPage from \"./LayoutPage\";\nimport { getQuery } from \"../utils\";\nimport {\n  FormSelectItem,\n  FormTextItem,\n  FormTextNotEditableItem,\n  FormTextAreaItem,\n} from \"../components/FormItems\";\nimport {\n  requestAllModels,\n  requestAllDatasets,\n  requestStartSimulation,\n  requestStopSimulation,\n  requestSimulationStatus,\n} from \"../actions\";\nimport { Form, Button } from \"antd\";\nconst NEW_DATA_SET_OPTION = \"New Dataset\";\nclass SimulationPage extends Component {\n  constructor(props) {\n    super(props);\n    const currentTime = Date.now();\n    this.state = {\n      modelFileName: null,\n      datasetId: NEW_DATA_SET_OPTION,\n      newDatasetId: `dataset-id-${currentTime}`,\n      datasetName: `dataset-name-${currentTime}`,\n      datasetDescription: `dataset-description-${currentTime}`,\n      datasetTags: [],\n    };\n  }\n\n  componentDidMount() {\n    const dsId = getQuery(\"datasetId\");\n    this.setState({\n      modelFileName: getQuery(\"model\"),\n      datasetId: dsId ? dsId : NEW_DATA_SET_OPTION,\n    });\n    this.props.fetchModelFiles();\n    this.props.fetchDatasets();\n    this.props.fetchSimulationStatus();\n    setInterval(() => {\n      this.props.fetchSimulationStatus();\n    }, 3000);\n  }\n\n  componentWillReceiveProps(newProps) {\n    if (!this.state.modelFileName && newProps.allModels) {\n      this.setState({ modelFileName: newProps.allModels[0] });\n    }\n  }\n\n  onModelFileNameChange(newModel) {\n    this.setState({ modelFileName: newModel });\n  }\n\n  onDatasetIdChange(newDS) {\n    this.setState({ datasetId: newDS });\n  }\n\n  onNewDatasetIdChange(newDS) {\n    this.setState({ newDatasetId: newDS });\n  }\n\n  onDatasetNameChange(name) {\n    this.setState({ datasetName: name });\n  }\n\n  onDatasetDescriptionChange(desc) {\n    this.setState({ datasetDescription: desc });\n  }\n\n  onDatasetTagsChange(tags) {\n    this.setState({ datasetTags: tags.split(\",\") });\n  }\n\n  render() {\n    const { simulationStatus } = this.props;\n    if (simulationStatus) {\n      const {\n        model,\n        modelFileName,\n        datasetId,\n        newDataset,\n        logFile,\n      } = simulationStatus;\n      return (\n        <LayoutPage\n          pageTitle=\"Simulation Page\"\n          pageSubTitle=\"Manually perform a simulation\"\n        >\n          <Form labelCol={{ span: 4 }} wrapperCol={{ span: 14 }}>\n            {modelFileName ? (\n              <FormTextNotEditableItem\n                label={\"Model File Name\"}\n                value={\n                  <a href={`/api/models/${modelFileName}`}>{modelFileName}</a>\n                }\n              />\n            ) : (\n              <FormTextNotEditableItem label={\"Model\"} value={model.name} />\n            )}\n\n            {datasetId ? (\n              <FormTextNotEditableItem label={\"Dataset Id\"} value={datasetId} />\n            ) : (\n              <Fragment>\n                <p>Store the generated data to a new dataset</p>\n                <FormTextNotEditableItem\n                  label=\"Dataset Id\"\n                  value={newDataset.id}\n                />\n                <FormTextNotEditableItem\n                  label=\"Name\"\n                  placeholder=\"Name\"\n                  value={newDataset.name}\n                />\n                <FormTextNotEditableItem\n                  label=\"Description\"\n                  placeholder=\"Description\"\n                  value={newDataset.description}\n                />\n                <FormTextNotEditableItem\n                  label=\"Tags\"\n                  placeholder=\"Tags\"\n                  value={JSON.stringify(newDataset.tags)}\n                />\n              </Fragment>\n            )}\n            <Form.Item\n              wrapperCol={{\n                xs: {\n                  span: 24,\n                  offset: 0,\n                },\n                sm: {\n                  span: 16,\n                  offset: 4,\n                },\n              }}\n            >\n              <Button\n                type=\"primary\"\n                onClick={() => {\n                  this.props.stopSimulation();\n                }}\n                danger\n              >\n                Stop\n              </Button>\n              <a href={`/logs/simulations/${logFile}`}>\n                <Button type=\"link\">View Log</Button>\n              </a>\n              <a href={`/graphview`}>\n                <Button type=\"link\">View Graph</Button>\n              </a>\n            </Form.Item>\n          </Form>\n        </LayoutPage>\n      );\n    }\n    const {\n      modelFileName,\n      datasetId,\n      newDatasetId,\n      datasetName,\n      datasetDescription,\n      datasetTags,\n    } = this.state;\n    const { allModels, allDatasets } = this.props;\n    const datasetOptions = allDatasets.map((ds) => ds.id);\n    datasetOptions.push(NEW_DATA_SET_OPTION);\n    return (\n      <LayoutPage\n        pageTitle=\"Simulation Page\"\n        pageSubTitle=\"Manually perform a simulation\"\n      >\n        <Form\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 14,\n          }}\n        >\n          <FormSelectItem\n            label={\"Model File Name\"}\n            defaultValue={modelFileName}\n            options={allModels}\n            onChange={(value) => this.onModelFileNameChange(value)}\n          />\n          <FormSelectItem\n            label={\"Dataset\"}\n            defaultValue={datasetId}\n            options={datasetOptions}\n            onChange={(value) => this.onDatasetIdChange(value)}\n          />\n          {datasetId === NEW_DATA_SET_OPTION && (\n            <Fragment>\n              Store the generated data to a new dataset\n              <FormTextItem\n                label=\"Id\"\n                placeholder=\"Dataset Id\"\n                defaultValue={newDatasetId}\n                onChange={(value) => this.onNewDatasetIdChange(value)}\n              />\n              <FormTextItem\n                label=\"Name\"\n                placeholder=\"Name\"\n                defaultValue={datasetName}\n                onChange={(value) => this.onDatasetNameChange(value)}\n              />\n              <FormTextAreaItem\n                label=\"Description\"\n                placeholder=\"Description\"\n                defaultValue={datasetDescription}\n                onChange={(value) => this.onDatasetDescriptionChange(value)}\n              />\n              <FormTextItem\n                label=\"Tags\"\n                placeholder=\"Tags\"\n                defaultValue={datasetTags}\n                onChange={(value) => this.onDatasetTagsChange(value)}\n              />\n            </Fragment>\n          )}\n          <Form.Item\n            wrapperCol={{\n              xs: {\n                span: 24,\n                offset: 0,\n              },\n              sm: {\n                span: 16,\n                offset: 4,\n              },\n            }}\n          >\n            <Button\n              type=\"dashed\"\n              onClick={() => {\n                this.props.startSimulation(\n                  modelFileName,\n                  datasetId,\n                  datasetId !== NEW_DATA_SET_OPTION\n                    ? null\n                    : {\n                        id: newDatasetId,\n                        name: datasetName,\n                        description: datasetDescription,\n                        tags: datasetTags,\n                        source: \"GENERATED\",\n                      }\n                );\n              }}\n            >\n              Start\n            </Button>\n          </Form.Item>\n        </Form>\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ allModels, datasets, simulationStatus }) => ({\n  allModels,\n  allDatasets: datasets.allDatasets,\n  simulationStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchModelFiles: () => dispatch(requestAllModels()),\n  fetchDatasets: () => dispatch(requestAllDatasets()),\n  fetchSimulationStatus: () => dispatch(requestSimulationStatus()),\n  startSimulation: (modelFileName, datasetId, newDataset) =>\n    dispatch(requestStartSimulation({ modelFileName, datasetId, newDataset })),\n  stopSimulation: () => dispatch(requestStopSimulation()),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(SimulationPage);\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Layout } from \"antd\";\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport ErrorBoundary from \"antd/lib/alert/ErrorBoundary\";\nimport TSHeader from \"./components/TSHeader\";\nimport TSFooter from \"./components/TSFooter\";\nimport ModelPage from \"./pages/ModelPage\";\nimport LogsPage from \"./pages/LogsPage\";\nimport LogFilePage from \"./pages/LogFilePage\";\nimport DummyPage from './pages/DummyPage';\nimport DataStoragePage from './pages/DataStoragePage';\nimport TestCampaignListPage from \"./pages/TestCampaignListPage\";\nimport ModelListPage from \"./pages/ModelListPage\";\nimport DataRecorderListPage from \"./pages/DataRecorderListPage\";\nimport DataRecorderPage from \"./pages/DataRecorderPage\";\nimport TestCampaignPage from \"./pages/TestCampaignPage\";\nimport TestCaseListPage from \"./pages/TestCaseListPage\";\nimport TestCasePage from \"./pages/TestCasePage\";\nimport DatasetListPage from \"./pages/DatasetListPage\";\nimport DatasetPage from \"./pages/DatasetPage\";\nimport SimulationPage from \"./pages/SimulationPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <ErrorBoundary>\n        <Layout className=\"layout\" style={{ height: \"100%\" }}>\n          <TSHeader />\n          <Switch>\n            <Route exact path=\"/\" render={() => <Redirect to=\"/test-campaigns\"/>} />\n            <Route path=\"/test-campaigns/:testCampaignId\">\n              <TestCampaignPage />\n            </Route>\n            <Route path=\"/test-campaigns\">\n              <TestCampaignListPage />\n            </Route>\n            <Route path=\"/test-cases/:testCaseId\">\n              <TestCasePage/>\n            </Route>\n            <Route path=\"/test-cases\">\n              <TestCaseListPage />\n            </Route>\n            <Route path=\"/data-sets/:datasetId\">\n              <DatasetPage />\n            </Route>\n            <Route path=\"/data-sets\">\n              <DatasetListPage />\n            </Route>\n            <Route path=\"/data-recorders/:dataRecorderId\">\n              <DataRecorderPage />\n            </Route>\n            <Route path=\"/data-recorders\">\n              <DataRecorderListPage />\n            </Route>\n            <Route path=\"/models/:modelId\">\n              <ModelPage />\n            </Route>\n            <Route path=\"/models\">\n              <ModelListPage />\n            </Route>\n            <Route path=\"/data-storage\">\n              <DataStoragePage />\n            </Route>\n            <Route path=\"/simulation\">\n              <SimulationPage />\n            </Route>\n            <Route path=\"/logs/data-recorders/:fileName\">\n              <DummyPage message=\"This is the log file page\"/>\n            </Route>\n            <Route path=\"/logs/data-recorders\">\n              <DummyPage message=\"This is the log file list page of data-recorders\"/>\n            </Route>\n            <Route path=\"/logs/simulation/:fileName\">\n              <DummyPage message=\"This is the log file page\"/>\n            </Route>\n            <Route path=\"/logs/simulation\">\n              <DummyPage message=\"This is the log file list page of simulation\"/>\n            </Route>\n            <Route path=\"/logs/test-campaigns/:fileName\">\n              <DummyPage message=\"This is the log file page\"/>\n            </Route>\n            <Route path=\"/logs/test-campaigns\">\n              <DummyPage message=\"This is the log file list page of test campaigns\"/>\n            </Route>\n            <Route path=\"/reports/test-campaigns/:fileName\">\n              <DummyPage message=\"This is the reports file page\"/>\n            </Route>\n            <Route path=\"/reports/test-campaigns\">\n              <DummyPage message=\"This is the reports file list page of test campaigns\"/>\n            </Route>\n            <Route path=\"/devopts/\">\n              <DummyPage message=\"This is the devopts page\"/>\n            </Route>\n          </Switch>          \n        </Layout>\n      </ErrorBoundary>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configStore from \"../../client/src/store\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nconst store = configStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}