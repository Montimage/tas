{"version":3,"sources":["VERSION.js","actions/index.js","utils.js","reducers/modelReducer.js","reducers/requestingReducer.js","reducers/notificationReducer.js","reducers/logsReducer.js","reducers/editingFormReducer.js","reducers/deployStatusReducer.js","reducers/statsReducer.js","reducers/index.js","api/index.js","sagas/requestModelSaga.js","sagas/uploadModelSaga.js","sagas/deploySaga.js","sagas/requestLogsSaga.js","sagas/requestStatsSaga.js","sagas/index.js","store/index.js","components/TSHeader/TSHeader.js","components/TSHeader/index.js","components/TSFooter/TSFooter.js","components/TSFooter/index.js","components/TSModal/index.js","components/TSModal/TSModal.js","components/FormItems/FormTextItem.js","components/FormItems/FormSelectItem.js","components/FormItems/FormNumberItem.js","components/FormItems/FormTimeRangeItem.js","components/FormItems/FormSwitchItem.js","components/FormItems/FormCheckBoxItems.js","components/FormItems/FormRegularNumberItem.js","components/FormItems/FormEditableTextItem.js","components/ConnectionConfig/MongoDBOptions.js","components/CollapseForm/CollapseForm.js","components/CollapseForm/index.js","components/ConnectionConfig/index.js","components/ConnectionConfig/ConnectionConfig.js","components/ThingModal/ThingModal.js","components/ThingModal/index.js","components/SensorModal/DataReplayerForm.js","components/SensorModal/DataSourceForms/DataSourceForm.js","components/SensorModal/DataSourceForms/EnergyForm.js","components/SensorModal/DataSourceForms/BooleanForm.js","components/SensorModal/DataSourceForms/EnumForm.js","components/SensorModal/DataSourceForms/IntegerFloatForm.js","components/SensorModal/DataSourceForms/MultipleDataSources.js","components/SensorModal/DataGeneratorForm.js","components/SensorModal/SensorModal.js","components/SensorModal/index.js","components/ActuatorModal/ActuatorModal.js","components/ActuatorModal/index.js","components/JSONView/Editor.jsx","components/JSONView/index.js","components/JSONView/JSONView.js","components/GraphView/GraphView.js","components/GraphView/index.js","components/ListView/TSListView/index.js","components/ListView/TSListView/TSListView.js","components/ListView/ThingsView/ThingsView.js","components/ListView/ThingsView/index.js","components/ListView/ListView.js","components/ListView/index.js","components/TSSider/TSSider.js","components/TSSider/index.js","components/LeftSider/index.js","components/RightSider/index.js","pages/LayoutPage.js","pages/ModelPage.js","pages/LogsPage.js","pages/LogFilePage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","setNotification","createAction","resetNotification","requestModel","setModel","changeModelName","addThing","deleteThing","addSimulationSensor","addSimulationActuator","deleteSimulationSensor","deleteSimulationActuator","changeStatusSensor","changeStatusActuator","uploadModel","uploadModelOK","sendDeployStart","deployStartOK","sendDeployStop","deployStopOK","requestDeployStatus","setDeployStatus","requestLogs","requestLogFiles","requestLogsOK","requestLogFilesOK","requestDeleteLogFile","resetModel","showModal","selectThing","changeStatusThing","selectSensor","selectActuator","requestStats","requestStatsOK","updateObjectByPath","obj","path","value","stack","split","length","key","shift","indexOf","array","index","replace","push","lastKey","splice","deepCloneObject","JSON","parse","stringify","addNewElementToArray","newElement","found","id","removeElementFromArray","elmId","isDeleted","console","log","getCreatedTimeFromFileName","fileName","timeString","Date","Number","isDataGenerator","window","location","pathname","getQuery","qname","URLSearchParams","search","get","initState","name","createReducer","produce","draft","model","state","newName","thing","things","newThings","thingID","enable","error","sensor","foundThing","newSensors","sensors","actuator","newActuators","actuators","sensorID","tIndex","actuatorID","type","message","logs","logFiles","isDG","logFile","formID","selectedThing","selectedSensor","selectedActuator","dataStorage","status","stats","rootReducer","combineReducers","modelReducer","statsReducer","logsReducer","notify","notificationReducer","requesting","requestingReducer","editingForm","editingFormReducer","deployStatus","deployStatusReducer","tool","a","url","fetch","response","json","data","method","headers","body","content","result","files","requestStartDeploy","requestStopDeploy","handleRequestModel","watchRequestModel","action","payload","call","put","takeEvery","handleSaveModel","watchSaveModel","getModel","select","Error","handleRequestStartDeploy","handleRequestStopDeploy","handleRequestDeployStatus","watchDeploy","toUpperCase","handleRequestLogFiles","handleRequestLogs","handleRequestDeleteLogFile","watchRequestLogs","handleRequestStats","watchRequestStats","rootSaga","all","requestModelSaga","uploadModelSaga","deploySaga","requestLogsSaga","configStore","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","run","SubMenu","Menu","Header","Layout","Text","Typography","TSHeader","fileReader","FileReader","onloadend","newModel","props","setNewModel","readAsText","fileData","blob","Blob","URL","createObjectURL","link","document","createElement","download","href","click","this","resetEditor","startDeploy","stopDeploy","logo","span","src","className","alt","style","maxWidth","objectFit","theme","mode","lineHeight","title","GatewayOutlined","Item","onClick","inputFileDOM","ImportOutlined","exportModel","ExportOutlined","ClearOutlined","DeploymentUnitOutlined","SyncOutlined","spin","CaretRightOutlined","StopOutlined","rel","target","ProfileOutlined","color","onChange","event","onUpload","ref","input","display","accept","multiple","Component","connect","dispatch","viewLogs","Footer","TSFooter","textAlign","getFullYear","VERSION","TSModal","visible","footer","onCancel","children","FormTextItem","label","defaultValue","placeholder","v","FormSelectItem","options","map","tid","Option","FormNumberItem","min","max","RangePicker","DatePicker","FormTimeRangeItem","startTime","moment","endTime","showTime","format","dateString","getTime","FormSwitchItem","checked","checkedChildren","unCheckedChildren","FormCheckBoxItem","Group","FormRegularNumberItem","items","grid","gutter","column","dataSource","renderItem","item","size","bordered","dataPath","Paragraph","FormEditableTextItem","editable","MongoDBOptions","onDataChange","Fragment","user","password","dbname","Panel","Collapse","CollapseForm","active","accordion","margin","defaultActiveKey","header","ConnectionConfig","host","port","ThingModal","initThing","now","protocol","behaviours","timeToDown","connConfig","newThing","errorMsg","optionsValue","setState","newThingID","newData","setTimeout","prevState","handleDuplicate","handleCancel","handleOk","labelCol","wrapperCol","scale","FormCheckBoxItems","modalID","thingData","DataReplayerForm","dPath","devId","defaultBehaviours","DataSourceForm","resourceId","unit","concat","EnergyForm","initValue","consumInOnePeriod","low","slowDownRate","BooleanForm","EnumForm","values","defaultValueConstraints","regularMin","regularMax","step","ValueConstraintForm","IntegerFloatForm","withValueConstraints","valueConstraints","MultipleDataSources","sources","source","DataGeneratorForm","showEnergyOption","timePeriod","sensorBehaviours","dosAttackSpeedUpRate","timeBeforeFailed","isIPSOFormat","withEnergy","energy","overlay","placement","UpOutlined","replayDataSource","username","initSensor","objectId","isFromDatabase","topic","userData","SensorModal","thingIDs","selectedData","sid","aid","replayDS","generateDS","newProps","tID","isReplay","isSensor","onThingChange","onChangeDataSource","act","initActuator","ActuatorModal","newActuatorID","modes","tree","view","form","code","text","Object","allValues","Editor","htmlElementRef","jsonEditor","handleChange","bind","setRef","collapseAll","expandAll","focus","allowedModes","rest","innerRef","htmlElementProps","tag","createEditor","schema","schemaRefs","setSchema","getName","setName","destroy","set","element","JSONEditor","getText","currentJson","err","React","defaultProps","history","navigationBar","statusBar","JSONView","ace","StatsView","startedTime","toLocaleTimeString","lastActivity","popOverContent","devType","numberOfSentData","numberOfReceivedData","CustomNode","icon","PartitionOutlined","BugOutlined","BulbOutlined","verticalAlign","graphConfig","automaticRearrangeAfterDropNode","collapsible","height","highlightDegree","highlightOpacity","linkHighlightBehavior","maxZoom","minZoom","nodeHighlightBehavior","panAndZoom","staticGraph","width","directed","node","fontColor","fontSize","fontWeight","highlightColor","highlightFontSize","highlightFontWeight","highlightStrokeColor","highlightStrokeWidth","mouseCursor","opacity","renderLabel","strokeColor","strokeWidth","svg","symbolType","viewGenerator","semanticStrokeWidth","labelProperty","numberOfData","getElementById","buildGraphData","nodes","links","thingStats","sIndex","nodeID","sensorStats","actuatorStats","GraphView","timerId","setInterval","clearInterval","config","TSListView","list","editHandler","deleteHandler","itemAvatar","changeStatus","itemLayout","actions","avatar","loading","Meta","cursor","description","ThingItem","deleteSensor","deleteActuator","subTitle","ThingsView","ListView","modelType","Sider","TSSider","defaultKey","rightSide","breakpoint","collapsedWidth","borderRight","borderLeft","defaultSelectedKeys","defaultOpenKeys","i","LeftSider","menuItems","mID","RightSider","UnorderedListOutlined","FilterOutlined","ForkOutlined","dKey","viewType","Content","LayoutPage","statusMessage","isLogPage","notification","onClose","padding","marginBottom","marginTop","showIcon","tip","ModelPage","tempModel","onModelChange","initData","saveModel","LogsPage","deleteLogFile","ClockCircleOutlined","LogLine","time","device","getLastURLPath","decodeURIComponent","warn","getHours","getMinutes","getSeconds","getDay","getMonth","App","LogFilePage","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"mFAAAA,EAAOC,QAAU,S,4bCEJC,EAAkBC,YAAa,oBAC/BC,EAAoBD,YAAa,sBAGjCE,EAAeF,YAAa,iBAC5BG,EAAWH,YAAa,aAExBI,EAAkBJ,YAAa,qBAC/BK,EAAWL,YAAa,aACxBM,EAAcN,YAAa,gBAC3BO,EAAsBP,YAAa,yBACnCQ,EAAwBR,YAAa,2BACrCS,EAAyBT,YAAa,4BACtCU,EAA2BV,YAAa,8BACxCW,EAAqBX,YAAa,wBAClCY,EAAuBZ,YAAa,0BAEpCa,EAAcb,YAAa,gBAC3Bc,EAAgBd,YAAa,mBAG7Be,EAAkBf,YAAa,qBAC/BgB,EAAgBhB,YAAa,mBAC7BiB,EAAiBjB,YAAa,oBAC9BkB,EAAelB,YAAa,kBAC5BmB,EAAsBnB,YAAa,yBACnCoB,EAAkBpB,YAAa,qBAG/BqB,EAAcrB,YAAa,gBAC3BsB,EAAkBtB,YAAa,oBAC/BuB,EAAgBvB,YAAa,mBAC7BwB,EAAoBxB,YAAa,uBACjCyB,EAAuBzB,YAAa,2BAGpC0B,EAAa1B,YAAa,eAG1B2B,EAAY3B,YAAa,cACzB4B,EAAc5B,YAAa,gBAC3B6B,EAAoB7B,YAAa,uBACjC8B,EAAe9B,YAAa,iBAC5B+B,EAAiB/B,YAAa,mBAK9BgC,GAJoBhC,YAAa,uBAIlBA,YAAa,kBAC5BiC,EAAiBjC,YAAa,oB,QC7CrCkC,GAAqB,SAACC,EAAKC,EAAMC,GAErC,IADA,IAAIC,EAAQF,EAAKG,MAAM,KAChBD,EAAME,OAAS,GAAG,CAEvB,IAAIC,EAAMH,EAAMI,QAChB,GAAID,EAAIE,QAAQ,KAAO,EAAG,CAExB,IAAMC,EAAQH,EAAIF,MAAM,KACxBE,EAAMG,EAAM,GACZ,IAAIC,EAAQD,EAAM,GAAGE,QAAQ,IAAK,IAC7BX,EAAIM,KAEPN,EAAIM,GAAO,IAEW,IAApBN,EAAIM,GAAKD,OAEXK,EAAQ,GACCV,EAAIM,GAAKD,QAAUK,GAASA,EAAQ,KAE7CA,EAAQV,EAAIM,GAAKD,QAEdL,EAAIM,GAAKI,IACZV,EAAIM,GAAKM,KAAK,IAGhBZ,EAAMA,EAAIM,GAAKI,QAEVV,EAAIM,KAEPN,EAAIM,GAAO,IAEbN,EAAMA,EAAIM,GAGd,IAAIO,EAAUV,EAAMI,QAEpB,GAAIM,EAAQL,QAAQ,KAAO,EAAG,CAE5B,IAAMC,EAAQI,EAAQT,MAAM,KAC5BS,EAAUJ,EAAM,GAChB,IAAIC,EAAQD,EAAM,GAAGE,QAAQ,IAAK,IACpB,OAAVT,EAEEF,EAAIa,IAAYb,EAAIa,GAASH,IAC/BV,EAAIa,GAASC,OAAOJ,EAAO,IAIxBV,EAAIa,KAEPb,EAAIa,GAAW,IAEW,IAAxBb,EAAIa,GAASR,OAEfK,EAAQ,GACCV,EAAIa,GAASR,QAAUK,GAASA,EAAQ,KAEjDA,EAAQV,EAAIa,GAASR,QAElBL,EAAIa,GAASH,GAIhBV,EAAIa,GAASH,GAASR,EAHtBF,EAAIa,GAASD,KAAKV,SAQtBF,EAAIa,GAAWX,GAIba,GAAkB,SAACf,GAAD,OAASgB,KAAKC,MAAMD,KAAKE,UAAUlB,KAOrDmB,GAAuB,SAACV,EAAOW,GAEnC,IADA,IAAIC,GAAQ,EACHX,EAAQ,EAAGA,EAAQD,EAAMJ,OAAQK,IAAS,CAEjD,GADgBD,EAAMC,GACVY,KAAOF,EAAWE,GAAI,CAEhCb,EAAMC,GAAN,eAAoBU,GAGpBC,GAAQ,EACR,OAMJ,OAHKA,GACHZ,EAAMG,KAAKQ,GAENX,GAGHc,GAAyB,SAACd,EAAOe,GAErC,IADA,IAAIC,GAAY,EACPf,EAAQ,EAAGA,EAAQD,EAAMJ,OAAQK,IAAS,CAEjD,GADgBD,EAAMC,GACVY,KAAOE,EAAO,CACxBf,EAAMK,OAAOJ,EAAO,GACpBe,GAAY,EACZ,OAGJ,OAAKA,EAIEhB,GAHLiB,QAAQC,IAAR,2CAAgDH,IACzC,OAKLI,GAA6B,SAACC,GAClC,IAAMpB,EAAQoB,EAASzB,MAAM,KACzB0B,EAAarB,EAAMA,EAAMJ,OAAS,GAAGM,QAAQ,OAAQ,IACzD,OAAO,IAAIoB,KAAKC,OAAOF,KAQnBG,GAAkB,WACtB,OAA8D,IAAvDC,OAAOC,SAASC,SAAS5B,QAAQ,mBAGpC6B,GAAW,SAACC,GAEhB,OADc,IAAIC,gBAAgBL,OAAOC,SAASK,QACrCC,IAAIH,ICxHbI,GAAY,CAAEC,KAAM,YAEXC,gBAAa,mBAEvB5E,EAAW6E,aAAQ,SAACC,EAAOC,GAAR,OAA2BA,MAFvB,cAGvBxD,GAAa,SAAAyD,GAAK,OAAIN,MAHC,cAKvBzE,EAAkB4E,aAAQ,SAACC,EAAOG,GACjCH,EAAMH,KAAOM,MANS,cAQvB/E,EAAW2E,aAAQ,SAACC,EAAOI,GAC1B,GAAIJ,EAAMK,OAAQ,CAChB,IAAMC,EAAYjC,GAAqB2B,EAAMK,OAAQD,GACrDJ,EAAMK,OAAN,YAAmBC,QAEnBN,EAAMK,OAAS,CAACD,OAbI,cAgBvB/E,EAAc0E,aAAQ,SAACC,EAAOO,GAC7B,IAAMD,EAAY7B,GAAuBuB,EAAMK,OAAQE,GACnDD,IAAWN,EAAMK,OAAN,YAAmBC,QAlBZ,cAoBvB1D,EAAoBmD,aAAQ,SAACC,EAAOO,GACnC,IAAK,IAAI3C,EAAQ,EAAGA,EAAQoC,EAAMK,OAAO9C,OAAQK,IAC/C,GAAIoC,EAAMK,OAAOzC,GAAOY,KAAO+B,EAE7B,YADAP,EAAMK,OAAOzC,GAAO4C,QAAUR,EAAMK,OAAOzC,GAAO4C,QAItD5B,QAAQ6B,MAAR,wCAA+CF,QA3BzB,cA6BvBjF,EAAsByE,aAAQ,SAACC,EAAD,GAAiC,IAAvBO,EAAsB,EAAtBA,QAASG,EAAa,EAAbA,OAC5CC,GAAa,EACjB,GAAIX,EAAMK,OACR,IAAK,IAAIzC,EAAQ,EAAGA,EAAQoC,EAAMK,OAAO9C,OAAQK,IAC/C,GAAIoC,EAAMK,OAAOzC,GAAOY,KAAO+B,EAAS,CACtCI,GAAa,EACb,IAAMC,EAAavC,GACjB2B,EAAMK,OAAOzC,GAAOiD,QACpBH,GAEFV,EAAMK,OAAOzC,GAAOiD,QAApB,YAAkCD,GAClC,MAKN,GAAKD,GAQH,GAAIX,EAAMa,QAAS,CACjB,IAAMD,EAAanC,GAAuBuB,EAAMa,QAASH,EAAOlC,IAC5DoC,IAAYZ,EAAMa,QAAN,YAAoBD,SAVvB,CACVZ,EAAMa,UACTb,EAAMa,QAAU,IAGlB,IAAMD,EAAavC,GAAqB2B,EAAMa,QAASH,GACvDV,EAAMa,QAAN,YAAoBD,QAnDA,cA2DvBrF,EAAwBwE,aAAQ,SAACC,EAAD,GAAmC,IAAzBO,EAAwB,EAAxBA,QAASO,EAAe,EAAfA,SAC9CH,GAAa,EACjB,GAAIX,EAAMK,OACR,IAAK,IAAIzC,EAAQ,EAAGA,EAAQoC,EAAMK,OAAO9C,OAAQK,IAC/C,GAAIoC,EAAMK,OAAOzC,GAAOY,KAAO+B,EAAS,CACtCI,GAAa,EACb,IAAMI,EAAe1C,GACnB2B,EAAMK,OAAOzC,GAAOoD,UACpBF,GAEFd,EAAMK,OAAOzC,GAAOoD,UAApB,YAAoCD,GACpC,MAKN,GAAKJ,GAQH,GAAIX,EAAMgB,UAAW,CACnB,IAAMD,EAAetC,GACnBuB,EAAMgB,UACNF,EAAStC,IAEPuC,IAAcf,EAAMgB,UAAN,YAAsBD,SAb3B,CACVf,EAAMgB,YACThB,EAAMgB,UAAY,IAGpB,IAAMD,EAAe1C,GAAqB2B,EAAMgB,UAAWF,GAC3Dd,EAAMgB,UAAN,YAAsBD,QAjFF,cA4FvBvF,EAAyBuE,aAAQ,SAACC,EAAD,GAAmC,IAAzBiB,EAAwB,EAAxBA,SAAUV,EAAc,EAAdA,QACpD,GAAKA,EAME,CAGL,IADA,IAAII,GAAa,EACR/C,EAAQ,EAAGA,EAAQoC,EAAMK,OAAO9C,OAAQK,IAC/C,GAAIoC,EAAMK,OAAOzC,GAAOY,KAAO+B,EAAS,CACtCI,GAAa,EACb,IAAMC,EAAanC,GACjBuB,EAAMK,OAAOzC,GAAOiD,QACpBI,GAEEL,IACFZ,EAAMK,OAAOzC,GAAOiD,QAApB,YAAkCD,IAEpC,MAGCD,GACH/B,QAAQC,IAAR,gCAAqCoC,EAArC,iBAAsDV,QAvB5C,CAEZ,IAAMK,EAAanC,GAAuBuB,EAAMa,QAASI,GACrDL,IACFZ,EAAMa,QAAN,YAAoBD,SAjGF,cAwHvBlF,EAAqBqE,aAAQ,SAACC,EAAD,GAAmC,IAAzBiB,EAAwB,EAAxBA,SAAUV,EAAc,EAAdA,QAChD,GAAKA,EAWE,CAEL,IAAK,IAAIW,EAAS,EAAGA,EAASlB,EAAMK,OAAO9C,OAAQ2D,IACjD,GAAIlB,EAAMK,OAAOa,GAAQ1C,KAAO+B,EAAS,CACvC,IAAK,IAAI3C,EAAQ,EAAGA,EAAQoC,EAAMK,OAAOa,GAAQL,QAAQtD,OAAQK,IAC/D,GAAIoC,EAAMK,OAAOa,GAAQL,QAAQjD,GAAOY,KAAOyC,EAE7C,YADAjB,EAAMK,OAAOa,GAAQL,QAAQjD,GAAO4C,QAAUR,EAAMK,OAAOa,GAAQL,QAAQjD,GAAO4C,QAItF,MAGJ5B,QAAQC,IAAR,iDAAsDoC,EAAtD,eAAqEV,QAxBzD,CAEZ,GAAIP,EAAMa,QACR,IAAK,IAAIjD,EAAQ,EAAGA,EAAQoC,EAAMa,QAAQtD,OAAQK,IAChD,GAAIoC,EAAMa,QAAQjD,GAAOY,KAAOyC,EAE9B,YADAjB,EAAMa,QAAQjD,GAAO4C,QAAUR,EAAMa,QAAQjD,GAAO4C,QAK1D5B,QAAQC,IAAR,iDAAsDoC,EAAtD,eAAqEV,SAnIjD,cAoJvB9E,EAA2BsE,aAAQ,SAACC,EAAD,GAAqC,IAA3BmB,EAA0B,EAA1BA,WAAYZ,EAAc,EAAdA,QACxD,GAAKA,EASE,CAGL,IADA,IAAII,GAAa,EACR/C,EAAQ,EAAGA,EAAQoC,EAAMK,OAAO9C,OAAQK,IAC/C,GAAIoC,EAAMK,OAAOzC,GAAOY,KAAO+B,EAAS,CACtCI,GAAa,EACb,IAAMI,EAAetC,GACnBuB,EAAMK,OAAOzC,GAAOoD,UACpBG,GAEEJ,IACFf,EAAMK,OAAOzC,GAAOoD,UAApB,YAAoCD,IAEtC,MAGCJ,GACH/B,QAAQC,IAAR,gCAAqCsC,EAArC,iBAAwDZ,QA1B9C,CAEZ,IAAMQ,EAAetC,GACnBuB,EAAMgB,UACNG,GAEEJ,IACFf,EAAMgB,UAAN,YAAsBD,SA5JJ,cAkLpBpF,EAAuBoE,aAAQ,SAACC,EAAD,GAAqC,IAA3BmB,EAA0B,EAA1BA,WAAYZ,EAAc,EAAdA,QACvD,GAAKA,EAWE,CAEL,IAAK,IAAIW,EAAS,EAAGA,EAASlB,EAAMK,OAAO9C,OAAQ2D,IACjD,GAAIlB,EAAMK,OAAOa,GAAQ1C,KAAO+B,EAAS,CACvC,IAAK,IAAI3C,EAAQ,EAAGA,EAAQoC,EAAMK,OAAOa,GAAQF,UAAUzD,OAAQK,IACjE,GAAIoC,EAAMK,OAAOa,GAAQF,UAAUpD,GAAOY,KAAO2C,EAE/C,YADAnB,EAAMK,OAAOa,GAAQF,UAAUpD,GAAO4C,QAAUR,EAAMK,OAAOa,GAAQF,UAAUpD,GAAO4C,QAI1F,MAGJ5B,QAAQC,IAAR,mDAAwDsC,EAAxD,eAAyEZ,QAxB7D,CAEZ,GAAIP,EAAMgB,UACR,IAAK,IAAIpD,EAAQ,EAAGA,EAAQoC,EAAMgB,UAAUzD,OAAQK,IAClD,GAAIoC,EAAMgB,UAAUpD,GAAOY,KAAO2C,EAEhC,YADAnB,EAAMgB,UAAUpD,GAAO4C,QAAUR,EAAMgB,UAAUpD,GAAO4C,QAK9D5B,QAAQC,IAAR,mDAAwDsC,EAAxD,eAAyEZ,SA7LrD,GA+M1BX,ICjNaE,gBAAa,iBAAC,EAExBlE,GAAc,SAAAsE,GAAK,OAAI,KAFA,YAAC,EAGxBjF,GAAe,SAAAiF,GAAK,OAAI,KAHD,YAAC,EAIxBlE,GAAiB,SAAAkE,GAAK,OAAI,KAJH,YAAC,EAKxBpE,GAAkB,SAAAoE,GAAK,OAAI,KALJ,YAAC,EAMxBpF,GAAkB,SAAAoF,GAAK,OAAI,KANJ,YAAC,EAOxBhF,GAAW,SAAAgF,GAAK,OAAI,KAPG,YAAC,EAQxBrE,GAAgB,SAAAqE,GAAK,OAAI,KARF,YAAC,EASxBjE,GAAe,SAAAiE,GAAK,OAAI,KATD,YAAC,EAUxBnE,GAAgB,SAAAmE,GAAK,OAAI,KAVF,YAAC,EAWxB9D,GAAc,SAAA8D,GAAK,OAAI,KAXA,YAAC,EAYxB5D,GAAgB,SAAA4D,GAAK,OAAI,KAZF,IAFV,GCJHJ,gBAAa,iBAAC,EAExBhF,GAAkB,SAACoF,EAAD,SAA+B,CAAEkB,KAAjC,EAAUA,KAA6BC,QAAvC,EAAgBA,YAFX,YAAC,EAGxBrG,GAAoB,SAAAkF,GAAK,OAAI,QAHN,YAAC,EAIxB9E,GAAW,SAAC8E,EAAOE,GAAR,MAAmB,CAC7BgB,KAAM,UACNC,QAAQ,SAAD,OAAWjB,EAAM5B,GAAjB,wBANe,YAAC,EAQxBnD,GAAc,SAAC6E,EAAOK,GAAR,MAAqB,CAClCa,KAAM,UACNC,QAAQ,SAAD,OAAWd,EAAX,0BAVe,YAAC,EAYxBjF,GAAsB,SAAC4E,EAAD,OAASQ,EAAT,EAASA,OAAQH,EAAjB,EAAiBA,QAAjB,MAA+B,CACpDa,KAAM,UACNC,QAAQ,UAAD,OAAYX,EAAOlC,GAAnB,2BAAwC+B,EAAQ,cAAD,OAAgBA,GAAW,GAA1E,SAde,YAAC,EAgBxB/E,GAAyB,SAAC0E,EAAD,OAASe,EAAT,EAASA,SAAUV,EAAnB,EAAmBA,QAAnB,MAAiC,CACzDa,KAAM,UACNC,QAAQ,UAAD,OAAYJ,EAAZ,4BAAwCV,EAAQ,cAAD,OAAgBA,GAAW,GAA1E,SAlBe,YAAC,EAoBxBhF,GAAwB,SAAC2E,EAAD,OAASY,EAAT,EAASA,SAAUP,EAAnB,EAAmBA,QAAnB,MAAiC,CACxDa,KAAM,UACNC,QAAQ,YAAD,OAAcP,EAAStC,GAAvB,2BAA4C+B,EAAQ,cAAD,OAAgBA,GAAW,GAA9E,SAtBe,YAAC,EAwBxB9E,GAA2B,SAACyE,EAAD,OAASiB,EAAT,EAASA,WAAYZ,EAArB,EAAqBA,QAArB,MAAmC,CAC7Da,KAAM,UACNC,QAAQ,YAAD,OAAcF,EAAd,4BAA4CZ,EAAQ,cAAD,OAAgBA,GAAW,GAA9E,SA1Be,GA6B1B,MChCaT,gBAAa,iBAAC,EAExBxD,GAAgB,SAAC4D,EAAOoB,GAAR,mBAAC,eAAqBpB,GAAtB,IAA6BoB,YAFtB,YAAC,EAGxB/E,GAAoB,SAAC2D,EAAOqB,GAAR,mBAAC,eAAyBrB,GAA1B,IAAiCqB,gBAH9B,YAAC,EAIxB/E,EAAuBuD,aAAQ,SAACC,EAAD,GAA4B,EAAnBwB,KAAoB,IAAdC,EAAa,EAAbA,QACvC7D,EAAQoC,EAAMuB,SAAS7D,QAAQ+D,GACjC7D,GAAU,GACZoC,EAAMuB,SAASvD,OAAOJ,EAAO,OAPT,GALV,CAChB0D,KAAM,KACNC,SAAU,KCIGzB,gBAAa,iBAAC,EAC1BpD,GAAa,SAACwD,EAAOwB,GAAR,mBAAC,eAAuBxB,GAAxB,IAA+BwB,cADnB,YAAC,EAE1B/E,GAAe,SAACuD,EAAOyB,GAAR,mBAAC,eAA8BzB,GAA/B,IAAsCyB,qBAF5B,YAAC,EAG1B9E,GAAgB,SAACqD,EAAO0B,GAAR,mBAAC,eAA+B1B,GAAhC,IAAuC0B,sBAH9B,YAAC,EAI1B9E,GAAkB,SAACoD,EAAO2B,GAAR,mBAAC,eAAiC3B,GAAlC,IAAyC2B,wBAJlC,GAPV,CAChBH,OAAQ,KACRC,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,YAAa,OCLAhC,eAAc,eAC1B3D,GAAmB,SAAC+D,EAAO6B,GAAR,OAAmBA,MACtC,GCAYjC,eAAc,eAExB9C,GAAiB,SAACkD,EAAO8B,GAAR,OAAmBA,KAJvB,ICmBHC,GAVKC,YAAgB,CAClCjC,MAAOkC,GACPH,MAAOI,GACPd,KAAMe,GACNC,OAAQC,GACRC,WAAYC,GACZC,YAAaC,GACbC,aAAcC,K,qCCfV5H,GAAY,yCAAG,WAAO6H,GAAP,oBAAAC,EAAA,6DACbC,EADa,UAFT,GAES,gBACOF,EADP,mBAEIG,MAAMD,GAFV,cAEbE,EAFa,gBAGAA,EAASC,OAHT,YAGbC,EAHa,QAIV3C,MAJU,sBAKX2C,EAAK3C,MALM,gCAOZ2C,EAAKnD,OAPO,4CAAH,sDAUZrE,GAAW,yCAAG,WAAOkH,EAAM7C,GAAb,oBAAA8C,EAAA,6DACZC,EADY,UAZR,GAYQ,gBACQF,EADR,mBAEKG,MAAMD,EAAI,CAC/BK,OAAQ,OACRC,QAAS,CACP,eAAe,oBAEjBC,KAAMrF,KAAKE,UAAU,CAAC6B,YAPN,cAEZiD,EAFY,gBASCA,EAASC,OATV,YASZC,EATY,QAUT3C,MAVS,sBAWV2C,EAAK3C,MAXK,gCAaX2C,EAAKnD,OAbM,4CAAH,wDAgBX7D,GAAW,yCAAG,WAAO0G,EAAMrB,GAAb,oBAAAsB,EAAA,6DACZC,EADY,UA5BR,GA4BQ,gBACQF,EADR,iBACqBrB,GADrB,SAEKwB,MAAMD,GAFX,cAEZE,EAFY,gBAGCA,EAASC,OAHV,YAGZC,EAHY,QAIT3C,MAJS,sBAKV2C,EAAK3C,MALK,gCAOX2C,EAAKI,SAPM,4CAAH,wDAUXzG,GAAY,yCAAG,WAAO+F,GAAP,oBAAAC,EAAA,6DACbC,EADa,UAtCT,GAsCS,gBACOF,EADP,mBAEIG,MAAMD,GAFV,cAEbE,EAFa,gBAGAA,EAASC,OAHT,YAGbC,EAHa,QAIV3C,MAJU,sBAKX2C,EAAK3C,MALM,gCAOZ2C,EAAKpB,OAPO,4CAAH,sDAUZxF,GAAoB,yCAAG,WAAOsG,EAAMrB,GAAb,oBAAAsB,EAAA,6DACrBC,EADqB,UAhDjB,GAgDiB,gBACDF,EADC,iBACYrB,GADZ,SAEJwB,MAAMD,EAAK,CAChCK,OAAQ,SAHiB,cAErBH,EAFqB,gBAKRA,EAASC,OALD,YAKrBC,EALqB,QAMlB3C,MANkB,sBAOnB2C,EAAK3C,MAPc,gCASpB2C,EAAKK,QATe,4CAAH,wDAapBpH,GAAe,yCAAG,WAAOyG,GAAP,oBAAAC,EAAA,6DAChBC,EADgB,UA7DZ,GA6DY,gBACIF,EADJ,kBAECG,MAAMD,GAFP,cAEhBE,EAFgB,gBAGHA,EAASC,OAHN,YAGhBC,EAHgB,QAIb3C,MAJa,sBAKd2C,EAAK3C,MALS,gCAOf2C,EAAKM,OAPU,4CAAH,sDAUfC,GAAkB,yCAAG,WAAOb,EAAM7C,GAAb,oBAAA8C,EAAA,6DACnBC,EADmB,UAvEf,GAuEe,gBACCF,EADD,oBAEFG,MAAMD,EAAI,CAC/BK,OAAQ,OACRC,QAAS,CACP,eAAe,oBAEjBC,KAAMrF,KAAKE,UAAU,CAAC6B,YAPC,cAEnBiD,EAFmB,gBASNA,EAASC,OATH,YASnBC,EATmB,QAUhB3C,MAVgB,sBAWjB2C,EAAK3C,MAXY,gCAalB2C,EAAKR,cAba,4CAAH,wDAgBlBgB,GAAiB,yCAAG,WAAOd,GAAP,oBAAAC,EAAA,6DAClBC,EADkB,UAvFd,GAuFc,gBACEF,EADF,kBAEDG,MAAMD,GAFL,cAElBE,EAFkB,gBAGLA,EAASC,OAHJ,YAGlBC,EAHkB,QAIf3C,MAJe,sBAKhB2C,EAAK3C,MALW,gCAOjB2C,EAAKR,cAPY,4CAAH,sDAUjB1G,GAAmB,yCAAG,WAAO4G,GAAP,oBAAAC,EAAA,6DACpBC,EADoB,UAjGhB,GAiGgB,gBACAF,EADA,oBAEHG,MAAMD,GAFH,cAEpBE,EAFoB,gBAGLA,EAASC,OAHJ,YAGpBpB,EAHoB,QAIftB,MAJe,sBAKlBsB,EAAOtB,MALW,gCAOnBsB,EAAOa,cAPY,4CAAH,sD,aCpFfiB,I,aAYAC,IAZV,SAAUD,GAAmBE,GAA7B,0EAGkB,OAHlB,SAEUjB,EAAOiB,EAAOC,QAAU,iBAAmB,aAFrD,SAGwBC,cAAK,kBAAMhJ,GAAa6H,MAHhD,OAII,OADM7C,EAHV,gBAIUiE,aAAIhJ,EAAS+E,IAJvB,8BAQI,OARJ,mCAQUiE,aAAIpJ,EAAgB,CAACsG,KAAM,QAASC,QAAQ,EAAD,MARrD,sDAYA,SAAUyC,KAAV,kEACE,OADF,SACQK,aAAU,gBAAiBN,IADnC,wCAIeC,U,aCvBLM,I,aAkBAC,IApBJC,GAAW,SAAC,GAAD,SAAGrE,OAEpB,SAAUmE,GAAgBL,GAA1B,4EAGgB,OAHhB,SAEUjB,EAAOiB,EAAOC,QAAU,iBAAmB,aAFrD,SAGsBO,aAAOD,IAH7B,YAGQrE,EAHR,yBAKmB,OALnB,SAKyBgE,cAAK,kBAAMrI,GAAYkH,EAAM7C,MALtD,OAMM,OADMmD,EALZ,iBAMYc,aAAIrI,EAAcuH,EAAKA,OANnC,QAOM,OAPN,UAOYc,aAAIpJ,EAAgB,CAACsG,KAAM,UAAWC,QAAQ,SAAD,OAAWpB,EAAMJ,KAAjB,yBAPzD,sCASY2E,MAAM,mBATlB,gCAcI,OAdJ,oCAcUN,aAAIpJ,EAAgB,CAACsG,KAAM,QAASC,QAAQ,EAAD,MAdrD,uDAkBA,SAAUgD,KAAV,kEACE,OADF,SACQF,aAAU,eAAgBC,IADlC,wCAIeC,U,aCbLI,I,aAoBAC,I,aAmBAC,I,aAYAC,IArDJN,GAAW,SAAC,GAAD,SAAGrE,OAEpB,SAAUwE,GAAyBV,GAAnC,4EAGkB,OAHlB,SAEUjB,EAAOiB,EAAOC,QAAU,iBAAmB,aAFrD,SAGwBO,aAAOD,IAH/B,OAImB,OADTrE,EAHV,gBAIyBgE,cAAK,kBAAMN,GAAmBb,EAAM7C,MAJ7D,OAKI,OADM8B,EAJV,iBAKUmC,aAAInI,KALd,QAMI,OANJ,UAMUmI,aAAI/H,EAAgB4F,IAN9B,QAOI,OAPJ,UAOUmC,aACJpJ,EAAgB,CACdsG,KAAM,UACNC,QAAQ,GAAD,OAAKyB,EAAK+B,cAAV,yBAVf,gCAgBI,OAhBJ,oCAgBUX,aAAIpJ,EAAgB,CAAEsG,KAAM,QAASC,QAAQ,EAAD,MAhBtD,uDAoBA,SAAUqD,GAAwBX,GAAlC,wEAGI,OAHJ,SAEUjB,EAAOiB,EAAOC,QAAU,iBAAmB,aAFrD,SAGUC,cAAK,kBAAML,GAAkBd,MAHvC,OAII,OAJJ,SAIUoB,aAAIjI,KAJd,OAKI,OALJ,SAKUiI,aAAI/H,EAAgB,OAL9B,OAMI,OANJ,UAMU+H,aACJpJ,EAAgB,CACdsG,KAAM,UACNC,QAAQ,GAAD,OAAKyB,EAAK+B,cAAV,yBATf,gCAeI,OAfJ,oCAeUX,aAAIpJ,EAAgB,CAAEsG,KAAM,QAASC,QAAQ,EAAD,MAftD,uDAmBA,SAAUsD,GAA0BZ,GAApC,0EAGmB,OAHnB,SAEUjB,EAAOiB,EAAOC,QAAU,iBAAmB,aAFrD,SAGyBC,cAAK,kBAAM/H,GAAoB4G,MAHxD,OAKI,OAFMf,EAHV,gBAKUmC,aAAI/H,EAAgB4F,IAL9B,8BAQI,OARJ,mCAQUmC,aAAIpJ,EAAgB,CAAEsG,KAAM,QAASC,QAAQ,EAAD,MARtD,sDAYA,SAAUuD,KAAV,kEACE,OADF,SACQT,aAAU,oBAAqBM,IADvC,OAEE,OAFF,SAEQN,aAAU,mBAAoBO,IAFtC,OAGE,OAHF,SAGQP,aAAU,wBAAyBQ,IAH3C,wCAMeC,U,aCpELE,I,aAaAC,I,aAaAC,I,aAYAC,IAtCV,SAAUH,GAAsBf,GAAhC,4EAIqB,OAJrB,SAEUvC,EAAOuC,EAAOC,QACdlB,EAAOtB,EAAO,iBAAiB,aAHzC,SAI2ByC,cAAK,kBAAM5H,GAAgByG,MAJtD,OAKI,OADMvB,EAJV,gBAKU2C,aAAI3H,EAAkBgF,IALhC,+BASI,OATJ,oCASU2C,aAAIpJ,EAAgB,CAAEsG,KAAM,QAASC,QAAQ,EAAD,MATtD,uDAaA,SAAU0D,GAAkBhB,GAA5B,gFAIiB,OAJjB,WAE4BA,EAAOC,QAAxBxC,EAFX,EAEWA,KAAMC,EAFjB,EAEiBA,QACPqB,EAAOtB,EAAO,iBAAmB,aAH3C,SAIuByC,cAAK,kBAAM7H,GAAY0G,EAAMrB,MAJpD,OAKI,OADMH,EAJV,gBAKU4C,aAAI5H,EAAcgF,IAL5B,+BASI,OATJ,oCASU4C,aAAIpJ,EAAgB,CAACsG,KAAM,QAASC,QAAQ,EAAD,MATrD,uDAaA,SAAU2D,GAA2BjB,GAArC,8EAII,OAJJ,WAE4BA,EAAOC,QAAxBxC,EAFX,EAEWA,KAAMC,EAFjB,EAEiBA,QACPqB,EAAOtB,EAAO,iBAAmB,aAH3C,SAIUyC,cAAK,kBAAMzH,GAAqBsG,EAAMrB,MAJhD,8BAQI,OARJ,mCAQUyC,aAAIpJ,EAAgB,CAACsG,KAAM,QAASC,QAAQ,EAAD,MARrD,sDAYA,SAAU4D,KAAV,kEACE,OADF,SACQd,aAAU,eAAgBY,IADlC,OAEE,OAFF,SAEQZ,aAAU,mBAAoBW,IAFtC,OAGE,OAHF,SAGQX,aAAU,0BAA2Ba,IAH7C,wCAMeC,U,aC5CLC,I,aAaAC,IAbV,SAAUD,GAAmBnB,GAA7B,4EAIkB,OAJlB,SAEWvC,EAAQuC,EAAOC,QAAfxC,KACDsB,EAAOtB,EAAO,iBAAmB,aAH3C,SAIwByC,cAAK,kBAAMlH,GAAa+F,MAJhD,OAKI,OADMd,EAJV,gBAKUkC,aAAIlH,EAAegF,IAL7B,+BASI,OATJ,oCASUkC,aAAIpJ,EAAgB,CAACsG,KAAM,QAASC,QAAQ,EAAD,MATrD,uDAaA,SAAU8D,KAAV,kEACE,OADF,SACQhB,aAAU,gBAAiBe,IADnC,wCAIeC,U,aCfLC,IAAV,SAAUA,KAAV,kEACE,OADF,SACQC,aAAI,CACRC,KACAC,KACAC,KACAC,KACA1I,OANJ,wCAUeqI,UCGAM,GAfK,WAClB,IAAMC,EAAiBC,cACjBC,EAAQC,YACZ7D,GACA8D,YACEC,YAAgBL,GAEhBvG,OAAO6G,6BACL7G,OAAO6G,+BAAiC,SAAAC,GAAC,OAAIA,KAInD,OADAP,EAAeQ,IAAIf,IACZS,G,gOCQDO,I,OAAYC,KAAZD,SACAE,GAAWC,KAAXD,OACAE,GAASC,KAATD,KAEFE,G,2KACKhD,GAAQ,IAAD,OACRiD,EAAa,IAAIC,WACvBD,EAAWE,UAAY,WACrB,IACE,IAAMC,EAAW5I,KAAKC,MAAMwI,EAAWlD,QACvC,EAAKsD,MAAMC,YAAYF,GACvB,MAAOrG,GACP,EAAKsG,MAAMjM,gBAAgB,CAAEsG,KAAM,QAASC,QAASZ,MAGzDkG,EAAWM,WAAWvD,EAAM,M,kCAGlBzD,GACV,GAAIA,EAAO,CACT,IAAMiH,EAAWhJ,KAAKE,UAAU6B,GAC1BkH,EAAO,IAAIC,KAAK,CAACF,GAAW,CAAE9F,KAAM,cACpC4B,EAAMqE,IAAIC,gBAAgBH,GAC1BI,EAAOC,SAASC,cAAc,KACpCF,EAAKG,SAAL,UAAmBzH,EAAMJ,KAAKhC,QAAQ,KAAM,IAA5C,SACA0J,EAAKI,KAAO3E,EACZuE,EAAKK,W,+BAIC,IAAD,SAOHC,KAAKd,MALPe,EAFK,EAELA,YACAC,EAHK,EAGLA,YACAC,EAJK,EAILA,WACApF,EALK,EAKLA,aACA3C,EANK,EAMLA,MAEIuB,EAAOrC,KACP8I,EACJzG,EACI,+BACA,2BACN,OACE,kBAAC8E,GAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAK4B,KAAM,GACT,uBAAGP,KAAK,KACN,yBACEQ,IAAKF,EACLG,UAAU,OACVC,IAAI,OACJC,MAAO,CAAEC,SAAU,QAASC,UAAW,eAI7C,kBAAC,KAAD,CAAKN,KAAM,GAAIpK,KAAM,GACnB,kBAAC,KAAD,CAAM2K,MAAM,OAAOC,KAAK,aAAaJ,MAAO,CAAEK,WAAY,SACxD,kBAACvC,GAAD,CACEwC,MACE,uBACER,UAAU,wBACVT,KAAMnG,EAAO,kBAAoB,KAEjC,kBAACqH,GAAA,EAAD,MAJF,UASF,kBAAC,KAAKC,KAAN,CACEtL,IAAI,UACJuL,QAAS,kBAAM,EAAKC,aAAapB,UAEjC,kBAACqB,GAAA,EAAD,MAJF,iBAMA,kBAAC,KAAKH,KAAN,CACEtL,IAAI,UACJuL,QAAS,kBAAM,EAAKG,YAAYjJ,KAEhC,kBAACkJ,GAAA,EAAD,MAJF,gBAOA,kBAAC,KAAKL,KAAN,CAAWtL,IAAI,UAAUuL,QAASjB,GAChC,kBAACsB,GAAA,EAAD,MADF,iBAKF,kBAAChD,GAAD,CACEwC,MACE,0BAAMR,UAAU,yBACd,kBAACiB,GAAA,EAAD,MACC7H,EAAO,WAAa,WACpBoB,EAAe,kBAAC0G,GAAA,EAAD,CAAcC,MAAI,IAAM,OAI5C,kBAAC,KAAKT,KAAN,CAAWtL,IAAI,WAAWuL,QAAS,kBAAMhB,EAAYvG,KACnD,kBAACgI,GAAA,EAAD,MACChI,EAAO,WAAa,YAEvB,kBAAC,KAAKsH,KAAN,CAAWtL,IAAI,WAAWuL,QAAS,kBAAMf,EAAWxG,KAClD,kBAACiI,GAAA,EAAD,MADF,cAKF,kBAAC,KAAKX,KAAN,CAAWtL,IAAI,KACb,uBAAGmK,KAAMnG,EAAO,uBAAyB,QAASkI,IAAI,sBAAsBC,OAAO,UACjF,kBAACC,GAAA,EAAD,MADF,SAKF,kBAAC,KAAKd,KAAN,CAAWtL,IAAI,KACb,uBAAGmK,KAAMnG,EAAO,IAAM,kBAAmBkI,IAAI,sBAAsBC,OAAO,UACxE,kBAACR,GAAA,EAAD,MACA,kBAAC3C,GAAD,CAAM8B,MAAO,CAAEuB,MAAO,cACnBrI,EAAO,aAAe,uBAQnC,2BACEJ,KAAK,OACL0I,SAAU,SAACC,GAAD,OAAW,EAAKC,SAASD,EAAMJ,OAAOjG,QAChDuG,IAAK,SAACC,GACJ,EAAKlB,aAAekB,GAEtB5B,MAAO,CAAE6B,QAAS,QAClBC,OAAO,QACPC,UAAU,S,GA/HGC,aC5BR5D,GDwLA6D,aAtBU,SAAC,GAAD,MAA0C,CACjE/H,WADuB,EAAGA,WAE1BvC,MAFuB,EAAeA,MAGtC2C,aAHuB,EAAsBA,iBAMpB,SAAC4H,GAAD,MAAe,CACxC1P,gBAAiB,gBAAGsG,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OACfmJ,EAAS1P,EAAgB,CAAEsG,OAAMC,cACnC2F,YAAa,SAACF,GACZ0D,EAAStP,EAAS4L,KAEpBgB,YAAa,WACX0C,EAAS/N,MAEXsL,YAAa,SAACvG,GAAD,OAAUgJ,EAAS1O,EAAgB0F,KAChDwG,WAAY,SAACxG,GAAD,OAAUgJ,EAASxO,EAAewF,KAC9CiJ,SAAU,WACRD,EAASnO,SAIEkO,CAA8C7D,I,qBEtLrDgE,GAAWnE,KAAXmE,OCFOC,GDGE,kBACf,kBAACD,GAAD,CAAQpC,MAAO,CAAEsC,UAAW,WAA5B,cACU,IAAI3L,MAAO4L,cADrB,cAC+C,IAC7C,uBAAGlD,KAAK,6BAAR,aAFF,aAE8DmD,O,4BENjDC,I,OCEC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASpC,EAAZ,EAAYA,MAAOqC,EAAnB,EAAmBA,OAAQC,EAA3B,EAA2BA,SAAUC,EAArC,EAAqCA,SAArC,OACd,kBAAC,KAAD,CAAOH,QAASA,EAASpC,MAAOA,EAAOqC,OAAQA,EAAQC,SAAUA,GAC9DC,K,8BCaUC,GAhBM,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,aAAcxB,EAAvB,EAAuBA,SAAUyB,EAAjC,EAAiCA,YAAjC,OACnB,kBAAC,KAAKzC,KAAN,CAAWuC,MAAOA,GACfC,EACC,kBAAC,KAAD,CACEA,aAAcA,EACdxB,SAAU,SAAA0B,GAAC,OAAI1B,EAAS0B,EAAE7B,OAAOvM,UAGnC,kBAAC,KAAD,CACE0M,SAAU,SAAA0B,GAAC,OAAI1B,EAAS0B,EAAE7B,OAAOvM,QACjCmO,YAAaA,M,UCGNE,GAbQ,SAAC,GAAD,IAAEJ,EAAF,EAAEA,MAAOC,EAAT,EAASA,aAAcxB,EAAvB,EAAuBA,SAAU4B,EAAjC,EAAiCA,QAAjC,OACrB,kBAAC,KAAK5C,KAAN,CAAWuC,MAAOA,GAChB,kBAAC,KAAD,CACEC,aAAcA,IAA+BI,EAAUA,EAAQ,GAAK,MACpE5B,SAAU,SAAA0B,GAAC,OAAI1B,EAAU0B,KAExBE,EAAQC,KAAI,SAAAC,GAAG,OACd,kBAAC,KAAOC,OAAR,CAAezO,MAAOwO,EAAKpO,IAAKoO,GAAMA,S,UCc/BE,GArBQ,SAAC,GAAD,IAAET,EAAF,EAAEA,MAAOC,EAAT,EAASA,aAAcS,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,IAAKlC,EAAjC,EAAiCA,SAAUyB,EAA3C,EAA2CA,YAA3C,OACrB,kBAAC,KAAKzC,KAAN,CAAWuC,MAAOA,GACfC,EACC,kBAAC,KAAD,CACES,IAAKA,EACLC,IAAKA,EACLV,aAAcA,EACdxB,SAAU,SAAA0B,GAAC,OAAI1B,EAAS0B,IACxBD,YAAaA,IAGf,kBAAC,KAAD,CACEQ,IAAKA,EACLC,IAAKA,EACLlC,SAAU,SAAA0B,GAAC,OAAI1B,EAAS0B,IACxBD,YAAaA,M,+BCdbU,GAAgBC,KAAhBD,YA0BOE,GAxBW,SAAC,GAAuC,IAArCd,EAAoC,EAApCA,MAAOvB,EAA6B,EAA7BA,SAAUwB,EAAmB,EAAnBA,aACxCc,EAAYC,OACZC,EAAUD,OAKd,OAJIf,GAAwC,IAAxBA,EAAa/N,SAC/B6O,EAAYC,KAAOf,EAAa,IAChCgB,EAAUD,KAAOf,EAAa,KAG9B,kBAAC,KAAKxC,KAAN,CAAWuC,MAAOA,GAClB,kBAACY,GAAD,CACEX,aAAc,CAACc,EAAWE,GAC1BC,SAAU,CAAEC,OAAQ,SACpBA,OAAO,mBACP1C,SAAU,SAAC1M,EAAOqP,GAAR,OACR3C,EAAS,CACP,IAAI7K,KAAKwN,EAAW,IAAIC,UACxB,IAAIzN,KAAKwN,EAAW,IAAIC,iB,UCRnBC,GAXQ,SAAC,GAAD,IAAEtB,EAAF,EAAEA,MAAOuB,EAAT,EAASA,QAAS9C,EAAlB,EAAkBA,SAAU+C,EAA5B,EAA4BA,gBAAiBC,EAA7C,EAA6CA,kBAA7C,OACrB,kBAAC,KAAKhE,KAAN,CAAWuC,MAAOA,GAChB,kBAAC,KAAD,CACEvB,SAAU,SAAA0B,GAAC,OAAI1B,EAAS0B,IACxBqB,gBAAiBA,EACjBC,kBAAmBA,EACnBF,QAASA,M,UCIAG,GAVU,SAAC,GAAD,IAAG1B,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcxB,EAAxB,EAAwBA,SAAU4B,EAAlC,EAAkCA,QAAlC,OACvB,kBAAC,KAAK5C,KAAN,CAAWuC,MAAOA,GAChB,kBAAC,KAAS2B,MAAV,CACEtB,QAASA,EACTJ,aAAcA,EACdxB,SAAUA,M,oBCeDmD,GApBe,SAAC,GAAD,IAAG5B,EAAH,EAAGA,MAAO6B,EAAV,EAAUA,MAAOpD,EAAjB,EAAiBA,SAAjB,OAC5B,kBAAC,KAAKhB,KAAN,CAAWuC,MAAOA,GAChB,kBAAC,KAAD,CACE8B,KAAM,CAAEC,OAAQ,GAAIC,OAAQH,EAAM3P,QAClC+P,WAAYJ,EACZK,WAAY,SAACC,GAAD,OACV,kBAAC,KAAK1E,KAAN,KACE,kBAAC,KAAD,CAAM2E,KAAK,QAAQC,UAAU,EAAQ9E,MAAO4E,EAAK5E,OAC/C,kBAAC,KAAD,CACEkB,SAAU,SAAC0B,GAAD,OAAO1B,EAAS0D,EAAKG,SAAUnC,IACzCF,aAAckC,EAAKlC,aAAekC,EAAKlC,aAAe,EACtDC,YAAaiC,EAAK5E,eCZxBgF,GAAcnH,KAAdmH,UAgBOC,GAdc,SAAC,GAAD,IAAGxC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,aAAcxB,EAAxB,EAAwBA,SAAxB,OAC3B,kBAAC,KAAKhB,KAAN,CAAWuC,MAAOA,GACd,kBAACuC,GAAD,CACEE,SAAU,CACRhE,SAAU,SAAC0B,GACT1B,EAAS0B,MAIZF,KCaMyC,GAvBQ,SAAC,GAAD,IAAGzC,EAAH,EAAGA,aAAcqC,EAAjB,EAAiBA,SAAUK,EAA3B,EAA2BA,aAA3B,OACrB,kBAAC,IAAMC,SAAP,KACE,kBAAC,GAAD,CACE5C,MAAM,OACNC,aAAcA,EAAa4C,KAC3BpE,SAAU,SAAA0B,GAAC,OAAIwC,EAAa,GAAD,OAAIL,EAAQ,UAAMA,EAAN,KAAoB,GAAhC,QAA0CnC,IACrED,YAAY,aAEd,kBAAC,GAAD,CACEF,MAAM,WACNC,aAAcA,EAAa6C,SAC3BrE,SAAU,SAAA0B,GAAC,OAAIwC,EAAa,GAAD,OAAIL,EAAQ,UAAMA,EAAN,KAAoB,GAAhC,YAA8CnC,IACzED,YAAY,aAEd,kBAAC,GAAD,CACEF,MAAM,WACNC,aAAcA,EAAa8C,OAC3BtE,SAAU,SAAA0B,GAAC,OAAIwC,EAAa,GAAD,OAAIL,EAAQ,UAAMA,EAAN,KAAoB,GAAhC,UAA4CnC,IACvED,YAAY,oB,UClBV8C,GAAUC,KAAVD,MCFOE,GDIM,SAAC,GAAD,IAAG3F,EAAH,EAAGA,MAAOuC,EAAV,EAAUA,SAAV,IAAoBuC,gBAApB,SAAqCc,EAArC,EAAqCA,OAArC,OACnB,kBAAC,KAAD,CAAUC,WAAS,EAACnG,MAAO,CAACoG,OAAQ,QAASC,iBAAkBH,EAAS,CAAC,KAAO,KAAMd,SAAUA,GAC9F,kBAACW,GAAD,CAAOO,OAAQhG,EAAOpL,IAAI,KACvB2N,KEPQ0D,GCMU,SAAC,GAAD,IAAGvD,EAAH,EAAGA,aAAcqC,EAAjB,EAAiBA,SAAUK,EAA3B,EAA2BA,aAAc5M,EAAzC,EAAyCA,KAAzC,OACvB,kBAAC,GAAD,CAAcwH,MAAM,2BAA2B8E,UAAU,EAAOc,QAAQ,GACtE,kBAAC,GAAD,CACEnD,MAAM,OACNC,aAAcA,EAAawD,KAC3BhF,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAQ,UAAMA,EAAN,KAAoB,GAAhC,QAA0CnC,MAEzE,kBAAC,GAAD,CACEH,MAAM,OACNU,IAAK,KACLC,IAAK,MACLV,aAAcA,EAAayD,KAC3BjF,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAQ,UAAMA,EAAN,KAAoB,GAAhC,QAA0CnC,MAE/D,YAATpK,GACC,kBAAC,IAAM6M,SAAP,KACE,kBAAC,GAAD,CACE3C,aAAcA,EACdqC,SAAUA,EACVK,aAAcA,KAIpB,kBAAC,GAAD,CACE3C,MAAM,UACNC,aAAcpN,KAAKE,UAAUkN,EAAaI,SAC1C5B,SAAU,SAAC0B,GAAD,OACRwC,EAAa,GAAD,OAAIL,EAAQ,UAAMA,EAAN,KAAoB,GAAhC,WAA6CnC,IAE3DD,YAAY,wCCpBZyD,G,oDACJ,WAAYjI,GAAQ,IAAD,uBACjB,cAAMA,GACN,IAAMvF,EAAOrC,KACP8P,EAAY,CAChBzQ,GAAG,YAAD,OAAcS,KAAKiQ,OACrBrP,KAAK,cAAD,OAAgBZ,KAAKiQ,OACzBC,SAAU3N,EAAO,WAAW,OAC5B4N,WAAY,GACZC,WAAY,EACZC,WAAY,CACVR,KAAM,YACNC,KAAOvN,EAAa,MAAN,KACdkK,QAAS,MAEX7K,QAAS,GACTG,UAAW,GACXR,QAAQ,GAhBO,OAkBjB,EAAKN,MAAQ,CACXkD,KAAM2D,EAAMpF,cAAgB1D,GAAgB8I,EAAMpF,eAAiBsN,EACnExO,MAAO,KACPe,KAAMrC,MArBS,E,wDA0CR,MAEoC0I,KAAKd,MAA1C3L,EAFC,EAEDA,SAAUsB,EAFT,EAESA,UAAWC,EAFpB,EAEoBA,YACrByG,EAASyE,KAAK3H,MAAdkD,KACFmM,EAAQ,eAAQnM,GAClBoM,EAAW,KACf,GAAID,EAASD,WAAW5D,QACtB,IACE,IAAM+D,EAAevR,KAAKC,MAAMoR,EAASD,WAAW5D,SACpDzO,GAAmBsS,EAAU,qBAAsBE,GACnD,MAAOhP,GACP+O,EACE,mEAGFA,EACF3H,KAAK6H,SAAS,CAAEjP,MAAO+O,KAEvBpU,EAASgI,GACT1G,EAAU,MACVC,EAAY,S,qCAKdkL,KAAKd,MAAMrK,UAAU,MACrBmL,KAAKd,MAAMpK,YAAY,Q,wCAGN,IAAD,EAC6BkL,KAAKd,MAA1C3L,EADQ,EACRA,SAAUsB,EADF,EACEA,UAAWC,EADb,EACaA,YACvBgT,EAAU,gBAAY1Q,KAAKiQ,OAC3BU,EAAO,eAAQ/H,KAAK3H,MAAMkD,MAChCnG,GAAmB2S,EAAS,KAAMD,GAClC1S,GAAmB2S,EAAS,OAAQ,aACpCxU,EAASwU,GACTjT,EAAYiT,GACZC,YAAW,WACTnT,EAAU,gBACT,KACHA,EAAU,Q,mCAGCiR,EAAUvQ,GACrByK,KAAK6H,UAAS,SAACI,GACb,IAAMF,EAAO,eAAQE,EAAU1M,MAG/B,OADAnG,GAAmB2S,EAASjC,EAAUvQ,GAC/B,CAAEgG,KAAMwM,EAASnP,MAAO,W,+BAIzB,IAAD,SAGiBoH,KAAK3H,MAArBkD,EAHD,EAGCA,KAAM3C,EAHP,EAGOA,MACNiB,EAAWmG,KAAKd,MAAhBrF,OACJuJ,EAAS,KA2Bb,OAzBEA,EADEpD,KAAKd,MAAMpF,cACJ,CAIP,kBAAC,KAAD,CAAQnE,IAAI,YAAYuL,QAAS,kBAAM,EAAKgH,oBAA5C,aAGA,kBAAC,KAAD,CAAQvS,IAAI,SAASuL,QAAS,kBAAM,EAAKiH,iBAAzC,UAGA,kBAAC,KAAD,CAAQxS,IAAI,KAAK4D,KAAK,UAAU2H,QAAS,kBAAM,EAAKkH,aAApD,OAKO,CACP,kBAAC,KAAD,CAAQzS,IAAI,SAASuL,QAAS,kBAAM,EAAKiH,iBAAzC,UAGA,kBAAC,KAAD,CAAQxS,IAAI,KAAK4D,KAAK,UAAU2H,QAAS,kBAAM,EAAKkH,aAApD,OAOF,kBAAC,GAAD,CACErH,MAAO,QACPoC,QAAoB,eAAXtJ,EACTwJ,SAAU,kBAAM,EAAK8E,gBACrB/E,OAAQA,GAER,kBAAC,KAAD,CACEiF,SAAU,CACRhI,KAAM,GAERiI,WAAY,CACVjI,KAAM,KAGR,kBAAC,GAAD,CACEmD,MAAM,KACNC,aAAclI,EAAK5E,GACnBsL,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,KAAMxC,MAE3C,kBAAC,GAAD,CACEH,MAAM,OACNC,aAAclI,EAAKvD,KACnBiK,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,OAAQxC,MAE7C,kBAAC,GAAD,CACEH,MAAM,QACNU,IAAK,EACLC,IAAK,IACLT,YAAY,sBACZD,aAAclI,EAAKgN,MACnBtG,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,QAASxC,MAE9C,kBAAC6E,GAAD,CACEhF,MAAM,qBACNC,aAAclI,EAAKgM,WAAahM,EAAKgM,WAAa,GAClDtF,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,aAAcxC,IACjDE,QAAS,CACP,kBAGHtI,EAAKgM,YAAchM,EAAKgM,WAAW1R,QAAQ,iBAAmB,GAC7D,kBAAC,GAAD,CACE2N,MAAM,mBACNU,IAAK,EACLC,IAAK,MACLV,aAAclI,EAAKiM,WAAajM,EAAKiM,WAAa,GAClDvF,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,aAAcxC,MAGrD,sDACA,4BACE3D,KAAK3H,MAAMsB,KAkBX,kBAAC,GAAD,CACE8J,aAAclI,EAAKkM,WACnB3B,SAAU,aACVK,aAAc,SAACL,EAAUvQ,GAAX,OACZ,EAAK4Q,aAAaL,EAAUvQ,IAE9BgE,KAAK,YAvBP,kBAAC,IAAM6M,SAAP,KACE,kBAAC,GAAD,CACE5C,MAAM,WACNC,aAAclI,EAAK+L,SACnBrF,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,WAAYxC,IAC/CE,QAAS,CAAC,OAAQ,WAEpB,kBAAC,GAAD,CACEJ,aAAclI,EAAKkM,WACnB3B,SAAU,aACVK,aAAc,SAACL,EAAUvQ,GAAX,OACZ,EAAK4Q,aAAaL,EAAUvQ,IAE9BgE,KAAMgC,EAAK+L,YAajB,kBAAC,GAAD,CACE9D,MAAM,SACNvB,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAL,SAA4BxC,IAC7CoB,UAASxJ,EAAK5C,OACdqM,gBAAiB,KACjBC,kBAAmB,SAGtBrM,GAAS,kBAAC,KAAD,CAAOY,QAASZ,EAAOW,KAAK,e,GAtNrBkJ,aAyOVC,gBAbU,SAAC,GAAD,IAAG7H,EAAH,EAAGA,YAAazC,EAAhB,EAAgBA,MAAhB,MAA6B,CACpDyB,OAAQgB,EAAYhB,OACpBC,cAAee,EAAYf,cAC3BtB,OAAQJ,EAAMI,WAGW,SAACmK,GAAD,MAAe,CACxC9N,UAAW,SAAC4T,GAAD,OAAa9F,EAAS9N,EAAU4T,KAC3CjV,YAAa,SAACkF,GAAD,OAAaiK,EAASnP,EAAYkF,KAC/CnF,SAAU,SAACmV,GAAD,OAAe/F,EAASpP,EAASmV,KAC3C5T,YAAa,SAACyD,GAAD,OAAWoK,EAAS7N,EAAYyD,QAGhCmK,CAA8CyE,ICvP9CA,I,OAAAA,IC8BAwB,GAxBU,SAAC,GAAD,IAAE7C,EAAF,EAAEA,SAAUL,EAAZ,EAAYA,WAAYU,EAAxB,EAAwBA,aAAxB,OACvB,kBAAC,IAAMC,SAAP,KACE,kBAAC,GAAD,CACE3C,aAAcgC,EAAWgC,WACzB3B,SAAQ,UAAKA,EAAL,eACRK,aAAc,SAACyC,EAAOjF,GAAR,OAAcwC,EAAayC,EAAOjF,IAChDpK,KAAK,YAEP,kBAAC,GAAD,CACEiK,MAAM,YACNC,aAAcgC,EAAWoD,MACzB5G,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAJ,UAAsBnC,MAErD,kBAAC,GAAD,CACEH,MAAM,aACNC,aAAc,CAACgC,EAAWlB,UAAYkB,EAAWlB,UAAYnN,KAAKiQ,MAAO5B,EAAWhB,QAAUgB,EAAWhB,QAAUrN,KAAKiQ,OACxHpF,SAAU,SAAC0B,GACTwC,EAAa,GAAD,OAAIL,EAAJ,cAA0BnC,EAAE,IACxCwC,EAAa,GAAD,OAAIL,EAAJ,YAAwBnC,EAAE,SCpBxCmF,I,OAAoB,CACxB,eACA,mBACA,qBA4CaC,GAzCQ,SAAC,GAAD,IACrBjD,EADqB,EACrBA,SACArC,EAFqB,EAErBA,aACAxB,EAHqB,EAGrBA,SACAsF,EAJqB,EAIrBA,WACAjE,EALqB,EAKrBA,SALqB,OAOrB,kBAAC,GAAD,CAAcvC,MAAO0C,EAAa9N,KAC9B,kBAAC,GAAD,CACE6N,MAAM,cACNC,aAAcA,EAAauF,WAC3B/G,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,eAA2BnC,IACpDD,YAAY,aAEd,kBAAC,GAAD,CACEF,MAAM,MACNC,aAAcA,EAAa9N,IAC3BsM,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,QAAoBnC,IAC7CD,YAAY,YAEd,kBAAC,GAAD,CACEF,MAAM,OACNC,aAAcA,EAAawF,KAC3BhH,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,SAAqBnC,IAC9CD,YAAY,4BAEd,kBAAC8E,GAAD,CACEhF,MAAM,aACNC,aAAcA,EAAa8D,WAC3BtF,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,eAA2BnC,IACpDE,QACE0D,EAAauB,GAAkBI,OAAO3B,GAAcuB,KAGvDxF,EACD,kBAAC,KAAD,CAAQ/J,KAAK,SAAS2H,QAAS,kBAAMe,EAAS6D,EAAU,QAAxD,YCJSqD,GAvCI,SAAC,GAAD,IAAGrD,EAAH,EAAGA,SAAUrC,EAAb,EAAaA,aAAcxB,EAA3B,EAA2BA,SAA3B,OACjB,kBAAC,IAAMmE,SAAP,KACE,kBAAC,GAAD,CACEN,SAAUA,EACVrC,aAAcA,EACdxB,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,KAExC,kBAAC,GAAD,CACEH,MAAM,aACNU,IAAK,EACLC,IAAK,MACLV,aAAcA,EAAa2F,UAC3BnH,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,cAA0BnC,MAErD,kBAAC,GAAD,CACEH,MAAM,SACN6B,MAAO,CACL,CACEtE,MAAO,SACP+E,SAAS,GAAD,OAAKA,EAAL,sBACRrC,aAAcA,EAAa4F,mBAE7B,CACEtI,MAAO,MACP+E,SAAS,GAAD,OAAKA,EAAL,QACRrC,aAAcA,EAAa6F,KAE7B,CACEvI,MAAO,iBACP+E,SAAS,GAAD,OAAKA,EAAL,iBACRrC,aAAcA,EAAa8F,eAG/BtH,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,SCfjC6F,GAlBK,SAAC,GAAD,IAAG1D,EAAH,EAAGA,SAAUrC,EAAb,EAAaA,aAAcxB,EAA3B,EAA2BA,SAA3B,OAClB,kBAAC,IAAMmE,SAAP,KACE,kBAAC,GAAD,CACEN,SAAUA,EACVrC,aAAcA,EACdxB,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,KAExC,kBAAC,GAAD,CACEH,MAAM,aACNvB,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,cAA0BnC,IACnDoB,UAAStB,EAAa2F,UACtBpE,gBAAiB,OACjBC,kBAAmB,aCWZwE,GAvBE,SAAC,GAAD,IAAG3D,EAAH,EAAGA,SAAUrC,EAAb,EAAaA,aAAcxB,EAA3B,EAA2BA,SAA3B,OACf,kBAAC,IAAMmE,SAAP,KACE,kBAAC,GAAD,CACEN,SAAUA,EACVrC,aAAcA,EACdxB,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,KAExC,kBAAC,GAAD,CACEH,MAAM,aACNC,aAAcA,EAAa2F,UAC3BnH,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,cAA0BnC,IACnDE,QAASJ,EAAaiG,SAExB,kBAAC,GAAD,CACElG,MAAM,QACNC,aAAcpN,KAAKE,UAAUkN,EAAaiG,QAC1CzH,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,WAAuBzP,KAAKC,MAAMqN,KAC3DD,YAAY,sDCbdiG,GAA0B,CAC9BzF,IAAK,EACLC,IAAK,IACLyF,WAAY,EACZC,WAAY,IACZC,KAAM,GAEFC,GAAsB,SAAC,GAAD,IAAGtG,EAAH,EAAGA,aAAcqC,EAAjB,EAAiBA,SAAU7D,EAA3B,EAA2BA,SAA3B,OAC1B,kBAAC,GAAD,CAAclB,MAAO,qBACnB,kBAAC,GAAD,CACEyC,MAAM,QACN6B,MAAO,CACL,CACEtE,MAAO,MACP+E,SAAS,GAAD,OAAKA,EAAL,QACRrC,aAAcA,EAAaS,KAE7B,CACEnD,MAAO,MACP+E,SAAS,GAAD,OAAKA,EAAL,QACRrC,aAAcA,EAAaU,MAG/BlC,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,MAE1C,kBAAC,GAAD,CACEH,MAAM,gBACN6B,MAAO,CACL,CACEtE,MAAO,cACP+E,SAAS,GAAD,OAAKA,EAAL,eACRrC,aAAcA,EAAamG,YAE7B,CACE7I,MAAO,cACP+E,SAAS,GAAD,OAAKA,EAAL,eACRrC,aAAcA,EAAaoG,YAE7B,CACE9I,MAAO,OACP+E,SAAS,GAAD,OAAKA,EAAL,SACRrC,aAAcA,EAAaqG,OAG/B7H,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,QAkD/BqG,GA7CU,SAAC,GAAD,IAAGlE,EAAH,EAAGA,SAAUrC,EAAb,EAAaA,aAAcxB,EAA3B,EAA2BA,SAA3B,OACvB,kBAAC,IAAMmE,SAAP,KACE,kBAAC,GAAD,CACEN,SAAUA,EACVrC,aAAcA,EACdxB,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,IACxC4D,WAAY,CACV,wBACA,gCACA,wCAGF,kBAAC,GAAD,CACE/D,MAAM,aACNC,aAAcA,EAAa2F,UAC3BnH,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,cAA0BnC,MAErD,kBAAC,GAAD,CACEH,MAAM,oBACNvB,SAAU,SAAC0B,GAAD,OAAO1B,EAAS,GAAD,OAAI6D,EAAJ,yBAAqCnC,IAC9DoB,UAAStB,EAAawG,qBACtBjF,gBAAiB,SACjBC,kBAAmB,YAEpBxB,EAAawG,qBACZxG,EAAayG,iBACX,kBAAC,GAAD,CACEzG,aAAcA,EAAayG,iBAC3BpE,SAAQ,UAAKA,EAAL,qBACR7D,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,MAG1C,kBAAC,GAAD,CACEF,aAAckG,GACd7D,SAAQ,UAAKA,EAAL,qBACR7D,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,MAI5C,kBAAC,IAAMyC,SAAP,SC3DO+D,GAhCa,SAAC,GAAD,IAAGrE,EAAH,EAAGA,SAAUsE,EAAb,EAAaA,QAASnI,EAAtB,EAAsBA,SAAtB,OAC1B,kBAAC,WAAD,KACGmI,EAAQtG,KAAI,SAACuG,EAAQtU,GACpB,GAAIsU,EACF,OAAQA,EAAO9Q,MACb,IAAK,sBACH,OAAO,kBAAC,GAAD,CACL5D,IAAKI,EACL+P,SAAQ,UAAKA,EAAL,YAAiB/P,EAAjB,KACR0N,aAAc4G,EACdpI,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,MAE5C,IAAK,mBACH,OAAO,kBAAC,GAAD,CACLhO,IAAKI,EACL+P,SAAQ,UAAKA,EAAL,YAAiB/P,EAAjB,KACR0N,aAAc4G,EACdpI,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,MAE5C,IAAK,sBACL,IAAK,oBACH,OAAO,kBAAC,GAAD,CACLhO,IAAKI,EACL+P,SAAQ,UAAKA,EAAL,YAAiB/P,EAAjB,KACR0N,aAAc4G,EACdpI,SAAU,SAAC2G,EAAOjF,GAAR,OAAc1B,EAAS2G,EAAOjF,Y,8BC0LvC2G,GA7IW,SAAC,GAAD,IACxBxE,EADwB,EACxBA,SACAL,EAFwB,EAExBA,WACAU,EAHwB,EAGxBA,aAHwB,IAIxBoE,wBAJwB,gBAMxB,kBAAC,IAAMnE,SAAP,KACE,kBAAC,GAAD,CACE5C,MAAM,QACNU,IAAK,EACLC,IAAK,IACLT,YAAY,sBACZD,aAAcgC,EAAW8C,MACzBtG,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAJ,UAAsBnC,MAErD,kBAAC,GAAD,CACEH,MAAM,cACNU,IAAK,EACLC,IAAK,MACLV,aAAcgC,EAAW+E,WACzBvI,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAJ,eAA2BnC,MAG1D,kBAAC6E,GAAD,CACEhF,MAAM,oBACNC,aAAcgC,EAAWgF,iBACzBxI,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAJ,qBAAiCnC,IAC9DE,QAAS,CACP,gBACA,mBACA,iBACA,gBACA,qBACA,sBAGH4B,EAAWgF,iBAAiB5U,QAAQ,kBAAoB,GACvD,kBAAC,GAAD,CACE2N,MAAM,0BACNU,IAAK,EACLC,IAAK,IACLV,aAAcgC,EAAWiF,qBACzBzI,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAJ,yBAAqCnC,MAGrE8B,EAAWgF,iBAAiB5U,QAAQ,mBAAqB,GACxD,kBAAC,GAAD,CACE2N,MAAM,qBACNU,IAAK,EACLC,IAAK,MACLV,aAAcgC,EAAWkF,iBACzB1I,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAJ,qBAAiCnC,MAGlE,kBAAC,GAAD,CACEH,MAAM,yBACNvB,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAJ,iBAA6BnC,IAC1DoB,UAASU,EAAWmF,aACpB5F,gBAAiB,SACjBC,kBAAmB,YAErB,kBAAC,KAAD,KACE,6CAEDsF,GACC,kBAAC,IAAMnE,SAAP,KACE,kBAAC,GAAD,CACE5C,MAAM,qBACNvB,SAAU,SAAC0B,GAAD,OAAOwC,EAAa,GAAD,OAAIL,EAAJ,eAA2BnC,IACxDoB,UAASU,EAAWoF,WACpB7F,gBAAiB,SACjBC,kBAAmB,YAEpBQ,EAAWoF,YACV,kBAAC,GAAD,CACE/E,SAAQ,UAAKA,EAAL,WACRrC,aAAcgC,EAAWqF,OAASrF,EAAWqF,OA3I/B,CACxBvR,KAAM,qBACN5D,IAAK,UACLqT,WAAY,aACZI,UAAW,KACXH,KAAM,KACN1B,WAAY,GACZ+B,IAAK,IACLC,aAAc,EACdF,kBAAmB,KAmITpH,SAAU,SAAC2G,EAAOjF,GAAR,OAAcwC,EAAayC,EAAOjF,OAKpD,kBAAC,GAAD,CACEmC,SAAQ,UAAKA,EAAL,YACRsE,QAAS3E,EAAW2E,QAAU3E,EAAW2E,QAAU,GACnDnI,SAAU,SAAC2G,EAAOjF,GAAR,OAAcwC,EAAayC,EAAOjF,MAE9C,kBAAC,KAAD,CACEoH,QACE,kBAAC,KAAD,KACE,kBAAC,KAAK9J,KAAN,CACEtL,IAAI,IACJuL,QAAS,WACP,IAAMnL,EAAQ0P,EAAW2E,QAAQ1U,OAC3BkT,EAAK,UAAM9C,EAAN,oBAA0B/P,EAA1B,KACXoQ,EAAayC,EAlJA,CACzBrP,KAAM,sBACN5D,IAAK,wBACLqT,WAAY,qBACZI,WAAW,EACXH,KAAM,GACN1B,WAAY,OAuIJ,qBAUA,kBAAC,KAAKtG,KAAN,CACEtL,IAAI,IACJuL,QAAS,WACP,IAAMnL,EAAQ0P,EAAW2E,QAAQ1U,OAC3BkT,EAAK,UAAM9C,EAAN,oBAA0B/P,EAA1B,KACXoQ,EAAayC,EAnJH,CACtBrP,KAAM,mBACN5D,IAAK,qBACLqT,WAAY,kBACZI,UAAW,SACXH,KAAM,GACN1B,WAAY,GACZmC,OAAQ,CAAC,SAAU,cAuIX,kBAUA,kBAAC,KAAKzI,KAAN,CACEtL,IAAI,IACJuL,QAAS,WACP,IAAMnL,EAAQ0P,EAAW2E,QAAQ1U,OAC3BkT,EAAK,UAAM9C,EAAN,oBAA0B/P,EAA1B,KACXoQ,EAAayC,EAnJA,CACzBrP,KAAM,sBACN5D,IAAK,wBACLqT,WAAY,qBACZI,UAAW,GACXH,KAAM,GACN1B,WAAY,GACZ2C,iBAAkB,CAChBhG,IAAK,EACLC,IAAK,IACLyF,WAAY,GACZC,WAAY,GACZC,KAAM,OAkIA,qBAUA,kBAAC,KAAK7I,KAAN,CACEtL,IAAI,IACJuL,QAAS,WACP,IAAMnL,EAAQ0P,EAAW2E,QAAQ1U,OAC3BkT,EAAK,UAAM9C,EAAN,oBAA0B/P,EAA1B,KACXoQ,EAAayC,EA7IF,CACvBrP,KAAM,oBACN5D,IAAK,sBACLqT,WAAY,mBACZI,UAAW,GACXH,KAAM,GACN1B,WAAY,GACZ2C,iBAAkB,CAChBhG,IAAK,EACLC,IAAK,IACLyF,WAAY,GACZC,WAAY,GACZC,KAAM,OA4HA,oBAYJkB,UAAU,WAEV,kBAAC,KAAD,CAAQzR,KAAK,UAAUkH,MAAO,CAAEoG,OAAQ,SAAxC,mBACkB,kBAACoE,GAAA,EAAD,UCjMlBC,GAAmB,iBAAO,CAC9BzD,WAAY,CACVR,KAAM,YACNC,KAAM,MACNiE,SAAU,KACV7E,SAAU,KACVzC,QAAS,MAEXgF,MAAO,KACPtC,OAAQ,KACRhC,UAAWnN,KAAKiQ,MAChB5C,QAASrN,KAAKiQ,QAeV+D,GAAa,iBAAO,CACxBzU,GAAG,MAAD,OAAQS,KAAKiQ,OACfgE,SAAU,KACVrT,KAAK,QAAD,OAAUZ,KAAKiQ,OACnB1O,QAAQ,EACR2S,gBAAgB,EAChBC,MAAO,KACPC,SAAU,KACV/F,WApBgC,CAChC+E,WAAY,EACZjC,MAAO,EACPmC,qBAAsB,EACtBC,iBAAkB,GAClBF,iBAAkB,GAClBI,YAAY,EACZD,cAAc,EACdE,OAAQ,KACRV,QAAS,MAcLqB,G,oDACJ,WAAYvM,GAAQ,IAAD,uBACjB,cAAMA,GADW,IAGT9G,EAAoD8G,EAApD9G,MAAO2B,EAA6CmF,EAA7CnF,eAAgBC,EAA6BkF,EAA7BlF,iBAAkBH,EAAWqF,EAAXrF,OAC3C6R,EAAW,CAAC,MACdhT,EAAU,KACViT,EACS,gBAAX9R,EACIE,EACW,kBAAXF,EACAG,EACA,KACN,GAAI5B,EAAMI,OAER,IAFiB,IACTA,EAAWJ,EAAXI,OACCzC,EAAQ,EAAGA,EAAQyC,EAAO9C,OAAQK,IAEzC,GADA2V,EAASzV,KAAKuC,EAAOzC,GAAOY,IACP,OAAjBgV,GAAqC,OAAZjT,EAAkB,CAAC,IAAD,EAChBF,EAAOzC,GAA7BiD,EADsC,EACtCA,QAASG,EAD6B,EAC7BA,UAChB,GAAe,gBAAXU,GAA4Bb,GAC9B,IAAI,IAAI4S,EAAM,EAAGA,EAAM5S,EAAQtD,OAAQkW,IACrC,GAAI5S,EAAQ4S,GAAKjV,KAAOgV,EAAahV,GAAI,CACvC+B,EAAUF,EAAOzC,GAAOY,GACxB,YAGC,GAAe,kBAAXkD,GAA8BV,EACvC,IAAI,IAAI0S,EAAM,EAAGA,EAAM1S,EAAUzD,OAAQmW,IACvC,GAAI1S,EAAU0S,GAAKlV,KAAOgV,EAAahV,GAAI,CACzC+B,EAAUF,EAAOzC,GAAOY,GACxB,OAOZ,IAAImV,EAAW1V,GAAgB8U,MAC3Ba,EAAa3V,GA7Da,CAChCoU,WAAY,EACZjC,MAAO,EACPmC,qBAAsB,EACtBC,iBAAkB,GAClBF,iBAAkB,GAClBI,YAAY,EACZD,cAAc,EACdE,OAAQ,KACRV,QAAS,KAqDH7O,EAAO6P,KAtCM,OAwCbO,KACFpQ,EAAOnF,GAAgBuV,IACdL,eACPQ,EAAWvQ,EAAKkK,WAEhBsG,EAAaxQ,EAAKkK,YAGtB,EAAKpN,MAAQ,CACXkD,OACA7C,QAASgT,EAAS,GAClBA,WACAI,WACAC,aACAnT,MAAO,MAtDQ,E,uEA0DOoT,GAAW,IAC3B5T,EAAoD4T,EAApD5T,MAAO2B,EAA6CiS,EAA7CjS,eAAgBC,EAA6BgS,EAA7BhS,iBAAkBH,EAAWmS,EAAXnS,OAE3C6R,EAAW,CAAC,MACdhT,EAAU,KACViT,EACS,gBAAX9R,EACIE,EACW,kBAAXF,EACAG,EACA,KACN,GAAI5B,EAAMI,OAER,IAFiB,IACTA,EAAWJ,EAAXI,OACCzC,EAAQ,EAAGA,EAAQyC,EAAO9C,OAAQK,IAEzC,GADA2V,EAASzV,KAAKuC,EAAOzC,GAAOY,IACP,OAAjBgV,GAAqC,OAAZjT,EAAkB,CAAC,IAAD,EAChBF,EAAOzC,GAA7BiD,EADsC,EACtCA,QAASG,EAD6B,EAC7BA,UAChB,GAAe,gBAAXU,GAA4Bb,GAC9B,IAAI,IAAI4S,EAAM,EAAGA,EAAM5S,EAAQtD,OAAQkW,IACrC,GAAI5S,EAAQ4S,GAAKjV,KAAOgV,EAAahV,GAAI,CACvC+B,EAAUF,EAAOzC,GAAOY,GACxB,YAGC,GAAe,kBAAXkD,GAA8BV,EACvC,IAAI,IAAI0S,EAAM,EAAGA,EAAM1S,EAAUzD,OAAQmW,IACvC,GAAI1S,EAAU0S,GAAKlV,KAAOgV,EAAahV,GAAI,CACzC+B,EAAUF,EAAOzC,GAAOY,GACxB,OAOZ,IAAImV,EAAW1V,GAAgB8U,MAC3Ba,EAAa3V,GAtHa,CAChCoU,WAAY,EACZjC,MAAO,EACPmC,qBAAsB,EACtBC,iBAAkB,GAClBF,iBAAkB,GAClBI,YAAY,EACZD,cAAc,EACdE,OAAQ,KACRV,QAAS,KA8GH7O,EAAO6P,KACPO,KACFpQ,EAAOnF,GAAgBuV,IACdL,eACPQ,EAAWvQ,EAAKkK,WAEhBsG,EAAaxQ,EAAKkK,YAItBzF,KAAK6H,SAAS,CACZtM,OACA7C,QAASA,GAAoBgT,EAAS,GACtCA,WACAI,WACAC,aACAnT,MAAO,KACPe,MAAM,M,0CAKRqG,KAAK6H,SAAS,CAAClO,KAAMrC,S,oCAGT2U,GACZjM,KAAK6H,SAAS,CAAEnP,QAASuT,M,yCAGRC,GACbA,EACFlM,KAAK6H,UAAS,SAACI,GACb,IAAMF,EAAO,eAAQE,EAAU1M,MAG/B,OAFAnG,GAAmB2S,EAAS,aAAcE,EAAU6D,UACpD1W,GAAmB2S,EAAS,kBAAkB,GACvC,CAAExM,KAAMwM,EAASnP,MAAO,KAAMmT,WAAY9D,EAAU8D,eAG7D/L,KAAK6H,UAAS,SAACI,GACb,IAAMF,EAAO,eAAQE,EAAU1M,MAG/B,OAFAnG,GAAmB2S,EAAS,aAAcE,EAAU8D,YACpD3W,GAAmB2S,EAAS,kBAAkB,GACvC,CAAExM,KAAMwM,EAASnP,MAAO,KAAMkT,SAAU7D,EAAU6D,e,mCAIlDhG,EAAUvQ,GACrByK,KAAK6H,UAAS,SAACI,GACb,IAAMF,EAAO,eAAQE,EAAU1M,MAG/B,OADAnG,GAAmB2S,EAASjC,EAAUvQ,GAC/B,CAAEgG,KAAMwM,EAASnP,MAAO,W,iCAIvB,IAAD,EACiBoH,KAAK3H,MAAvBK,EADC,EACDA,QAAS6C,EADR,EACQA,KADR,EAOLyE,KAAKd,MAJPrF,EAHO,EAGPA,OACApG,EAJO,EAIPA,oBACAC,EALO,EAKPA,sBACAmB,EANO,EAMPA,UAEa,gBAAXgF,GAEApG,EAAoBiF,EAAS6C,GAC7B1G,EAAU,MACVmL,KAAKd,MAAMlK,aAAa,OACN,kBAAX6E,GAGPnG,EAAsBgF,EAAS6C,GAC/B1G,EAAU,MACVmL,KAAKd,MAAMjK,eAAe,QAE5B8B,QAAQC,IAAR,gCAAqC6C,IACrCmG,KAAK6H,SAAS,CAAEjP,MAAM,yBAAD,OAA2BiB,Q,qCAKlDmG,KAAKd,MAAMrK,UAAU,MACrBmL,KAAKd,MAAMlK,aAAa,MACxBgL,KAAKd,MAAMjK,eAAe,Q,wCAGT,IAAD,EACU+K,KAAK3H,MAAvBK,EADQ,EACRA,QAASiB,EADD,EACCA,KADD,EASZqG,KAAKd,MANPrF,EAHc,EAGdA,OACApG,EAJc,EAIdA,oBACAC,EALc,EAKdA,sBACAmB,EANc,EAMdA,UACAG,EAPc,EAOdA,aACAC,EARc,EAQdA,eAGF,GAAe,gBAAX4E,EAA0B,CAC5B,IAAMiO,EAAU,iBAAa1Q,KAAKiQ,OAC5BU,EAAO,2BACR/H,KAAK3H,MAAMkD,MADH,IAEX5E,GAAImR,EACJ9P,KAAM,eAINvE,EAAoBiF,EAASqP,GAC7B/S,EAAa+S,GACbC,YAAW,WACTnT,EAAU,iBACT,KACHA,EAAU,WACP,GAAe,kBAAXgF,EAA4B,CAErC,IAAMiO,EAAU,cAAU1Q,KAAKiQ,OACzBU,EAAO,2BACR/H,KAAK3H,MAAMkD,MADH,IAEX5E,GAAImR,EACJ9P,KAAM,iBAEJ2B,GAEFjG,EAAsBqU,GACtBC,YAAW,WACTnT,EAAU,mBACT,KACHI,EAAe8S,GACflT,EAAU,QAEVkC,QAAQC,IAAR,kDAC6C2C,EAD7C,aACsDE,IAEtDmG,KAAK6H,SAAS,CACZjP,MAAM,2CAAD,OAA6Ce,EAA7C,aAAsDE,WAI/D9C,QAAQC,IAAR,gCAAqC6C,IACrCmG,KAAK6H,SAAS,CAAEjP,MAAM,yBAAD,OAA2BiB,O,+BAI1C,IAAD,SAC0CmG,KAAK3H,MAA9CkD,EADD,EACCA,KAAM3C,EADP,EACOA,MAAOF,EADd,EACcA,QAASgT,EADvB,EACuBA,SAAU/R,EADjC,EACiCA,KADjC,EAE8CqG,KAAKd,MAAlDrF,EAFD,EAECA,OAAQG,EAFT,EAESA,iBAAkBD,EAF3B,EAE2BA,eAClC,IAAKJ,GAAmB,kBAAXE,EAA4B,OAAO,KAChD,IAAIuJ,EAAS,KAKXA,EAHCrJ,GAA6B,gBAAXF,GAClBG,GAA+B,kBAAXH,EAEZ,CACP,kBAAC,KAAD,CAAQlE,IAAI,YAAYuL,QAAS,kBAAM,EAAKgH,oBAA5C,aAGA,kBAAC,KAAD,CAAQvS,IAAI,SAASuL,QAAS,kBAAM,EAAKiH,iBAAzC,UAGA,kBAAC,KAAD,CAAQxS,IAAI,KAAK4D,KAAK,UAAU2H,QAAS,kBAAM,EAAKkH,aAApD,OAKO,CACP,kBAAC,KAAD,CAAQzS,IAAI,SAASuL,QAAS,kBAAM,EAAKiH,iBAAzC,UAGA,kBAAC,KAAD,CAAQxS,IAAI,KAAK4D,KAAK,UAAU2H,QAAS,kBAAM,EAAKkH,aAApD,OAKJ,IAAM+D,EAAsB,gBAAXtS,EACX0R,EAAQhQ,EAAKgQ,MACfhQ,EAAKgQ,MADK,iBAEA7S,EAFA,mBAEkB6C,EAAK8P,SAAL,WAAoB9P,EAAK8P,UAAa,GAFxD,YAGR9P,EAAK5E,IAEX,OACE,kBAAC,GAAD,CACEoK,MAAK,UAAKoL,EAAW,SAAW,YAChChJ,QACEgJ,GAAaxS,GAAmB,kBAAXE,EAEvBwJ,SAAU,kBAAM,EAAK8E,gBACrB/E,OAAQA,GAER,kBAAC,KAAD,CACEiF,SAAU,CACRhI,KAAM,GAERiI,WAAY,CACVjI,KAAM,KAGR,kBAAC,GAAD,CACEmD,MAAM,QACNC,aAAc/K,EACduJ,SAAU,SAAC0B,GAAD,OAAO,EAAKyI,cAAczI,IACpCE,QAAS6H,IAEX,kBAAC,GAAD,CACElI,MAAM,cACNC,aAAclI,EAAK5E,GACnBsL,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,KAAMxC,IACzCD,YAAY,2BAEd,kBAAC,GAAD,CACEF,MAAM,YACNC,aAAclI,EAAK8P,SACnBpJ,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,WAAYxC,IAC/CD,YAAY,mDAEd,kBAAC,GAAD,CACEF,MAAM,OACNC,aAAclI,EAAKvD,KACnBiK,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,OAAQxC,OAE3ChK,GACA,kBAAC,GAAD,CACE6J,MAAM,QACNC,aAAc8H,EACdtJ,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,QAASxC,MAIhD,kBAAC,GAAD,CACEH,MAAM,YACNC,aAAcpN,KAAKE,UAAUgF,EAAKiQ,UAClCvJ,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,WAAYxC,IAC/CD,YAAY,6BAEd,kBAAC,GAAD,CACEF,MAAM,SACNvB,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAL,SAA4BxC,IAC7CoB,UAASxJ,EAAK5C,OACdqM,gBAAiB,KACjBC,kBAAmB,QAErB,kBAAC,GAAD,CACEzB,MAAM,cACNC,aAAclI,EAAK+P,eAAiB,SAAW,WAC/CrJ,SAAU,SAAC0B,GACT,EAAK0I,mBAAyB,WAAN1I,IAE1BE,QAAS,CAAC,SAAU,cAErBtI,EAAK+P,eACJ,kBAAC,GAAD,CACExF,SAAU,aACVL,WAAYlK,EAAKkK,WACjBU,aAAc,SAACL,EAAUvQ,GAAX,OACZ,EAAK4Q,aAAaL,EAAUvQ,MAIhC,kBAAC,GAAD,CACEuQ,SAAU,aACVL,WAAYlK,EAAKkK,WACjBU,aAAc,SAACL,EAAUvQ,GAAX,OACZ,EAAK4Q,aAAaL,EAAUvQ,IAE9BgV,kBACG5Q,GAAmB,gBAAXE,KAKhBjB,GAAS,kBAAC,KAAD,CAAOY,QAASZ,EAAOW,KAAK,e,GA5WpBkJ,aAmYXC,gBAjBU,SAAC,GAAD,IAAG7H,EAAH,EAAGA,YAAazC,EAAhB,EAAgBA,MAAhB,MAA6B,CACpDyB,OAAQgB,EAAYhB,OACpBE,eAAgBc,EAAYd,eAC5BC,iBAAkBa,EAAYb,iBAC9B5B,YAGyB,SAACuK,GAAD,MAAe,CACxC9N,UAAW,SAAC4T,GAAD,OAAa9F,EAAS9N,EAAU4T,KAC3ChV,oBAAqB,SAACiF,EAAS6C,GAAV,OACnBoH,EAASlP,EAAoB,CAAEiF,UAASG,OAAQ0C,MAClD7H,sBAAuB,SAACgF,EAAS6C,GAAV,OACrBoH,EAASjP,EAAsB,CAAEgF,UAASO,SAAUsC,MACtDtG,eAAgB,SAACqX,GAAD,OAAS3J,EAAS1N,EAAeqX,KACjDtX,aAAc,SAAC6D,GAAD,OAAY8J,EAAS3N,EAAa6D,QAGnC6J,CAA8C+I,ICvb9CA,I,OAAAA,ICoBTc,GAAe,iBAAO,CAC1B5V,GAAG,UAAD,OAAYS,KAAKiQ,OACnBgE,SAAU,KACVrT,KAAK,YAAD,OAAcZ,KAAKiQ,OACvBkE,MAAO,KACP5S,QAAQ,IAGJ6T,G,oDACJ,WAAYtN,GAAQ,IAAD,uBACjB,cAAMA,GADW,IAGT9G,EAA4B8G,EAA5B9G,MAAO4B,EAAqBkF,EAArBlF,iBACT0R,EAAW,CAAC,MACdhT,EAAU,KACd,GAAIN,EAAMI,OAER,IAFiB,IACTA,EAAWJ,EAAXI,OACCzC,EAAQ,EAAGA,EAAQyC,EAAO9C,OAAQK,IAEzC,GADA2V,EAASzV,KAAKuC,EAAOzC,GAAOY,IACH,OAArBqD,GAAyC,OAAZtB,EAE/B,IAFkD,IAC1CS,EAAcX,EAAOzC,GAArBoD,UACC0S,EAAM,EAAGA,EAAM1S,EAAUzD,OAAQmW,IACxC,GAAI1S,EAAU0S,GAAKlV,KAAOqD,EAAiBrD,GAAI,CAC7C+B,EAAUF,EAAOzC,GAAOY,GACxB,MAfO,OAsBjB,EAAK0B,MAAQ,CACXkD,KAAMvB,EACF5D,GAAgB4D,GAChBuS,KACJ7T,QAASA,GAAoBgT,EAAS,GACtCA,WACA9S,MAAO,MA5BQ,E,uEAgCOoT,GAAW,IAC3B5T,EAA4B4T,EAA5B5T,MAAO4B,EAAqBgS,EAArBhS,iBACT0R,EAAW,CAAC,MACdhT,EAAU,KACd,GAAIN,EAAMI,OAER,IAFiB,IACTA,EAAWJ,EAAXI,OACCzC,EAAQ,EAAGA,EAAQyC,EAAO9C,OAAQK,IAEzC,GADA2V,EAASzV,KAAKuC,EAAOzC,GAAOY,IACH,OAArBqD,GAAyC,OAAZtB,EAE/B,IAFkD,IAC1CS,EAAcX,EAAOzC,GAArBoD,UACC0S,EAAM,EAAGA,EAAM1S,EAAUzD,OAAQmW,IACxC,GAAI1S,EAAU0S,GAAKlV,KAAOqD,EAAiBrD,GAAI,CAC7C+B,EAAUF,EAAOzC,GAAOY,GACxB,MAOVqJ,KAAK6H,SAAS,CACZtM,KAAMvB,EACF5D,GAAgB4D,GAChBuS,KACJ7T,QAASA,GAAoBgT,EAAS,GACtCA,WACA9S,MAAO,S,oCAIGqT,GACZjM,KAAK6H,SAAS,CAAEnP,QAASuT,M,mCAGdnG,EAAUvQ,GACrByK,KAAK6H,UAAS,SAACI,GACb,IAAMF,EAAO,eAAQE,EAAU1M,MAE/B,OADAnG,GAAmB2S,EAASjC,EAAUvQ,GAC/B,CAAEgG,KAAMwM,EAASnP,MAAO,W,iCAIvB,IAAD,EACiBoH,KAAK3H,MAAvBK,EADC,EACDA,QAAS6C,EADR,EACQA,KADR,EAEoCyE,KAAKd,MAA1CxL,EAFC,EAEDA,sBAAuBmB,EAFtB,EAEsBA,UAC/BnB,EAAsBgF,EAAS6C,GAC/B1G,EAAU,MACVmL,KAAKd,MAAMjK,eAAe,Q,qCAI1B+K,KAAKd,MAAMrK,UAAU,MACrBmL,KAAKd,MAAMjK,eAAe,Q,wCAGT,IACTyD,EAAYsH,KAAK3H,MAAjBK,QADQ,EAE6CsH,KAAKd,MAA1DxL,EAFQ,EAERA,sBAAuBmB,EAFf,EAEeA,UAAWI,EAF1B,EAE0BA,eACpCwX,EAAa,cAAUrV,KAAKiQ,OAC5BU,EAAO,2BACR/H,KAAK3H,MAAMkD,MADH,IAEX5E,GAAI8V,EACJpB,SAAUrL,KAAK3H,MAAMgT,SACrBrT,KAAM,iBAERtE,EAAsBgF,EAASqP,GAC/BlT,EAAU,MACVmT,YAAW,WACT/S,EAAe8S,GACflT,EAAU,mBACT,O,+BAGK,IAAD,SACoCmL,KAAK3H,MAAxCkD,EADD,EACCA,KAAM3C,EADP,EACOA,MAAOF,EADd,EACcA,QAASgT,EADvB,EACuBA,SACtB7R,EAAWmG,KAAKd,MAAhBrF,OACJuJ,EAAS,KAGXA,EADEpD,KAAKd,MAAMlF,iBACJ,CACP,kBAAC,KAAD,CAAQrE,IAAI,YAAYuL,QAAS,kBAAM,EAAKgH,oBAA5C,aAGA,kBAAC,KAAD,CAAQvS,IAAI,SAASuL,QAAS,kBAAM,EAAKiH,iBAAzC,UAGA,kBAAC,KAAD,CAAQxS,IAAI,KAAK4D,KAAK,UAAU2H,QAAS,kBAAM,EAAKkH,aAApD,OAKO,CACP,kBAAC,KAAD,CAAQzS,IAAI,SAASuL,QAAS,kBAAM,EAAKiH,iBAAzC,UAGA,kBAAC,KAAD,CAAQxS,IAAI,KAAK4D,KAAK,UAAU2H,QAAS,kBAAM,EAAKkH,aAApD,OAMJ,IAAMmD,EAAQhQ,EAAKgQ,MACfhQ,EAAKgQ,MADK,iBAEA7S,EAFA,qBAGR6C,EAAK8P,SAAL,WAAoB9P,EAAK8P,UAAa,GAH9B,YAIN9P,EAAK5E,GAJC,MAKRgD,EAAOrC,KACb,OACE,kBAAC,GAAD,CACEyJ,MAAO,WACPoC,QAAoB,kBAAXtJ,IAA+BF,EACxC0J,SAAU,kBAAM,EAAK8E,gBACrB/E,OAAQA,GAER,kBAAC,KAAD,CACEiF,SAAU,CACRhI,KAAM,GAERiI,WAAY,CACVjI,KAAM,KAGR,kBAAC,GAAD,CACEmD,MAAM,QACNC,aAAc/K,EACduJ,SAAU,SAAC0B,GAAD,OAAO,EAAKyI,cAAczI,IACpCE,QAAS6H,IAEX,kBAAC,GAAD,CACElI,MAAM,cACNC,aAAclI,EAAK5E,GACnBsL,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,KAAMxC,MAE3C,kBAAC,GAAD,CACEH,MAAM,YACNC,aAAclI,EAAK8P,SACnBpJ,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,WAAYxC,IAC/CD,YAAY,qDAEd,kBAAC,GAAD,CACEF,MAAM,OACNC,aAAclI,EAAKvD,KACnBiK,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,OAAQxC,MAE7C,kBAAC,GAAD,CACEH,MAAM,QACNU,IAAK,EACLC,IAAK,IACLT,YAAY,sBACZD,aAAclI,EAAKgN,MACnBtG,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,QAASxC,MAE9C,kBAAC,GAAD,CACEH,MAAM,QACNC,aAAc8H,EACdtJ,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAa,QAASxC,MAE9C,kBAAC,GAAD,CACEH,MAAM,SACNvB,SAAU,SAAC0B,GAAD,OAAO,EAAKwC,aAAL,SAA4BxC,IAC7CoB,UAASxJ,EAAK5C,OACdqM,gBAAiB,KACjBC,kBAAmB,SAGtBrM,GAAS,kBAAC,KAAD,CAAOY,QAASZ,EAAOW,KAAK,e,GAtMlBkJ,aAyNbC,gBAbU,SAAC,GAAD,IAAG7H,EAAH,EAAGA,YAAazC,EAAhB,EAAgBA,MAAhB,MAA6B,CACpDyB,OAAQgB,EAAYhB,OACpBG,iBAAkBa,EAAYb,iBAC9B5B,YAGyB,SAACuK,GAAD,MAAe,CACxC9N,UAAW,SAAC4T,GAAD,OAAa9F,EAAS9N,EAAU4T,KAC3CxT,eAAgB,SAACqX,GAAD,OAAS3J,EAAS1N,EAAeqX,KACjD5Y,sBAAuB,SAACgF,EAAS6C,GAAV,OACrBoH,EAASjP,EAAsB,CAAEgF,UAASO,SAAUsC,SAGzCmH,CAA8C8J,ICrP9CA,I,OAAAA,I,+BCaTE,I,OAAQ,CACVC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,KAAM,SAGJrD,GAASsD,OAAOtD,OAAOgD,IAE7BA,GAAMO,UAAYvD,G,IA4CGwD,G,oDACjB,WAAYhO,GAAQ,IAAD,+BACf,cAAMA,IAEDiO,eAAiB,KACtB,EAAKC,WAAa,KAElB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,iBACpB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,iBACd,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,iBACnB,EAAKG,UAAY,EAAKA,UAAUH,KAAf,iBACjB,EAAKI,MAAQ,EAAKA,MAAMJ,KAAX,iBAVE,E,iEAaE,IAAD,EAQZtN,KAAKd,MANLyO,EAFY,EAEZA,aAKGC,GAPS,EAGZC,SAHY,EAIZC,iBAJY,EAKZC,IALY,EAMZ9L,SANY,iFAUhBjC,KAAKgO,aAAL,2BACOJ,GADP,IAEIlB,MAAOiB,O,4CAgBX,IAVAA,EAUD,EAVCA,aACAM,EASD,EATCA,OACAjW,EAQD,EARCA,KACA4I,EAOD,EAPCA,MACAsN,EAMD,EANCA,WAKGN,GACJ,EALCC,SAKD,EAJCC,iBAID,EAHCC,IAGD,EAFC9L,SAED,sHACKjC,KAAKoN,aACDxM,IAAUZ,KAAKd,MAAM0B,MACrBZ,KAAKgO,aAAL,2BACOJ,GADP,IAEIhN,QACA8L,MAAOiB,MAGPM,IAAWjO,KAAKd,MAAM+O,QACnBC,IAAelO,KAAKd,MAAMgP,YAE7BlO,KAAKoN,WAAWe,UAAUF,EAAQC,GAGlClW,IAASgI,KAAKoN,WAAWgB,WACzBpO,KAAKoN,WAAWiB,QAAQrW,O,+CAOpC,OADwC,EAApB8V,mBACQ9N,KAAKd,MAAM4O,mB,6CAInC9N,KAAKoN,aACLpN,KAAKoN,WAAWkB,UAChBtO,KAAKoN,WAAa,Q,gDAIApB,GAClBhM,KAAKd,MAAM3J,QAAUyW,EAASzW,OAC9ByK,KAAKoN,WAAWmB,IAAIvC,EAASzW,S,6BAI9BiZ,GACHxO,KAAKmN,eAAiBqB,EAClBxO,KAAKd,MAAM2O,UACX7N,KAAKd,MAAM2O,SAASW,K,sCAIM,IAAnBjZ,EAAkB,EAAlBA,MAAUqY,EAAQ,0BACzB5N,KAAKoN,YACLpN,KAAKoN,WAAWkB,UAGpBtO,KAAKoN,WAAa,IAAIqB,KAAWzO,KAAKmN,eAApB,aACdlL,SAAUjC,KAAKqN,cACZO,IAGP5N,KAAKoN,WAAWmB,IAAIhZ,K,qCAIpB,GAAIyK,KAAKd,MAAM+C,SACX,IAEiB,KADAjC,KAAKoN,WAAWsB,WAEzB1O,KAAKd,MAAM+C,SAAS,MAGxB,IAAM0M,EAAc3O,KAAKoN,WAAWtV,MAChCkI,KAAKd,MAAM3J,QAAUoZ,GACrB3O,KAAKd,MAAM+C,SAAS0M,GAE1B,MAAOC,GACL5O,KAAK4O,IAAMA,K,oCAMf5O,KAAKoN,YACLpN,KAAKoN,WAAWI,gB,kCAKhBxN,KAAKoN,YACLpN,KAAKoN,WAAWK,c,8BAKhBzN,KAAKoN,YACLpN,KAAKoN,WAAWM,U,+BAId,IAAD,EAID1N,KAAKd,MAFL4O,EAFC,EAEDA,iBACAC,EAHC,EAGDA,IAGJ,OAAOc,IAAMjP,cACTmO,EADG,2BAGID,GAHJ,IAIC1L,IAAKpC,KAAKuN,c,GAnJU9K,aAoLpCyK,GAAO4B,aAAe,CAClBf,IAAK,MACLlN,KAAM6L,GAAMC,KACZoC,SAAS,EACTlX,QAAQ,EACRmX,eAAe,EACfC,WAAW,GAMf/B,GAAOR,MAAQA,G,yBCnQAwC,I,qBCOE,SAAC,GAAD,IAAE3Z,EAAF,EAAEA,MAAO0M,EAAT,EAASA,SAAT,OACf,kBAAC,GAAD,CACE1M,MAAOA,EACP0M,SAAUA,EACV0L,aAAc,CAAC,OAAQ,QACvBwB,IAAKA,KACLvO,MAAM,uB,4DCHJwO,GAAY,SAAC,GAAD,IAAGzY,EAAH,EAAGA,GAAIwD,EAAP,EAAOA,MAAOmJ,EAAd,EAAcA,SAAd,OAChB,6BACE,kCAAQ3M,GACPwD,EAAMD,QAAU,sCAAYC,EAAMD,QACnC,4CAAkB,IAAI9C,KAAK+C,EAAMkV,aAAaC,sBAC9C,6CAAmB,IAAIlY,KAAK+C,EAAMoV,cAAcD,sBAC/ChM,IAICkM,GAAiB,SAACjU,GAAU,IACxB5E,EAAuB4E,EAAvB5E,GAAIwD,EAAmBoB,EAAnBpB,MAAOsV,EAAYlU,EAAZkU,QACnB,IAAKtV,EACH,OACE,6BACE,kCAAQxD,IAId,OAAQ8Y,GACN,IAAK,UACH,OACE,kBAAC,GAAD,CAAW9Y,GAAIA,EAAIwD,MAAOA,GACxB,oCAAUA,EAAMuV,kBAChB,wCAAcvV,EAAMwV,uBAG1B,IAAK,SACH,OACE,kBAAC,GAAD,CAAWhZ,GAAIA,EAAIwD,MAAOA,GACxB,oCAAUA,EAAMuV,mBAGtB,IAAK,WACH,OACE,kBAAC,GAAD,CAAW/Y,GAAIA,EAAIwD,MAAOA,GACxB,wCAAcA,EAAMwV,uBAG1B,QACE,OAAO,2BAAIhZ,KAMXiZ,GAAa,SAAC,GAAc,IAAZrU,EAAW,EAAXA,KAChBsU,EAAO,KAEX,OAAQtU,EAAKkU,SACX,IAAK,UACHI,EAAO,kBAACC,GAAA,EAAD,MACP,MACF,IAAK,SACHD,EAAO,kBAACE,GAAA,EAAD,MACP,MACF,IAAK,WACHF,EAAO,kBAACG,GAAA,EAAD,MACP,MACF,QACEH,EAAO,kBAACC,GAAA,EAAD,MAIX,OACE,kBAAC,KAAD,CACEnU,QAAS6T,GAAejU,GACxBwF,MAAK,UAAKxF,EAAKkU,QAAV,aAAsBlU,EAAKvD,OAEhC,kBAAC,KAAD,CAAQyI,MAAO,CAAEwP,cAAe,UAAYJ,KAAMA,MAKlDK,GAAc,CAClBC,iCAAiC,EACjCC,aAAa,EACbC,OAAQ,IACRC,gBAAiB,EACjBC,iBAAkB,GAClBC,uBAAuB,EACvBC,QAAS,EACTC,QAAS,GACTC,uBAAuB,EACvBC,YAAY,EACZC,aAAa,EACbC,MAAO,IACPC,UAAU,EACVC,KAAM,CACJC,UAAW,QACXC,SAAU,GACVC,WAAY,SACZC,eAAgB,MAChBC,kBAAmB,GACnBC,oBAAqB,OACrBC,qBAAsB,OACtBC,qBAAsB,IACtBC,YAAa,UACbC,QAAS,EACTC,aAAa,EACb/L,KAAM,IACNgM,YAAa,OACbC,YAAa,IACbC,IAAK,GACLC,WAAY,SACZC,cAAe,SAAChB,GAAD,OAAU,kBAAC,GAAD,CAAYzV,KAAMyV,MAE7CtR,KAAM,CACJsC,MAAO,UACP0P,QAAS,EACTO,qBAAqB,EACrBJ,YAAa,EACbX,SAAU,GACVE,eAAgB,OAChBO,aAAa,EACbO,cAAe,SAACxS,GAAD,OAAUA,EAAKyS,gBAI5BC,GAAiB,SAACzb,EAAIb,GAC1B,IAAKA,GAA0B,IAAjBA,EAAMJ,OAAc,OAAO,KACzC,IAAK,IAAIK,EAAQ,EAAGA,EAAQD,EAAMJ,OAAQK,IAAS,CACjD,IAAMyY,EAAU1Y,EAAMC,GACtB,GAAIyY,EAAQ7X,KAAOA,EAAI,OAAO6X,EAEhC,OAAO,MAGH6D,GAAiB,SAACja,EAAO+B,GAAW,IAChC3B,EAAWJ,EAAXI,OACR,IAAKA,GAA4B,IAAlBA,EAAO9C,OAAc,OAAO,KAG3C,IAFA,IAAM4c,EAAQ,GACRC,EAAQ,GACLxc,EAAQ,EAAGA,EAAQyC,EAAO9C,OAAQK,IAAS,CAClD,IAAMwC,EAAQC,EAAOzC,GACfyc,EAAaJ,GAAe7Z,EAAM5B,GAAIwD,GAC5CmY,EAAMrc,KAAK,CACTU,GAAI4B,EAAM5B,GACVqB,KAAMO,EAAMP,KACZyX,QAAS,UACTtV,MAAOqY,IAPyC,IAS1CxZ,EAAuBT,EAAvBS,QAASG,EAAcZ,EAAdY,UACjB,GAAIH,EACF,IAAK,IAAIyZ,EAAS,EAAGA,EAASzZ,EAAQtD,OAAQ+c,IAAU,CACtD,IAAM5Z,EAASG,EAAQyZ,GACjBC,EAAM,UAAMna,EAAM5B,GAAZ,YAAkBkC,EAAOlC,IAC/Bgc,EAAcH,EAClBJ,GAAevZ,EAAOlC,GAAI6b,EAAWG,aACrC,KACIR,EAAeQ,EAAcA,EAAYjD,iBAAmB,EAClE4C,EAAMrc,KAAK,CACTU,GAAI+b,EACJ1a,KAAMa,EAAOb,KACbyX,QAAS,SACTtV,MAAMwY,IAERJ,EAAMtc,KAAK,CAAEoU,OAAQqI,EAAQ5Q,OAAQvJ,EAAM5B,GAAIwb,iBAGnD,GAAIhZ,EACF,IAAK,IAAIsZ,EAAS,EAAGA,EAAStZ,EAAUzD,OAAQ+c,IAAU,CACxD,IAAMxZ,EAAWE,EAAUsZ,GACrBC,EAAM,UAAMna,EAAM5B,GAAZ,YAAkBsC,EAAStC,IACjCic,EAAgBJ,EACpBJ,GAAenZ,EAAStC,GAAI6b,EAAWI,eACvC,KACIT,EAAeS,EAAgBA,EAAcjD,qBAAuB,EACtEiD,IACFA,EAAa,OAAaJ,EAAWtY,OACrC0Y,EAAa,YAAkBJ,EAAWnD,aAE5CiD,EAAMrc,KAAK,CACTU,GAAI+b,EACJ1a,KAAMiB,EAASjB,KACfyX,QAAS,WACTtV,MAAOyY,IAETL,EAAMtc,KAAK,CACToU,OAAQ9R,EAAM5B,GACdmL,OAAQ4Q,EACRP,kBAKR,MAAO,CAAEG,QAAOC,UAGZM,G,oDACJ,WAAY3T,GAAQ,IAAD,8BACjB,cAAMA,IACwBA,MAAtB9G,EAFS,EAETA,MAAO+B,EAFE,EAEFA,MACToB,EAAO8W,GAAeja,EAAO+B,GAHlB,OAIjB,EAAK9B,MAAQ,CACXkD,QALe,E,iEAQE,IAAD,OACZ5B,EAAOrC,KACb0I,KAAKd,MAAMhK,aAAayE,GACxB5C,QAAQC,IAAIgJ,KAAK8S,SACb9S,KAAKd,MAAMnE,eACbiF,KAAK8S,QAAUC,aAAY,WACzB,EAAK7T,MAAMhK,aAAayE,KACvB,Q,gDAImBqS,GACxB,IAAMrS,EAAOrC,KACbP,QAAQC,IAAIgJ,KAAK8S,SAFiB,IAG1B1a,EAAiB4T,EAAjB5T,MAAO+B,EAAU6R,EAAV7R,MACToB,EAAO8W,GAAeja,EAAO+B,GACnC6F,KAAK6H,SAAS,CAAEtM,SACZyQ,EAASjR,aACNiF,KAAK8S,UACR9G,EAAS9W,aAAayE,GACtBqG,KAAK8S,QAAUC,aAAY,WACzB/G,EAAS9W,aAAayE,KACrB,MAEIqG,KAAK8S,SACdE,cAAchT,KAAK8S,W,6CAKrBE,cAAchT,KAAK8S,W,+BAGX,IACAvX,EAASyE,KAAK3H,MAAdkD,KACR,OAAKA,GACLxE,QAAQC,IAAIuE,GAEV,kBAAC,SAAD,CACE5E,GAAG,WACH4E,KAAMA,EACN0X,OAAQ/C,MANM,8C,GA5CErB,IAAMpM,WCxMfoQ,GD0QAnQ,aAVU,SAAC,GAAD,MAAqC,CAC5DtK,MADuB,EAAGA,MAE1B+B,MAFuB,EAAUA,MAGjCY,aAHuB,EAAiBA,iBAMf,SAAC4H,GAAD,MAAe,CACxCzN,aAAc,SAACyE,GAAD,OAAUgJ,EAASzN,EAAayE,QAGjC+I,CAA8CmQ,I,UE1Q9CK,GCEI,SAAC,GAAD,IACjBC,EADiB,EACjBA,KACAC,EAFiB,EAEjBA,YACAC,EAHiB,EAGjBA,cACAC,EAJiB,EAIjBA,WACAC,EALiB,EAKjBA,aALiB,OAOjB,kBAAC,KAAD,CACEC,WAAW,aACX/N,WAAY0N,EACZzN,WAAY,SAACC,GAAD,OACV,kBAAC,KAAK1E,KAAN,CACEwS,QAAS,CACP,kBAAC,KAAD,CACE9d,IAAI,YACJiQ,KAAK,QACL1E,QAAS,kBAAMkS,EAAYzN,KAH7B,QAOA,kBAAC,KAAD,CACEhQ,IAAI,cACJiQ,KAAK,QACL1E,QAAS,kBAAMmS,EAAc1N,IAC7BpM,KAAK,UAJP,UAQA,kBAAC,KAAD,CACE5D,IAAI,cACJsM,SAAU,kBAAMsR,EAAa5N,IAC7BX,gBAAiB,SACjBC,kBAAmB,UACnBF,QAASY,EAAKhN,WAIlB,kBAAC,KAAD,CAAU+a,QAAM,EAAC3S,OAAO,EAAO4S,QAAShO,EAAKgO,SAC3C,kBAAC,KAAK1S,KAAK2S,KAAX,CACEF,OAAQ,kBAAC,KAAD,KAASJ,GACjBvS,MACE,0BAAMG,QAAS,kBAAMkS,EAAYzN,IAAOlF,MAAO,CAACoT,OAAO,YACpDlO,EAAK3N,KAAO2N,EAAK3N,KAAO2N,EAAKhP,IAGlCmd,YAAW,cAASnO,EAAKhP,IAAd,OACTgP,EAAK3N,KAAL,kBAAuB2N,EAAK3N,MAAS,GAD5B,uBAEE2N,EAAKhN,gB,UCxCxBob,GAAY,SAAC,GAAD,IAChBxb,EADgB,EAChBA,MADgB,IAEhBkb,QACE5e,EAHc,EAGdA,UACAC,EAJc,EAIdA,YACAtB,EALc,EAKdA,YACAuB,EANc,EAMdA,kBACAC,EAPc,EAOdA,aACAgf,EARc,EAQdA,aACAngB,EATc,EASdA,mBACAoB,EAVc,EAUdA,eACAgf,EAXc,EAWdA,eACAngB,EAZc,EAYdA,qBAZc,OAgBhB,kBAAC,GAAD,CAAciN,MAAK,gBAAWxI,EAAM5B,KAClC,kBAAC,KAAKsK,KAAN,CACEwS,QAAS,CACP,kBAAC,KAAD,CACE9d,IAAI,aACJiQ,KAAK,QACL1E,QAAS,WACPpM,EAAYyD,GACZ1D,EAAU,gBALd,QAUA,kBAAC,KAAD,CACEc,IAAI,eACJiQ,KAAK,QACL1E,QAAS,WACP1N,EAAY+E,EAAM5B,KAEpB4C,KAAK,UANP,UAUA,kBAAC,KAAD,CACE5D,IAAI,eACJsM,SAAU,SAAA0B,GACR5O,EAAkBwD,EAAM5B,KAE1BqO,gBAAiB,SACjBC,kBAAmB,UACnBF,QAASxM,EAAMI,WAInB,kBAAC,KAAKsI,KAAK2S,KAAX,CACEF,OACE,kBAAC,KAAD,KACE,kBAAC5D,GAAA,EAAD,OAGJ/O,MACE,0BACEN,MAAO,CAACoT,OAAO,WACf3S,QAAS,WACPpM,EAAYyD,GACZ1D,EAAU,gBAGX0D,EAAMP,KAAOO,EAAMP,KAAOO,EAAM5B,IAGrCmd,YAAW,cAASvb,EAAM5B,IAAf,OACT4B,EAAMP,KAAN,kBAAwBO,EAAMP,MAAS,GAD9B,uBAEEO,EAAMI,WAGvB,kBAAC,KAAD,CACM4H,UAAU,mBACVQ,MAAM,aACNmT,SAAQ,oBAAe3b,EAAM+O,YAEnC,oCAAS,gCAAS/O,EAAMkP,WAAWR,OACnC,oCAAS,gCAAS1O,EAAMkP,WAAWP,OAClC3O,EAAMS,SACL,kBAAC,IAAMoN,SAAP,KACE,kBAAC,KAAD,CACE7F,UAAU,mBACVQ,MAAM,UACNmT,SAAQ,iBAAY3b,EAAMS,QAAQtD,UAEpC,kBAAC,GAAD,CACEyd,KAAM5a,EAAMS,QACZoa,YAAa,SAACva,GACZ7D,EAAa6D,GACbhE,EAAU,gBAEZwe,cAAe,SAACxa,GACdmb,EAAanb,EAAOlC,GAAI4B,EAAM5B,KAEhC4c,aAAgB,SAAC1a,GACfhF,EAAmBgF,EAAOlC,GAAI4B,EAAM5B,KAEtC2c,WAAY,kBAACvD,GAAA,EAAD,SAIjBxX,EAAMY,WACL,kBAAC,IAAMiN,SAAP,KACE,kBAAC,KAAD,CACE7F,UAAU,mBACVQ,MAAM,YACNmT,SAAQ,iBAAY3b,EAAMY,UAAUzD,UAEtC,kBAAC,GAAD,CACEyd,KAAM5a,EAAMY,UACZia,YAAa,SAACna,GACZhE,EAAegE,GACfpE,EAAU,kBAEZwe,cAAe,SAACpa,GACdgb,EAAehb,EAAStC,GAAI4B,EAAM5B,KAEpC4c,aAAgB,SAACta,GACfnF,EAAqBmF,EAAStC,GAAI4B,EAAM5B,KAE1C2c,WAAY,kBAACtD,GAAA,EAAD,WClIPmE,GDyII,SAAC,GAAD,IACjB3b,EADiB,EACjBA,OACAib,EAFiB,EAEjBA,QAFiB,OAIjB,kBAAC,KAAD,CACED,WAAW,aACX/N,WAAYjN,EACZkN,WAAY,SAACC,GAAD,OACV,kBAAC,GAAD,CACEpN,MAAOoN,EACP8N,QAASA,QE5IT1N,I,OAAcnH,KAAdmH,WCPOqO,GDSE,SAAC,GAAD,QACfhc,MAASY,EADM,EACNA,QAASG,EADH,EACGA,UAAWX,EADd,EACcA,OAAQR,EADtB,EACsBA,KACrCqc,EAFe,EAEfA,UAFe,IAGfZ,QACE5e,EAJa,EAIbA,UACAC,EALa,EAKbA,YACAtB,EANa,EAMbA,YACAuB,EAPa,EAObA,kBACAC,EARa,EAQbA,aACAgf,EATa,EASbA,aACAngB,EAVa,EAUbA,mBACAoB,EAXa,EAWbA,eACAgf,EAZa,EAYbA,eACAngB,EAba,EAabA,qBACAR,EAda,EAcbA,gBAda,OAiBf,6BACE,kBAAC,GAAD,CAAcyN,MAAM,WAAW4F,QAAQ,GACrC,kBAAC,GAAD,CACEV,SAAU,CACRhE,SAAU,SAAC3J,GAAD,OAAahF,EAAgBgF,MAGxCN,GAEH,uCACQ,gCAASqc,KAGlB7b,GACC,kBAAC,GAAD,CAAcuI,MAAK,kBAAavI,EAAO9C,OAApB,KAA+BiR,QAAQ,GACxD,kBAAC,GAAD,CACEnO,OAAQA,EACRib,QAAS,CACP5e,YACAC,cACAtB,cACAuB,oBACAC,eACAgf,eACAngB,qBACAoB,iBACAgf,iBACAngB,2BAKPkF,GACC,kBAAC,GAAD,CAAc+H,MAAK,wBAAmB/H,EAAQtD,OAA3B,KAAsCiR,QAAQ,GAC/D,kBAAC,GAAD,CACEwM,KAAMna,EACNoa,YAAa,SAACva,GACZ7D,EAAa6D,GACbhE,EAAU,gBAEZwe,cAAe,SAACxa,GACdmb,EAAanb,EAAOlC,GAAI,OAE1B4c,aAAc,SAAC1a,GACbhF,EAAmBgF,EAAOlC,GAAI,OAEhC2c,WAAY,kBAACvD,GAAA,EAAD,SAIjB5W,GACC,kBAAC,GAAD,CACE4H,MAAK,0BAAqB5H,EAAUzD,OAA/B,KACLiR,QAAQ,GAER,kBAAC,GAAD,CACEwM,KAAMha,EACNia,YAAa,SAACna,GACZhE,EAAegE,GACfpE,EAAU,kBAEZwe,cAAe,SAACpa,GACdgb,EAAehb,EAAStC,GAAI,OAE9B4c,aAAc,SAACta,GACbnF,EAAqBmF,EAAStC,GAAI,OAEpC2c,WAAY,kBAACtD,GAAA,EAAD,W,oBEzFdsE,I,OAAU5V,KAAV4V,OCHOC,GDIC,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYnP,EAAf,EAAeA,MAAOoP,EAAtB,EAAsBA,UAAW7T,EAAjC,EAAiCA,MAAjC,OACd,kBAAC0T,GAAD,CAAO/T,UAAU,wBAAwBmU,WAAW,KAAKC,eAAe,KACtE,kBAAC,KAAD,CACE9T,KAAK,SACLD,MAAOA,GAAgB,QACvBH,MACEgU,EACI,CAAEpE,OAAQ,OAAQuE,YAAa,GAC/B,CAAEvE,OAAQ,OAAQwE,WAAY,IAEpCC,oBAAqB,CAAC,GAAD,OAAIN,IACzBO,gBAAiB,CAAC,MAAD,OAAOP,KAEvBnP,EAAMvB,KAAI,SAACkR,GAAD,OACTA,EAAE9Y,OACA,kBAAC,KAAK+E,KAAN,CAAWtL,IAAKqf,EAAErf,IAAKuL,QAAS8T,EAAE9Y,QAC/B8Y,EAAEnF,KACFmF,EAAEjI,MAEHiI,EAAElV,KACJ,kBAAC,KAAKmB,KAAN,CAAWtL,IAAKqf,EAAErf,KAChB,uBAAGmK,KAAMkV,EAAElV,MACRkV,EAAEnF,KACFmF,EAAEjI,OAIP,kBAAC,KAAK9L,KAAN,CAAWtL,IAAKqf,EAAErf,KACfqf,EAAEnF,KACFmF,EAAEjI,YEvBTkI,G,2KACM,IACApgB,EAAcmL,KAAKd,MAAnBrK,UAEFqgB,EAAY,CAChB,CACEvf,IAAK,EACLoX,KAAM,QACN7Q,OAAQ,kBAAMrH,EAAU,eACxBgb,KAAM,kBAACC,GAAA,EAAD,OAER,CACEna,IAAK,EACLoX,KAAM,SACN7Q,OAAQ,kBAAMrH,EAAU,gBACxBgb,KAAM,kBAACE,GAAA,EAAD,OAER,CACEpa,IAAK,EACLoX,KAAM,WACN7Q,OAAQ,kBAAMrH,EAAU,kBACxBgb,KAAM,kBAACG,GAAA,EAAD,QAWV,OAAO,kBAAC,GAAD,CAASyE,WAAW,EAAMpP,MAAO6P,EAAWtU,MAAM,a,GAhCrC6B,aAwCTC,eAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtC9N,UAAW,SAAAsgB,GAAG,OAAIxS,EAAS9N,EAAUsgB,QAGxBzS,CAAkCuS,I,8BCSlCG,I,kLAhDX,IAAMF,EAAY,CAChB,CACEvf,IAAK,EACLoX,KAAM,YACNjN,KAAM,aACN+P,KAAM,kBAACwF,GAAA,EAAD,OAER,CACE1f,IAAK,EACLoX,KAAM,YACNjN,KAAM,aACN+P,KAAM,kBAACyF,GAAA,EAAD,OAER,CACE3f,IAAK,EACLoX,KAAM,aACNjN,KAAM,cACN+P,KAAM,kBAAC0F,GAAA,EAAD,QAGNC,EAAO,EACLC,EAAW/d,GAAS,QAC1B,GAAI+d,EACF,OAAQA,GACN,IAAK,OACHD,EAAO,EACP,MACF,IAAK,OACHA,EAAO,EACP,MACF,IAAK,QACHA,EAAO,EAMb,OACE,kBAAC,GAAD,CACEjV,UAAU,cACVkU,WAAW,EACXpP,MAAO6P,EACPV,WAAYgB,EACZ5U,MAAM,c,GA7CW6B,cCFjBiT,I,OAAYhX,KAAZgX,SAEFC,G,oDACJ,WAAYzW,GAAQ,IAAD,uBACjB,cAAMA,GADW,IAEVnE,EAAgBmE,EAAhBnE,aACH6a,EAAgB,KACdjc,EAAOrC,KAJI,OAKbyD,IACF6a,EAAa,UACVjc,EAAsB,iBAAf,aADG,mCAEcoB,EAAa3C,MAF3B,2BAEmD,IAAIhB,KAClE2D,EAAasU,eAGjB,EAAKhX,MAAQ,CACXsB,OACAkc,UAAWte,OAAOC,SAASC,SAAS5B,QAAQ,UAAY,EACxD+f,iBAfe,E,uEAmBO5J,GAAW,IAC5BjR,EAAgBiR,EAAhBjR,aACH6a,EAAgB,KAChB7a,IACF6a,EAAa,UACV5V,KAAK3H,MAAMsB,KAAsB,iBAAf,aADR,mCAEcoB,EAAa3C,MAF3B,2BAEmD,IAAIhB,KAClE2D,EAAasU,eAGjBrP,KAAK6H,SAAS,CAAC+N,oB,0CAGI,IAAD,OAClB5V,KAAKd,MAAM7K,oBAAoB2L,KAAK3H,MAAMsB,MAC1CoZ,aAAY,WACV,EAAK7T,MAAM7K,oBAAoB,EAAKgE,MAAMsB,QACzC,O,+BAGK,IAAD,EAC6BqG,KAAK3H,MAAjCwd,EADD,EACCA,UAAWD,EADZ,EACYA,cADZ,EAE2C5V,KAAKd,MAA/CvE,EAFD,EAECA,WAAYF,EAFb,EAEaA,OAAStH,EAFtB,EAEsBA,kBAE7B,OACE,kBAAC,KAAD,MACI0iB,GAAa,kBAAC,GAAD,MAEdpb,GACCqb,KAAarb,EAAOlB,MAAM,CACxBC,QAASiB,EAAOlB,KAAKyD,cACrB8W,YAC4B,kBAAnBrZ,EAAOjB,QACVnD,KAAKE,UAAUkE,EAAOjB,SACtBiB,EAAOjB,QACbuc,QAAS,kBAAM5iB,OAGnB,kBAAC,KAAD,CAAQsN,MAAO,CAAEuV,QAAS,gBACxB,kBAACN,GAAD,KACGE,GACC,kBAAC,KAAD,CACEpc,QAASoc,EACTrc,KAAK,OACLkH,MAAO,CAAEwV,aAAc,OAAQC,UAAW,QAC1CC,UAAQ,IAGXxb,EAAa,kBAAC,KAAD,CAAMyb,IAAI,eAAkBpW,KAAKd,MAAMoE,YAGvDuS,GAAa,kBAAC,GAAD,W,GAvEEpT,aAwFVC,gBAXU,SAAC,GAAD,IAAG/H,EAAH,EAAGA,WAAH,MAA2C,CAClEF,OADuB,EAAeA,OAEtCE,aACAI,aAHuB,EAAuBA,iBAMrB,SAAC4H,GAAD,MAAe,CACxCtO,oBAAqB,SAACsF,GAAD,OAAUgJ,EAAStO,EAAoBsF,KAC5DxG,kBAAmB,kBAAMwP,EAASxP,SAGrBuP,CAA8CiT,ICnEvDU,G,oDACJ,WAAYnX,GAAQ,IAAD,+BACjB,cAAMA,IACD7G,MAAQ,CACXie,UAAWpX,EAAM9G,MACjBuB,MAAM,GAER,EAAK4c,cAAgB,EAAKA,cAAcjJ,KAAnB,iBANJ,E,iEAUjB,IAAM3T,EAAOrC,KACb0I,KAAKd,MAAMsX,SAAS7c,GACpBqG,KAAK6H,SAAS,CAAElO,W,gDAGQqS,GACxBhM,KAAK6H,SAAS,CACZyO,UAAWtK,EAAS5T,U,oCAIV6G,GACZe,KAAK6H,SAAS,CACZyO,UAAWrX,M,+BAIL,IAAD,OACCtF,EAASqG,KAAK3H,MAAdsB,KADD,EAiBHqG,KAAKd,MAdP9G,EAHK,EAGLA,MACAqe,EAJK,EAILA,UACA5hB,EALK,EAKLA,UACAC,EANK,EAMLA,YACAtB,EAPK,EAOLA,YACAuB,EARK,EAQLA,kBACAC,EATK,EASLA,aACAgf,EAVK,EAULA,aACAngB,EAXK,EAWLA,mBACAoB,EAZK,EAYLA,eACAgf,EAbK,EAaLA,eACAngB,EAdK,EAcLA,qBACA+F,EAfK,EAeLA,OACAvG,EAhBK,EAgBLA,gBAGEmiB,EAAW/d,GAAS,QACnB+d,IAAUA,EAAW,QAC1B,IAAI7I,EAAO,KA0BX,OAxBEA,EADe,SAAb6I,EACK,kBAAC,GAAD,CAAUlgB,MAAO6C,EAAO6J,SAAUjC,KAAKuW,gBACxB,UAAbd,EACF,kBAAC,GAAD,MAGL,kBAAC,GAAD,CACErd,MAAOA,EACPic,UAAY1a,EAAsB,iBAAf,aACnB8Z,QAAS,CACP5e,YACAC,cACAtB,cACAuB,oBACAC,eACAgf,eACAngB,qBACAoB,iBACAgf,iBACAngB,uBACAR,qBAMN,kBAAC,GAAD,KACGsZ,EACD,kBAAC,KAAD,CACErT,KAAK,UACL2H,QAAS,kBAAMuV,EAAU9c,EAAM,EAAKtB,MAAMie,YAC1C7V,MAAO,CAAEyV,UAAW,SAHtB,QAOY,eAAXrc,GAA2B,kBAAC,GAAD,OAC1BF,GAAmB,kBAAXE,GAA8B,kBAAC,GAAD,OAC3B,gBAAXA,GAAwC,kBAAXA,GAA8BF,IAC3D,kBAAC,GAAD,W,GAxFc8I,aA6HTC,gBA9BU,SAAC,GAAD,MAA6B,CACpDtK,MADuB,EAAGA,MAE1ByB,OAFuB,EAAUgB,YAEbhB,WAGK,SAAC8I,GAAD,MAAe,CACxC6T,SAAU,SAAC7c,GACTgJ,EAASvP,EAAauG,KAExB8c,UAAW,SAAC9c,EAAMsF,GAChB0D,EAAStP,EAAS4L,IAClB0D,EAAS5O,EAAY4F,KAEvB9E,UAAW,SAACgF,GAAD,OAAY8I,EAAS9N,EAAUgF,KAC1CvG,gBAAiB,SAACgF,GAAD,OAAaqK,EAASrP,EAAgBgF,KACvDxD,YAAa,SAACyD,GAAD,OAAWoK,EAAS7N,EAAYyD,KAC7C/E,YAAa,SAACkF,GAAD,OAAaiK,EAASnP,EAAYkF,KAC/C3D,kBAAmB,SAAC2D,GAAD,OAAaiK,EAAS5N,EAAkB2D,KAC3D1D,aAAc,SAAC6D,GAAD,OAAY8J,EAAS3N,EAAa6D,KAChDmb,aAAc,SAAC5a,EAAUV,GAAX,OACZiK,EAAShP,EAAuB,CAAEyF,WAAUV,cAC9C7E,mBAAoB,SAACuF,EAAUV,GAAX,OAClBiK,EAAS9O,EAAmB,CAAEuF,WAAUV,cAC1CzD,eAAgB,SAACgE,GAAD,OAAc0J,EAAS1N,EAAegE,KACtDgb,eAAgB,SAAC3a,EAAYZ,GAAb,OACdiK,EAAS/O,EAAyB,CAAE0F,aAAYZ,cAClD5E,qBAAsB,SAACwF,EAAYZ,GAAb,OACpBiK,EAAS7O,EAAqB,CAAEwF,aAAYZ,iBAGjCgK,CAA8C2T,I,UCpJvDK,G,oDACJ,WAAYxX,GAAQ,IAAD,+BACjB,cAAMA,IACD7G,MAAQ,CACXqB,SAAUwF,EAAMxF,UAHD,E,iEAQjBsG,KAAKd,MAAMsX,SAASlf,Q,gDAGI0U,GACxBhM,KAAK6H,SAAS,CAAEnO,SAAUsS,EAAStS,a,+BAG3B,IACAid,EAAkB3W,KAAKd,MAAvByX,cACAjd,EAAasG,KAAK3H,MAAlBqB,SACFC,EAAOrC,KACb,OACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAYiJ,UAAU,mBAAmBQ,MAAM,cAC/C,kBAAC,KAAD,CACE8E,UAAQ,EACRJ,WAAY/L,EACZgM,WAAY,SAACC,GAAD,OACV,kBAAC,KAAK1E,KAAN,CACEwS,QAAS,CACP,kBAAC,KAAD,CACE9d,IAAI,qBACJuL,QAAS,kBAAMyV,EAAchd,EAAMgM,IACnCpM,KAAK,UAHP,YASF,kBAAC,KAAD,CAAUma,QAAM,EAAC3S,OAAO,EAAO4S,QAAShO,EAAKgO,SAC3C,kBAAC,KAAK1S,KAAK2S,KAAX,CACEF,OACE,kBAAC,KAAD,KACE,kBAACkD,GAAA,EAAD,OAGJ7V,MACE,uBAAGjB,KAAI,UAAKnG,EAAO,kBAAoB,GAAhC,iBAA2CgM,IAC/CA,GAGLmO,YAAW,sBAAiB7c,GAC1B0O,gB,GAnDGlD,aA4ERC,gBAbU,SAAC,GAAD,MAAe,CACtChJ,SADuB,EAAGD,KACXC,aAGU,SAACiJ,GAAD,MAAe,CACxCgU,cAAe,SAAChd,EAAMC,GACpB+I,EAAShO,EAAqB,CAAEgF,OAAMC,cAExC4c,SAAU,SAAC7c,GACTgJ,EAASnO,EAAgBmF,QAId+I,CAA8CgU,IC9ErD/X,GAASC,KAATD,KAEFkY,GAAU,SAAC,GAAD,IAAGtd,EAAH,EAAGA,KAAMud,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAQvd,EAAvB,EAAuBA,QAAvB,OACd,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAK6G,KAAM,GACT,kBAAC,GAAD,CAAM9G,KAAMA,GAAOud,IAErB,kBAAC,KAAD,CAAKzW,KAAM,GACT,kBAAC,GAAD,CAAM9G,KAAMA,GAAOwd,IAErB,kBAAC,KAAD,CAAK1W,KAAM,IACT,kBAAC,GAAD,CAAM9G,KAAMA,GAAOC,MAKnBkd,G,oDACJ,WAAYxX,GAAQ,IAAD,+BACjB,cAAMA,IACD7G,MAAQ,CACXuB,QAAS,KACTD,MAAM,GAJS,E,iEAOE,IAAD,OACZC,EpE+Fa,SAACuB,GACtB,IAAMrF,EAAQqF,EAAI1F,MAAM,KACxB,OAAOK,EAAMA,EAAMJ,OAAS,GoEjGVshB,CAAezf,OAAOC,SAASC,UACzCkC,EAAOrC,KACb0I,KAAK6H,SAAS,CAAEjO,QAASqd,mBAAmBrd,KAC5CoG,KAAKd,MAAM3K,YAAYoF,EAAMC,GAC7BmZ,aAAY,WACV,EAAK7T,MAAM3K,YAAYoF,EAAMC,KAC5B,O,+BAGK,IACAA,EAAYoG,KAAK3H,MAAjBuB,QACAH,EAASuG,KAAKd,MAAdzF,KACR,OACE,kBAAC,GAAD,KACE,kBAAC,KAAD,CAAY8G,UAAU,mBAAmBQ,MAAOnH,IAChD,kBAAC,GAAD,CACEjE,KAAM,EACN4D,KAAM,UACNud,KAAM,OACNC,OAAQ,SACRvd,QAAS,YAETC,EAGAA,EAAKhE,MAAM,MAAMqO,KAAI,SAAC9M,EAAKjB,GACzB,IAAMD,EAAQkB,EAAIvB,MAAM,KACxB,GAAIK,EAAMJ,OAAS,EAEjB,OADAqB,QAAQmgB,KAAK,6BAA8BlgB,GACpC,KAET,IAAMuC,EAAoB,UAAbzD,EAAM,GAAiB,YAAc,SAC5CghB,EAAO,IAAI1f,KAAKtB,EAAM,IACtBqB,EAAU,UAAM2f,EAAKK,WAAX,YAAyBL,EAAKM,aAA9B,YAA8CN,EAAKO,aAAnD,YAAmEP,EAAKQ,SAAxE,YAAoFR,EAAKS,WAAzF,YAAuGT,EAAK9T,eACtH+T,EAASjhB,EAAM,GAAGE,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAChDwD,EAAUxC,EAAIvB,MAAMK,EAAM,IAAI,GACpC,OACE,kBAAC,GAAD,CACEH,IAAKI,EACLwD,KAAMA,EACNud,KAAM3f,EACN4f,OAAQA,EACRvd,QAASA,OAnBf,yC,GAhCaiJ,aAsERC,gBATU,SAAC,GAAD,IAAGjJ,EAAH,EAAGA,KAAH,MAAe,CACtCA,KAAMA,EAAKA,KACXG,QAASH,EAAKG,YAGW,SAAC+I,GAAD,MAAe,CACxCpO,YAAa,SAACoF,EAAMC,GAAP,OAAmB+I,EAASpO,EAAY,CAAEoF,OAAMC,iBAGhD8I,CAA8CgU,IChD9Cc,OAjCf,WACE,OACE,kBAAC,KAAD,KACE,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAQjX,UAAU,SAASE,MAAO,CAAE4P,OAAQ,SAC1C,kBAAC,GAAD,MACA,kBAAC,KAAD,KACE,kBAAC,KAAD,CAAO/a,KAAK,iCACV,kBAACmiB,GAAD,OAEF,kBAAC,KAAD,CAAOniB,KAAK,wBACV,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,mBACV,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,kBACV,kBAACmiB,GAAD,OAEF,kBAAC,KAAD,CAAOniB,KAAK,SACV,kBAAC,GAAD,OAEF,kBAAC,KAAD,CAAOA,KAAK,KACV,kBAAC,GAAD,QAGJ,kBAAC,GAAD,UC1BUoiB,QACW,cAA7BngB,OAAOC,SAASmgB,UAEe,UAA7BpgB,OAAOC,SAASmgB,UAEhBpgB,OAAOC,SAASmgB,SAASC,MACvB,2D,WCVA5Z,GAAQH,KACdga,IAASC,OACP,kBAAC,IAAD,CAAU9Z,MAAOA,IACf,kBAAC,GAAD,OAEF2B,SAASyS,eAAe,SDsHpB,kBAAmB2F,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAzf,GACL7B,QAAQ6B,MAAMA,EAAMY,c","file":"static/js/main.ff46458a.chunk.js","sourcesContent":["module.exports = '0.6.1';","import {createAction } from 'redux-act';\n// Notification\nexport const setNotification = createAction('SET_NOTIFICATION');\nexport const resetNotification = createAction('RESET_NOTIFICATION');\n\n// Model\nexport const requestModel = createAction('REQUEST_MODEL');\nexport const setModel = createAction('SET_MODEL');\n// Model - modification\nexport const changeModelName = createAction('CHANGE_MODEL_NAME');\nexport const addThing = createAction('ADD_THING');\nexport const deleteThing = createAction('DELETE_THING');\nexport const addSimulationSensor = createAction('ADD_SIMULATION_SENSOR');\nexport const addSimulationActuator = createAction('ADD_SIMULATION_ACTUATOR');\nexport const deleteSimulationSensor = createAction('DELETE_SIMULATION_SENSOR');\nexport const deleteSimulationActuator = createAction('DELETE_SIMULATION_ACTUATOR');\nexport const changeStatusSensor = createAction('CHANGE_STATUS_SENSOR');\nexport const changeStatusActuator = createAction('CHANGE_STATUS_ACTUATOR');\n// Save Model to Server\nexport const uploadModel = createAction('UPLOAD_MODEL');\nexport const uploadModelOK = createAction('UPLOAD_MODEL_OK');\n\n// Control the Simulation\nexport const sendDeployStart = createAction('SEND_DEPLOY_START');\nexport const deployStartOK = createAction('DEPLOY_START_OK');\nexport const sendDeployStop = createAction('SEND_DEPLOY_STOP');\nexport const deployStopOK = createAction('DEPLOY_STOP_OK');\nexport const requestDeployStatus = createAction('REQUEST_DEPLOY_STATUS');\nexport const setDeployStatus = createAction('SET_DEPLOY_STATUS');\n\n// Control the logs\nexport const requestLogs = createAction('REQUEST_LOGS');\nexport const requestLogFiles = createAction('REQUEST_LOGFILES');\nexport const requestLogsOK = createAction('REQUEST_LOGS_OK');\nexport const requestLogFilesOK = createAction('REQUEST_LOGFILES_OK');\nexport const requestDeleteLogFile = createAction('REQUEST_DELETE_LOG_FILE');\n\n// Import Model\nexport const resetModel = createAction('RESET_MODEL');\n\n// editing forms\nexport const showModal = createAction('SHOW_MODAL');\nexport const selectThing = createAction('SELECT_THING');\nexport const changeStatusThing = createAction('CHANGE_STATUS_THING');\nexport const selectSensor = createAction('SELECT_SENSOR');\nexport const selectActuator = createAction('SELECT_ACTUATOR');\nexport const selectDataStorage = createAction('SELECT_DATA_STORAGE');\n\n\n// Statistics\nexport const requestStats = createAction('REQUEST_STATS');\nexport const requestStatsOK = createAction('REQUEST_STATS_OK');","/**\n *\n * @param {Object} obj Object to be updated\n * @param {String} path Path to be updated\n * @param {Value} value the new value to be updated\n */\nconst updateObjectByPath = (obj, path, value) => {\n  let stack = path.split(\".\");\n  while (stack.length > 1) {\n    // Not at the end of the path\n    let key = stack.shift();\n    if (key.indexOf(\"[\") > 0) {\n      // Contains array index\n      const array = key.split(\"[\");\n      key = array[0];\n      let index = array[1].replace(\"]\", \"\");\n      if (!obj[key]) {\n        // Create a new array if it does not exist\n        obj[key] = [];\n      }\n      if (obj[key].length === 0) {\n        // Empty array\n        index = 0;\n      } else if (obj[key].length <= index || index < 0) {\n        // index out of range\n        index = obj[key].length;\n      }\n      if (!obj[key][index]) {\n        obj[key].push({});\n        // throw Error(`ERROR: Invalid data path: ${path} in object ${JSON.stringify(obj)}`);\n      }\n      obj = obj[key][index];\n    } else {\n      if (!obj[key]) {\n        // Create a new path if it does not exist\n        obj[key] = {};\n      }\n      obj = obj[key];\n    }\n  }\n  let lastKey = stack.shift();\n  // At the end of the path\n  if (lastKey.indexOf(\"[\") > 0) {\n    // Contains array index\n    const array = lastKey.split(\"[\");\n    lastKey = array[0];\n    let index = array[1].replace(\"]\", \"\");\n    if (value === null) {\n      // Remove an element\n      if (obj[lastKey] && obj[lastKey][index]) {\n        obj[lastKey].splice(index, 1);\n      }\n    } else {\n      // Add an element\n      if (!obj[lastKey]) {\n        // Create a new array if it does not exist\n        obj[lastKey] = [];\n      }\n      if (obj[lastKey].length === 0) {\n        // Empty array\n        index = 0;\n      } else if (obj[lastKey].length <= index || index < 0) {\n        // index out of range\n        index = obj[lastKey].length;\n      }\n      if (!obj[lastKey][index]) {\n        obj[lastKey].push(value);\n        // throw Error(`ERROR: Invalid data path: ${path} in object ${JSON.stringify(obj)}`);\n      } else {\n        obj[lastKey][index] = value;\n      }\n    }\n  } else {\n    // Not contains array index\n    obj[lastKey] = value;\n  }\n};\n\nconst deepCloneObject = (obj) => JSON.parse(JSON.stringify(obj));\n\n/**\n * Add new element into array\n * @param {Array} array The array to be added\n * @param {Object} newElement New element to be updated or added\n */\nconst addNewElementToArray = (array, newElement) => {\n  let found = false;\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    if (element.id === newElement.id) {\n      // Found the element - update\n      array[index] = { ...newElement };\n      // array.splice(index, 1);\n      // array.push(newElement);\n      found = true;\n      break;\n    }\n  }\n  if (!found) {\n    array.push(newElement);\n  }\n  return array;\n};\n\nconst removeElementFromArray = (array, elmId) => {\n  let isDeleted = false;\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    if (element.id === elmId) {\n      array.splice(index, 1);\n      isDeleted = true;\n      break;\n    }\n  }\n  if (!isDeleted) {\n    console.log(`[ERROR] Cannot find the element: ${elmId}`);\n    return null;\n  }\n  return array;\n};\n\nconst getCreatedTimeFromFileName = (fileName) => {\n  const array = fileName.split(\"_\");\n  let timeString = array[array.length - 1].replace(\".log\", \"\");\n  return new Date(Number(timeString));\n};\n\nconst getLastURLPath = (url) => {\n  const array = url.split(\"/\");\n  return array[array.length - 1];\n};\n\nconst isDataGenerator = () => {\n  return window.location.pathname.indexOf(\"data-generator\") === 1;\n};\n\nconst getQuery = (qname) => {\n  const query = new URLSearchParams(window.location.search);\n  return query.get(qname);\n};\n\nexport {\n  getQuery,\n  isDataGenerator,\n  getLastURLPath,\n  updateObjectByPath,\n  addNewElementToArray,\n  removeElementFromArray,\n  getCreatedTimeFromFileName,\n  deepCloneObject,\n};\n","import { createReducer } from \"redux-act\";\nimport produce from \"immer\";\nimport {\n  setModel,\n  resetModel,\n  changeModelName,\n  addThing,\n  deleteThing,\n  changeStatusThing,\n  addSimulationSensor,\n  deleteSimulationSensor,\n  changeStatusSensor,\n  addSimulationActuator,\n  deleteSimulationActuator,\n  changeStatusActuator,\n} from \"../actions\";\nimport { addNewElementToArray, removeElementFromArray } from \"../utils\";\n\nconst initState = { name: \"NewModel\" };\n\nexport default createReducer(\n  {\n    [setModel]: produce((draft, model) => (draft = model)),\n    [resetModel]: state => initState,\n    // modification\n    [changeModelName]: produce((draft, newName) => {\n      draft.name = newName;\n    }),\n    [addThing]: produce((draft, thing) => {\n      if (draft.things) {\n        const newThings = addNewElementToArray(draft.things, thing);\n        draft.things = [...newThings];\n      } else {\n        draft.things = [thing];\n      }\n    }),\n    [deleteThing]: produce((draft, thingID) => {\n      const newThings = removeElementFromArray(draft.things, thingID);\n      if (newThings) draft.things = [...newThings];\n    }),\n    [changeStatusThing]: produce((draft, thingID) => {\n      for (let index = 0; index < draft.things.length; index++) {\n        if (draft.things[index].id === thingID) {\n          draft.things[index].enable = !draft.things[index].enable;\n          return;\n        };\n      }\n      console.error(`[ERROR] Cannot find the thing ${thingID}`);\n    }),\n    [addSimulationSensor]: produce((draft, { thingID, sensor }) => {\n      let foundThing = false;\n      if (draft.things) {\n        for (let index = 0; index < draft.things.length; index++) {\n          if (draft.things[index].id === thingID) {\n            foundThing = true;\n            const newSensors = addNewElementToArray(\n              draft.things[index].sensors,\n              sensor\n            );\n            draft.things[index].sensors = [...newSensors];\n            break;\n          }\n        }\n      }\n\n      if (!foundThing) {\n        if (!draft.sensors) {\n          draft.sensors = [];\n        }\n        // Add to free sensors list\n        const newSensors = addNewElementToArray(draft.sensors, sensor);\n        draft.sensors = [...newSensors];\n      } else {\n        if (draft.sensors) {\n          const newSensors = removeElementFromArray(draft.sensors, sensor.id);\n          if (newSensors) draft.sensors = [...newSensors];\n        }\n      }\n    }),\n    [addSimulationActuator]: produce((draft, { thingID, actuator }) => {\n      let foundThing = false;\n      if (draft.things) {\n        for (let index = 0; index < draft.things.length; index++) {\n          if (draft.things[index].id === thingID) {\n            foundThing = true;\n            const newActuators = addNewElementToArray(\n              draft.things[index].actuators,\n              actuator\n            );\n            draft.things[index].actuators = [...newActuators];\n            break;\n          }\n        }\n      }\n\n      if (!foundThing) {\n        if (!draft.actuators) {\n          draft.actuators = [];\n        }\n        // Add to free actuators list\n        const newActuators = addNewElementToArray(draft.actuators, actuator);\n        draft.actuators = [...newActuators];\n      } else {\n        if (draft.actuators) {\n          const newActuators = removeElementFromArray(\n            draft.actuators,\n            actuator.id\n          );\n          if (newActuators) draft.actuators = [...newActuators];\n        }\n      }\n    }),\n    [deleteSimulationSensor]: produce((draft, { sensorID, thingID }) => {\n      if (!thingID) {\n        // Remove a free sensors\n        const newSensors = removeElementFromArray(draft.sensors, sensorID);\n        if (newSensors) {\n          draft.sensors = [...newSensors];\n        }\n      } else {\n        // Remove sensors from a thing\n        let foundThing = false;\n        for (let index = 0; index < draft.things.length; index++) {\n          if (draft.things[index].id === thingID) {\n            foundThing = true;\n            const newSensors = removeElementFromArray(\n              draft.things[index].sensors,\n              sensorID\n            );\n            if (newSensors) {\n              draft.things[index].sensors = [...newSensors];\n            }\n            break;\n          }\n        }\n        if (!foundThing) {\n          console.log(`[ERROR] Cannot remove ${sensorID} from ${thingID}`);\n        }\n      }\n    }),\n    [changeStatusSensor]: produce((draft, { sensorID, thingID }) => {\n      if (!thingID) {\n        // free sensors\n        if (draft.sensors) {\n          for (let index = 0; index < draft.sensors.length; index++) {\n            if (draft.sensors[index].id === sensorID) {\n              draft.sensors[index].enable = !draft.sensors[index].enable;\n              return;\n            }\n          }\n        }\n        console.log(`[ERROR] Cannot change status of sensor ${sensorID} in ${thingID}`);\n      } else {\n        // Remove sensors from a thing\n        for (let tIndex = 0; tIndex < draft.things.length; tIndex++) {\n          if (draft.things[tIndex].id === thingID) {\n            for (let index = 0; index < draft.things[tIndex].sensors.length; index++) {\n              if (draft.things[tIndex].sensors[index].id === sensorID) {\n                draft.things[tIndex].sensors[index].enable = !draft.things[tIndex].sensors[index].enable;\n                return;\n              }\n            }\n            break;\n          }\n        }\n        console.log(`[ERROR] Cannot change status of sensor ${sensorID} in ${thingID}`);\n      }\n    }),\n    [deleteSimulationActuator]: produce((draft, { actuatorID, thingID }) => {\n      if (!thingID) {\n        // Remove a free actuators\n        const newActuators = removeElementFromArray(\n          draft.actuators,\n          actuatorID\n        );\n        if (newActuators) {\n          draft.actuators = [...newActuators];\n        }\n      } else {\n        // Remove actuators from a thing\n        let foundThing = false;\n        for (let index = 0; index < draft.things.length; index++) {\n          if (draft.things[index].id === thingID) {\n            foundThing = true;\n            const newActuators = removeElementFromArray(\n              draft.things[index].actuators,\n              actuatorID\n            );\n            if (newActuators) {\n              draft.things[index].actuators = [...newActuators];\n            }\n            break;\n          }\n        }\n        if (!foundThing) {\n          console.log(`[ERROR] Cannot remove ${actuatorID} from ${thingID}`);\n        }\n      }\n    }),[changeStatusActuator]: produce((draft, { actuatorID, thingID }) => {\n      if (!thingID) {\n        // free actuator\n        if (draft.actuators) {\n          for (let index = 0; index < draft.actuators.length; index++) {\n            if (draft.actuators[index].id === actuatorID) {\n              draft.actuators[index].enable = !draft.actuators[index].enable;\n              return;\n            }\n          }\n        }\n        console.log(`[ERROR] Cannot change status of actuator ${actuatorID} in ${thingID}`);\n      } else {\n        // Remove sensors from a thing\n        for (let tIndex = 0; tIndex < draft.things.length; tIndex++) {\n          if (draft.things[tIndex].id === thingID) {\n            for (let index = 0; index < draft.things[tIndex].actuators.length; index++) {\n              if (draft.things[tIndex].actuators[index].id === actuatorID) {\n                draft.things[tIndex].actuators[index].enable = !draft.things[tIndex].actuators[index].enable;\n                return;\n              }\n            }\n            break;\n          }\n        }\n        console.log(`[ERROR] Cannot change status of actuator ${actuatorID} in ${thingID}`);\n      }\n    })\n  },\n  initState\n);","import { createReducer } from \"redux-act\";\n\nimport {\n  uploadModelOK,\n  uploadModel,\n  requestModel,\n  sendDeployStop,\n  sendDeployStart,\n  setModel,\n  deployStopOK,\n  deployStartOK,\n  setNotification,\n  requestLogs,\n  requestLogsOK\n} from \"../actions\";\n\nconst initState = false;\n\nexport default createReducer(\n  {\n    [uploadModel]: state => true,\n    [requestModel]: state => true,\n    [sendDeployStop]: state => true,\n    [sendDeployStart]: state => true,\n    [setNotification]: state => false,\n    [setModel]: state => false,\n    [uploadModelOK]: state => false,\n    [deployStopOK]: state => false,\n    [deployStartOK]: state => false,\n    [requestLogs]: state => true,\n    [requestLogsOK]: state => false\n  },\n  initState\n);\n","import { createReducer } from \"redux-act\";\nimport {\n  setNotification,\n  resetNotification,\n  addThing,\n  deleteThing,\n  addSimulationSensor,\n  addSimulationActuator,\n  deleteSimulationSensor,\n  deleteSimulationActuator,\n} from \"../actions\";\n\nexport default createReducer(\n  {\n    [setNotification]: (state, { type, message }) => ({ type, message }),\n    [resetNotification]: state => null,\n    [addThing]: (state, thing) => ({\n      type: \"success\",\n      message: `Thing ${thing.id} has been added!`\n    }),\n    [deleteThing]: (state, thingID) => ({\n      type: \"success\",\n      message: `Thing ${thingID} has been removed!`\n    }),\n    [addSimulationSensor]: (state, {sensor, thingID}) => ({\n      type: \"success\",\n      message: `Sensor ${sensor.id} has been added ${thingID? `into Thing ${thingID}`: ''}!`\n    }),\n    [deleteSimulationSensor]: (state, {sensorID, thingID}) => ({\n      type: \"success\",\n      message: `Sensor ${sensorID} has been removed${thingID? `from Thing ${thingID}`: ''}!`\n    }),\n    [addSimulationActuator]: (state, {actuator, thingID}) => ({\n      type: \"success\",\n      message: `Actuator ${actuator.id} has been added ${thingID? `into Thing ${thingID}`: ''}!`\n    }),\n    [deleteSimulationActuator]: (state, {actuatorID, thingID}) => ({\n      type: \"success\",\n      message: `Actuator ${actuatorID} has been removed${thingID? `from Thing ${thingID}`: ''}!`\n    })\n  },\n  null\n);\n","import { createReducer } from \"redux-act\";\nimport produce from 'immer';\nimport { requestLogsOK, requestLogFilesOK, requestDeleteLogFile } from \"../actions\";\n\nconst initState = {\n  logs: null,\n  logFiles: []\n};\n\nexport default createReducer(\n  {\n    [requestLogsOK]: (state, logs) => ({...state, logs}),\n    [requestLogFilesOK]: (state, logFiles) => ({...state, logFiles}),\n    [requestDeleteLogFile]: produce((draft, {isDG, logFile}) => {\n      const index = draft.logFiles.indexOf(logFile);\n      if (index > - 1) {\n        draft.logFiles.splice(index, 1);\n      }\n    })\n  },\n  initState\n);\n","import { createReducer } from 'redux-act';\nimport { selectThing, selectSensor, selectActuator, showModal } from '../actions';\n\nconst initState = {\n  formID: null,\n  selectedThing: null,\n  selectedSensor: null,\n  selectedActuator: null,\n  dataStorage: null\n}\nexport default createReducer({\n  [showModal] : (state, formID) => ({...state, formID}),\n  [selectThing] : (state, selectedThing) => ({...state, selectedThing}),\n  [selectSensor] : (state, selectedSensor) => ({...state, selectedSensor}),\n  [selectActuator] : (state, selectedActuator) => ({...state, selectedActuator})\n}, initState);\n","import { createReducer } from 'redux-act';\nimport { setDeployStatus } from '../actions';\n\nexport default createReducer({\n  [setDeployStatus] : (state, status) => status\n}, false);\n","import { createReducer } from \"redux-act\";\nimport { requestStatsOK } from \"../actions\";\n\nconst initState = [];\n\nexport default createReducer(\n  {\n    [requestStatsOK]: (state, stats) => (stats),\n  },\n  initState\n);\n","import {\n  combineReducers\n} from 'redux';\n\nimport modelReducer from './modelReducer';\nimport requestingReducer from './requestingReducer';\nimport notificationReducer from './notificationReducer';\nimport logsReducer from './logsReducer';\nimport editingFormReducer from './editingFormReducer';\nimport deployStatusReducer from './deployStatusReducer';\nimport statsReducer from './statsReducer';\n\nconst rootReducer = combineReducers({\n  model: modelReducer,\n  stats: statsReducer,\n  logs: logsReducer,\n  notify: notificationReducer,\n  requesting: requestingReducer,\n  editingForm: editingFormReducer,\n  deployStatus: deployStatusReducer,\n});\n\nexport default rootReducer;\n","// read and pass the environment variables into reactjs application\n// const URL = `http://localhost:31057`;\nconst URL = \"\";\n\nconst requestModel = async (tool) => {\n  const url = `${URL}/api/${tool}/model`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.model;\n};\n\nconst uploadModel = async (tool, model) => {\n  const url = `${URL}/api/${tool}/model`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({model})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.model;\n};\n\nconst requestLogs = async (tool, logFile) => {\n  const url = `${URL}/api/${tool}/logs/${logFile}`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.content;\n};\n\nconst requestStats = async (tool) => {\n  const url = `${URL}/api/${tool}/stats`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.stats;\n};\n\nconst requestDeleteLogFile = async (tool, logFile) => {\n  const url = `${URL}/api/${tool}/logs/${logFile}`;\n  const response = await fetch(url, {\n    method: 'POST'\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.result;\n};\n\n\nconst requestLogFiles = async (tool) => {\n  const url = `${URL}/api/${tool}/logs`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.files;\n};\n\nconst requestStartDeploy = async (tool, model) => {\n  const url = `${URL}/api/${tool}/deploy`;\n  const response = await fetch(url,{\n    method: 'POST',\n    headers: {\n      'Content-Type':'application/json'\n    },\n    body: JSON.stringify({model})\n  });\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.deployStatus;\n};\n\nconst requestStopDeploy = async (tool) => {\n  const url = `${URL}/api/${tool}/stop`;\n  const response = await fetch(url);\n  const data = await response.json();\n  if (data.error) {\n    throw data.error;\n  }\n  return data.deployStatus;\n};\n\nconst requestDeployStatus = async (tool) => {\n  const url = `${URL}/api/${tool}/status`;\n  const response = await fetch(url);\n  const status = await response.json();\n  if (status.error) {\n    throw status.error;\n  }\n  return status.deployStatus;\n};\n\nexport {\n  requestModel,\n  uploadModel,\n  requestStartDeploy,\n  requestStopDeploy,\n  requestDeployStatus,\n  requestLogs,\n  requestLogFiles,\n  requestDeleteLogFile,\n  requestStats,\n};\n","// watcher saga -> actions -> worker saga\nimport {\n  call,\n  put,\n  takeEvery,\n} from 'redux-saga/effects';\n\nimport {\n  requestModel\n} from '../api';\nimport {\n  setModel,\n  setNotification\n} from '../actions';\n\nfunction* handleRequestModel(action) {\n  try {\n    const tool = action.payload ? 'data-generator' : 'simulation';\n    const model = yield call(() => requestModel(tool));\n    yield put(setModel(model));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchRequestModel() {\n  yield takeEvery('REQUEST_MODEL', handleRequestModel);\n}\n\nexport default watchRequestModel;\n","// watcher saga -> actions -> worker saga\nimport { call, put, takeEvery, select } from \"redux-saga/effects\";\n\nimport { uploadModel } from \"../api\";\nimport { uploadModelOK, setNotification } from \"../actions\";\n\nconst getModel = ({ model }) => model;\n\nfunction* handleSaveModel(action) {\n  try {\n    const tool = action.payload ? 'data-generator' : 'simulation';\n    let model = yield select(getModel);\n    if (model) {\n      const data = yield call(() => uploadModel(tool, model));\n      yield put(uploadModelOK(data.data));\n      yield put(setNotification({type: 'success', message: `Model ${model.name} has been updated!`}));\n    } else {\n      throw Error(\"Undefined model\");\n    }\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchSaveModel() {\n  yield takeEvery(\"UPLOAD_MODEL\", handleSaveModel);\n}\n\nexport default watchSaveModel;\n","// watcher saga -> actions -> worker saga\nimport { call, put, takeEvery, select } from \"redux-saga/effects\";\n\nimport {\n  requestStartDeploy,\n  requestStopDeploy,\n  requestDeployStatus\n} from \"../api\";\nimport {\n  deployStartOK,\n  deployStopOK,\n  setNotification,\n  setDeployStatus\n} from \"../actions\";\n\nconst getModel = ({ model }) => model;\n\nfunction* handleRequestStartDeploy(action) {\n  try {\n    const tool = action.payload ? 'data-generator' : 'simulation';\n    const model = yield select(getModel);\n    const status = yield call(() => requestStartDeploy(tool, model));\n    yield put(deployStartOK());\n    yield put(setDeployStatus(status));\n    yield put(\n      setNotification({\n        type: \"success\",\n        message: `${tool.toUpperCase()} has been started!`\n      })\n    );\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({ type: \"error\", message: error }));\n  }\n}\n\nfunction* handleRequestStopDeploy(action) {\n  try {\n    const tool = action.payload ? 'data-generator' : 'simulation';\n    yield call(() => requestStopDeploy(tool));\n    yield put(deployStopOK());\n    yield put(setDeployStatus(null));\n    yield put(\n      setNotification({\n        type: \"success\",\n        message: `${tool.toUpperCase()} has been stopped!`\n      })\n    );\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({ type: \"error\", message: error }));\n  }\n}\n\nfunction* handleRequestDeployStatus(action) {\n  try {\n    const tool = action.payload ? 'data-generator' : 'simulation';\n    const status = yield call(() => requestDeployStatus(tool));\n    // dispatch data\n    yield put(setDeployStatus(status));\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({ type: \"error\", message: error }));\n  }\n}\n\nfunction* watchDeploy() {\n  yield takeEvery(\"SEND_DEPLOY_START\", handleRequestStartDeploy);\n  yield takeEvery(\"SEND_DEPLOY_STOP\", handleRequestStopDeploy);\n  yield takeEvery(\"REQUEST_DEPLOY_STATUS\", handleRequestDeployStatus);\n}\n\nexport default watchDeploy;\n","// watcher saga -> actions -> worker saga\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { requestLogs, requestLogFiles, requestDeleteLogFile } from \"../api\";\nimport { requestLogsOK, setNotification, requestLogFilesOK } from \"../actions\";\n\nfunction* handleRequestLogFiles(action) {\n  try {\n    const isDG = action.payload;\n    const tool = isDG ? 'data-generator':'simulation';\n    const logFiles = yield call(() => requestLogFiles(tool));\n    yield put(requestLogFilesOK(logFiles));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({ type: \"error\", message: error }));\n  }\n}\n\nfunction* handleRequestLogs(action) {\n  try {\n    const {isDG, logFile} = action.payload;\n    const tool = isDG ? 'data-generator' : 'simulation';\n    const logs = yield call(() => requestLogs(tool, logFile));\n    yield put(requestLogsOK(logs));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* handleRequestDeleteLogFile(action) {\n  try {\n    const {isDG, logFile} = action.payload;\n    const tool = isDG ? 'data-generator' : 'simulation';\n    yield call(() => requestDeleteLogFile(tool, logFile));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchRequestLogs() {\n  yield takeEvery('REQUEST_LOGS', handleRequestLogs);\n  yield takeEvery(\"REQUEST_LOGFILES\", handleRequestLogFiles);\n  yield takeEvery(\"REQUEST_DELETE_LOG_FILE\", handleRequestDeleteLogFile);\n}\n\nexport default watchRequestLogs;\n","// watcher saga -> actions -> worker saga\nimport { call, put, takeEvery } from \"redux-saga/effects\";\n\nimport { requestStats } from \"../api\";\nimport { requestStatsOK, setNotification } from \"../actions\";\n\nfunction* handleRequestStats(action) {\n  try {\n    const {isDG} = action.payload;\n    const tool = isDG ? 'data-generator' : 'simulation';\n    const stats = yield call(() => requestStats(tool));\n    yield put(requestStatsOK(stats));\n    // dispatch data\n  } catch (error) {\n    // dispatch error\n    yield put(setNotification({type: 'error', message: error}));\n  }\n}\n\nfunction* watchRequestStats() {\n  yield takeEvery('REQUEST_STATS', handleRequestStats);\n}\n\nexport default watchRequestStats;\n","import { all } from \"redux-saga/effects\";\n\nimport requestModelSaga from \"./requestModelSaga\";\nimport uploadModelSaga from \"./uploadModelSaga\";\nimport deploySaga from \"./deploySaga\";\nimport requestLogsSaga from './requestLogsSaga';\nimport requestStats from \"./requestStatsSaga\";\n\nfunction* rootSaga() {\n  yield all([\n    requestModelSaga(),\n    uploadModelSaga(),\n    deploySaga(),\n    requestLogsSaga(),\n    requestStats(),\n  ]);\n}\n\nexport default rootSaga;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport rootReducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    rootReducer,\n    compose(\n      applyMiddleware(sagaMiddleware)\n      ,\n      window.__REDUX_DEVTOOLS_EXTENSION__ ?\n        window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\n    ),\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default configStore;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Layout, Menu, Row, Col, Typography } from \"antd\";\nimport {\n  CaretRightOutlined,\n  GatewayOutlined,\n  ProfileOutlined,\n  DeploymentUnitOutlined,\n  StopOutlined,\n  ImportOutlined,\n  ClearOutlined,\n  SyncOutlined,\n  ExportOutlined,\n} from \"@ant-design/icons\";\n\nimport {\n  setModel,\n  resetModel,\n  sendDeployStart,\n  sendDeployStop,\n  setNotification,\n  requestLogFiles,\n} from \"../../actions\";\nimport \"./styles.css\";\nimport { isDataGenerator } from \"../../utils\";\n\nconst { SubMenu } = Menu;\nconst { Header } = Layout;\nconst { Text } = Typography;\n\nclass TSHeader extends Component {\n  onUpload(files) {\n    const fileReader = new FileReader();\n    fileReader.onloadend = () => {\n      try {\n        const newModel = JSON.parse(fileReader.result);\n        this.props.setNewModel(newModel);\n      } catch (error) {\n        this.props.setNotification({ type: \"error\", message: error });\n      }\n    };\n    fileReader.readAsText(files[0]);\n  }\n\n  exportModel(model) {\n    if (model) {\n      const fileData = JSON.stringify(model);\n      const blob = new Blob([fileData], { type: \"text/json\" });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.download = `${model.name.replace(/ /g, \"\")}.json`;\n      link.href = url;\n      link.click();\n    }\n  }\n\n  render() {\n    const {\n      resetEditor,\n      startDeploy,\n      stopDeploy,\n      deployStatus,\n      model,\n    } = this.props;\n    const isDG = isDataGenerator();\n    const logo =\n      isDG\n        ? \"/img/logo-data-generator.png\"\n        : \"/img/logo-simulation.png\";\n    return (\n      <Header>\n        <Row>\n          <Col span={4}>\n            <a href=\"/\">\n              <img\n                src={logo}\n                className=\"logo\"\n                alt=\"Logo\"\n                style={{ maxWidth: \"250px\", objectFit: \"contain\" }}\n              />\n            </a>\n          </Col>\n          <Col span={14} push={6}>\n            <Menu theme=\"dark\" mode=\"horizontal\" style={{ lineHeight: \"64px\" }}>\n              <SubMenu\n                title={\n                  <a\n                    className=\"submenu-title-wrapper\"\n                    href={isDG ? \"/data-generator\" : \"/\"}\n                  >\n                    <GatewayOutlined />\n                    Model\n                  </a>\n                }\n              >\n                <Menu.Item\n                  key=\"model:1\"\n                  onClick={() => this.inputFileDOM.click()}\n                >\n                  <ImportOutlined /> Import Model\n                </Menu.Item>\n                <Menu.Item\n                  key=\"model:2\"\n                  onClick={() => this.exportModel(model)}\n                >\n                  <ExportOutlined />\n                  Export Model\n                </Menu.Item>\n                <Menu.Item key=\"model:3\" onClick={resetEditor}>\n                  <ClearOutlined />\n                  Reset Editor\n                </Menu.Item>\n              </SubMenu>\n              <SubMenu\n                title={\n                  <span className=\"submenu-title-wrapper\">\n                    <DeploymentUnitOutlined />\n                    {isDG ? \"Generate\" : \"Simulate\"}\n                    {deployStatus ? <SyncOutlined spin /> : null}\n                  </span>\n                }\n              >\n                <Menu.Item key=\"deploy:1\" onClick={() => startDeploy(isDG)}>\n                  <CaretRightOutlined />\n                  {isDG ? \"Generate\" : \"Simulate\"}\n                </Menu.Item>\n                <Menu.Item key=\"deploy:2\" onClick={() => stopDeploy(isDG)}>\n                  <StopOutlined />\n                  Terminate\n                </Menu.Item>\n              </SubMenu>\n              <Menu.Item key=\"3\">\n                <a href={isDG ? \"/data-generator/logs\" : \"/logs\"} rel=\"noopener noreferrer\" target=\"_blank\">\n                  <ProfileOutlined />\n                  Logs\n                </a>\n              </Menu.Item>\n              <Menu.Item key=\"4\">\n                <a href={isDG ? \"/\" : \"/data-generator\"} rel=\"noopener noreferrer\" target=\"_blank\">\n                  <ExportOutlined />\n                  <Text style={{ color: \"#ffff00fc\" }}>\n                    {isDG ? \"Simulation\" : \"Data Generator\"}\n                  </Text>\n                </a>\n              </Menu.Item>\n            </Menu>\n          </Col>\n        </Row>\n\n        <input\n          type=\"file\"\n          onChange={(event) => this.onUpload(event.target.files)}\n          ref={(input) => {\n            this.inputFileDOM = input;\n          }}\n          style={{ display: \"none\" }}\n          accept=\".json\"\n          multiple={false}\n        />\n      </Header>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ requesting, model, deployStatus }) => ({\n  requesting,\n  model,\n  deployStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setNotification: ({ type, message }) =>\n    dispatch(setNotification({ type, message })),\n  setNewModel: (newModel) => {\n    dispatch(setModel(newModel));\n  },\n  resetEditor: () => {\n    dispatch(resetModel());\n  },\n  startDeploy: (isDG) => dispatch(sendDeployStart(isDG)),\n  stopDeploy: (isDG) => dispatch(sendDeployStop(isDG)),\n  viewLogs: () => {\n    dispatch(requestLogFiles());\n  }\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(TSHeader);\n","import TSHeader from './TSHeader';\n\nexport default TSHeader;\n","import React from \"react\";\nimport { Layout } from 'antd';\nimport VERSION from \"../../VERSION\";\n\nconst { Footer } = Layout;\nconst TSFooter = () => (\n  <Footer style={{ textAlign: \"center\" }}>\n    ENACT ©{new Date().getFullYear()} Created by{\" \"}\n    <a href=\"https://www.montimage.com\">Montimage</a>. Version {VERSION}\n  </Footer>\n);\n\nexport default TSFooter;\n","import TSFooter from './TSFooter';\n\nexport default TSFooter;","import TSModal from './TSModal';\n\nexport default TSModal;","import React from \"react\";\nimport { Modal } from \"antd\";\nimport \"./style.css\";\n\nconst TSModal = ({ visible, title, footer, onCancel, children }) => (\n  <Modal visible={visible} title={title} footer={footer} onCancel={onCancel}>\n    {children}\n  </Modal>\n);\n\nexport default TSModal;\n","import React from 'react';\nimport { Form, Input } from \"antd\";\n\nconst FormTextItem = ({label, defaultValue, onChange, placeholder}) =>(\n  <Form.Item label={label}>\n    {defaultValue ? (\n      <Input\n        defaultValue={defaultValue}\n        onChange={v => onChange(v.target.value)}\n      />\n    ):(\n      <Input\n        onChange={v => onChange(v.target.value)}\n        placeholder={placeholder}\n      />\n    )}\n  </Form.Item>\n);\n\nexport default FormTextItem;","import React from 'react';\nimport { Form, Select } from \"antd\";\n\nconst FormSelectItem = ({label, defaultValue, onChange, options}) => (\n  <Form.Item label={label}>\n    <Select\n      defaultValue={defaultValue ? defaultValue : (options ? options[0] : null) }\n      onChange={v => onChange( v)}\n    >\n      {options.map(tid => (\n        <Select.Option value={tid} key={tid}>{tid}</Select.Option>\n      ))}\n    </Select>\n  </Form.Item>\n)\n\nexport default FormSelectItem;","import React from 'react';\nimport { Form, InputNumber } from \"antd\";\n\nconst FormNumberItem = ({label, defaultValue, min, max, onChange, placeholder}) =>(\n  <Form.Item label={label}>\n    {defaultValue ? (\n      <InputNumber\n        min={min}\n        max={max}\n        defaultValue={defaultValue}\n        onChange={v => onChange(v)}\n        placeholder={placeholder}\n      />\n    ):(\n      <InputNumber\n        min={min}\n        max={max}\n        onChange={v => onChange(v)}\n        placeholder={placeholder}\n      />\n    )}\n  </Form.Item>\n);\n\nexport default FormNumberItem;","import React from \"react\";\nimport { Form, DatePicker } from \"antd\";\nimport moment from 'moment';\n\nconst { RangePicker } = DatePicker;\n\nconst FormTimeRangeItem = ({ label, onChange, defaultValue }) => {\n  let startTime = moment();\n  let endTime = moment();\n  if (defaultValue && defaultValue.length === 2) {\n    startTime = moment(defaultValue[0]);\n    endTime = moment(defaultValue[1]);\n  }\n  return (\n    <Form.Item label={label}>\n    <RangePicker\n      defaultValue={[startTime, endTime]}\n      showTime={{ format: \"HH:mm\" }}\n      format=\"YYYY-MM-DD HH:mm\"\n      onChange={(value, dateString) =>\n        onChange([\n          new Date(dateString[0]).getTime(),\n          new Date(dateString[1]).getTime()\n        ])\n      }\n    />\n  </Form.Item>\n  )\n};\n\nexport default FormTimeRangeItem;\n","import React from 'react';\nimport { Form, Switch } from \"antd\";\n\nconst FormSwitchItem = ({label, checked, onChange, checkedChildren, unCheckedChildren}) =>(\n  <Form.Item label={label}>\n    <Switch\n      onChange={v => onChange(v)}\n      checkedChildren={checkedChildren}\n      unCheckedChildren={unCheckedChildren}\n      checked={checked}\n    />\n  </Form.Item>\n);\n\nexport default FormSwitchItem;","import React from \"react\";\nimport { Form, Checkbox } from \"antd\";\n\nconst FormCheckBoxItem = ({ label, defaultValue, onChange, options }) => (\n  <Form.Item label={label}>\n    <Checkbox.Group\n      options={options}\n      defaultValue={defaultValue}\n      onChange={onChange}\n    />\n  </Form.Item>\n);\n\nexport default FormCheckBoxItem;\n","import React from \"react\";\nimport { Form, InputNumber, List, Card } from \"antd\";\n\nconst FormRegularNumberItem = ({ label, items, onChange }) => (\n  <Form.Item label={label}>\n    <List\n      grid={{ gutter: 16, column: items.length }}\n      dataSource={items}\n      renderItem={(item) => (\n        <List.Item>\n          <Card size=\"small\" bordered={false}  title={item.title}>\n            <InputNumber\n              onChange={(v) => onChange(item.dataPath, v)}\n              defaultValue={item.defaultValue ? item.defaultValue : 0}\n              placeholder={item.title}\n            />\n          </Card>\n        </List.Item>\n      )}\n    />\n  </Form.Item>\n);\n\nexport default FormRegularNumberItem;\n","import React from \"react\";\nimport { Form, Typography } from \"antd\";\nconst { Paragraph } = Typography;\n\nconst FormEditableTextItem = ({ label, defaultValue, onChange }) => (\n  <Form.Item label={label}>\n      <Paragraph\n        editable={{\n          onChange: (v) => {\n            onChange(v);\n          },\n        }}\n      >\n        {defaultValue}\n      </Paragraph>\n  </Form.Item>\n);\n\nexport default FormEditableTextItem;\n","import React from \"react\";\n\nimport FormTextItem from '../FormItems/FormTextItem';\nconst MongoDBOptions = ({ defaultValue, dataPath, onDataChange }) => (\n  <React.Fragment>\n    <FormTextItem\n      label=\"User\"\n      defaultValue={defaultValue.user}\n      onChange={v => onDataChange(`${dataPath ? `${dataPath}.` : ''}user`, v)}\n      placeholder=\"Username\"\n    />\n    <FormTextItem\n      label=\"Password\"\n      defaultValue={defaultValue.password}\n      onChange={v => onDataChange(`${dataPath ? `${dataPath}.` : ''}password`, v)}\n      placeholder=\"Password\"\n    />\n    <FormTextItem\n      label=\"Database\"\n      defaultValue={defaultValue.dbname}\n      onChange={v => onDataChange(`${dataPath ? `${dataPath}.` : ''}dbname`, v)}\n      placeholder=\"Database name\"\n    />\n  </React.Fragment>\n);\n\nexport default MongoDBOptions;\n","import React from \"react\";\nimport { Collapse } from \"antd\";\n\nconst { Panel } = Collapse;\n\nconst CollapseForm = ({ title, children, bordered = true, active }) => (\n  <Collapse accordion style={{margin: '10px'}} defaultActiveKey={active ? ['1'] : null} bordered={bordered}>\n    <Panel header={title} key=\"1\">\n      {children}\n    </Panel>\n  </Collapse>\n);\n\nexport default CollapseForm;\n","import CollapseForm from './CollapseForm';\nexport default CollapseForm;","import ConnectionConfig from './ConnectionConfig';\nexport default ConnectionConfig;","import React from \"react\";\n\nimport FormTextItem from \"../FormItems/FormTextItem\";\nimport FormNumberItem from \"../FormItems/FormNumberItem\";\nimport MongoDBOptions from \"./MongoDBOptions\";\nimport CollapseForm from \"../CollapseForm\";\n\nconst ConnectionConfig = ({ defaultValue, dataPath, onDataChange, type }) => (\n  <CollapseForm title=\"Connection Configuration\" bordered={false} active={true}>\n    <FormTextItem\n      label=\"Host\"\n      defaultValue={defaultValue.host}\n      onChange={(v) => onDataChange(`${dataPath ? `${dataPath}.` : \"\"}host`, v)}\n    />\n    <FormNumberItem\n      label=\"Port\"\n      min={1023}\n      max={65535}\n      defaultValue={defaultValue.port}\n      onChange={(v) => onDataChange(`${dataPath ? `${dataPath}.` : \"\"}port`, v)}\n    />\n    {type === \"MONGODB\" && (\n      <React.Fragment>\n        <MongoDBOptions\n          defaultValue={defaultValue}\n          dataPath={dataPath}\n          onDataChange={onDataChange}\n        />\n      </React.Fragment>\n    )}\n    <FormTextItem\n      label=\"Options\"\n      defaultValue={JSON.stringify(defaultValue.options)}\n      onChange={(v) =>\n        onDataChange(`${dataPath ? `${dataPath}.` : \"\"}options`, v)\n      }\n      placeholder=\"Connection options in JSON format\"\n    />\n  </CollapseForm>\n);\n\nexport default ConnectionConfig;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport TSModal from \"../TSModal\";\nimport { addThing, deleteThing, showModal, selectThing } from \"../../actions\";\nimport { Form, Button, Alert } from \"antd\";\n\nimport {\n  FormTextItem,\n  FormSelectItem,\n  FormNumberItem,\n  FormSwitchItem,\n  FormCheckBoxItems\n} from \"../FormItems\";\nimport ConnectionConfig from '../ConnectionConfig';\nimport { updateObjectByPath, deepCloneObject, isDataGenerator } from \"../../utils\";\n\nclass ThingModal extends Component {\n  constructor(props) {\n    super(props);\n    const isDG = isDataGenerator();\n    const initThing = {\n      id: `thing-id-${Date.now()}`,\n      name: `thing-name-${Date.now()}`,\n      protocol: isDG ? \"DATABASE\":\"MQTT\",\n      behaviours: [],\n      timeToDown: 0,\n      connConfig: {\n        host: \"localhost\",\n        port: !isDG ? 1883: 27017 ,\n        options: null,\n      },\n      sensors: [],\n      actuators: [],\n      enable: true,\n    };\n    this.state = {\n      data: props.selectedThing ? deepCloneObject(props.selectedThing) : initThing,\n      error: null,\n      isDG: isDataGenerator()\n    };\n  }\n\n  // handleDelete() {\n  //   let deleted = false;\n  //   const { things, data, deleteThing } = this.props;\n  //   for (let index = 0; index < things.length; index++) {\n  //     const th = things[index];\n  //     if (th.id === data.id) {\n  //       deleteThing(data.id);\n  //       deleted = true;\n  //       break;\n  //     }\n  //   }\n\n  //   if (!deleted) {\n  //     this.setState(`Cannot delete thing ${data.id}: Not found!`);\n  //   }\n  // }\n\n  handleOk() {\n    // Validate data\n    const { addThing, showModal, selectThing } = this.props;\n    const { data } = this.state;\n    const newThing = { ...data };\n    let errorMsg = null;\n    if (newThing.connConfig.options) {\n      try {\n        const optionsValue = JSON.parse(newThing.connConfig.options);\n        updateObjectByPath(newThing, \"connConfig.options\", optionsValue);\n      } catch (error) {\n        errorMsg =\n          \"Invalid option! The communication options must be in JSON format\";\n      }\n    }\n    if (errorMsg) {\n      this.setState({ error: errorMsg });\n    } else {\n      addThing(data);\n      showModal(null);\n      selectThing(null);\n    }\n  }\n\n  handleCancel() {\n    this.props.showModal(null);\n    this.props.selectThing(null);\n  }\n\n  handleDuplicate() {\n    const { addThing, showModal, selectThing } = this.props;\n    const newThingID = `thing-${Date.now()}`;\n    const newData = { ...this.state.data };\n    updateObjectByPath(newData, \"id\", newThingID);\n    updateObjectByPath(newData, \"name\", \"New Thing\");\n    addThing(newData);\n    selectThing(newData);\n    setTimeout(() => {\n      showModal(\"THING-FORM\");\n    }, 500);\n    showModal(null);\n  }\n\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState.data };\n      // console.log(dataPath, value);\n      updateObjectByPath(newData, dataPath, value);\n      return { data: newData, error: null };\n    });\n  }\n\n  render() {\n    // this.onDataChange(\"connConfig.host\",\"localhost\");\n    // this.onDataChange(\"name\",\"NEW_NAME\");\n    const { data, error } = this.state;\n    const { formID } = this.props;\n    let footer = null;\n    if (this.props.selectedThing) {\n      footer = [\n        // <Button key=\"delete\" type=\"danger\" onClick={() => this.handleDelete()}>\n        //   Delete\n        // </Button>,\n        <Button key=\"duplicate\" onClick={() => this.handleDuplicate()}>\n          Duplicate\n        </Button>,\n        <Button key=\"cancel\" onClick={() => this.handleCancel()}>\n          Cancel\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => this.handleOk()}>\n          OK\n        </Button>,\n      ];\n    } else {\n      footer = [\n        <Button key=\"cancel\" onClick={() => this.handleCancel()}>\n          Cancel\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => this.handleOk()}>\n          OK\n        </Button>,\n      ];\n    }\n\n    return (\n      <TSModal\n        title={\"Thing\"}\n        visible={formID === \"THING-FORM\" ? true : false}\n        onCancel={() => this.handleCancel()}\n        footer={footer}\n      >\n        <Form\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 14,\n          }}\n        >\n          <FormTextItem\n            label=\"Id\"\n            defaultValue={data.id}\n            onChange={(v) => this.onDataChange(\"id\", v)}\n          />\n          <FormTextItem\n            label=\"Name\"\n            defaultValue={data.name}\n            onChange={(v) => this.onDataChange(\"name\", v)}\n          />\n          <FormNumberItem\n            label=\"Scale\"\n            min={1}\n            max={1000000}\n            placeholder=\"Number of instances\"\n            defaultValue={data.scale}\n            onChange={(v) => this.onDataChange(\"scale\", v)}\n          />\n          <FormCheckBoxItems\n            label=\"Gateway Behaviours\"\n            defaultValue={data.behaviours ? data.behaviours : []}\n            onChange={(v) => this.onDataChange('behaviours', v)}\n            options={[\n              \"GATEWAY_DOWN\"\n            ]}\n          />\n          {data.behaviours && data.behaviours.indexOf(\"GATEWAY_DOWN\") > -1 && (\n            <FormNumberItem\n              label=\"Time Before Down\"\n              min={1}\n              max={65535}\n              defaultValue={data.timeToDown ? data.timeToDown : 10}\n              onChange={(v) => this.onDataChange('timeToDown', v)}\n            />\n          )}\n          <span>Communication detail</span>\n          <p />\n          {!this.state.isDG ? (\n            <React.Fragment>\n              <FormSelectItem\n                label=\"Protocol\"\n                defaultValue={data.protocol}\n                onChange={(v) => this.onDataChange(\"protocol\", v)}\n                options={[\"MQTT\", \"STOMP\"]}\n              />\n              <ConnectionConfig\n                defaultValue={data.connConfig}\n                dataPath={\"connConfig\"}\n                onDataChange={(dataPath, value) =>\n                  this.onDataChange(dataPath, value)\n                }\n                type={data.protocol}\n              />\n            </React.Fragment>\n          ) : (\n            <ConnectionConfig\n              defaultValue={data.connConfig}\n              dataPath={\"connConfig\"}\n              onDataChange={(dataPath, value) =>\n                this.onDataChange(dataPath, value)\n              }\n              type=\"MONGODB\"\n            />\n          )}\n          <FormSwitchItem\n            label=\"Enable\"\n            onChange={(v) => this.onDataChange(`enable`, v)}\n            checked={data.enable ? true : false}\n            checkedChildren={\"On\"}\n            unCheckedChildren={\"Off\"}\n          />\n        </Form>\n        {error && <Alert message={error} type=\"error\" />}\n      </TSModal>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ editingForm, model }) => ({\n  formID: editingForm.formID,\n  selectedThing: editingForm.selectedThing,\n  things: model.things,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (modalID) => dispatch(showModal(modalID)),\n  deleteThing: (thingID) => dispatch(deleteThing(thingID)),\n  addThing: (thingData) => dispatch(addThing(thingData)),\n  selectThing: (thing) => dispatch(selectThing(thing)),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(ThingModal);\n","import ThingModal from './ThingModal';\nimport './style.css';\nexport default ThingModal;","import React from 'react';\nimport {\n  FormTextItem,\n  FormTimeRangeItem,\n} from \"../FormItems\";\n// import DatabaseConfigForm from \"../DatabaseConfigForm\";\nimport ConnectionConfig from \"../ConnectionConfig\";\n\nconst DataReplayerForm = ({dataPath, dataSource, onDataChange}) => (\n  <React.Fragment>\n    <ConnectionConfig\n      defaultValue={dataSource.connConfig}\n      dataPath={`${dataPath}.connConfig`}\n      onDataChange={(dPath, v) => onDataChange(dPath, v)}\n      type=\"MONGODB\"\n    />\n    <FormTextItem\n      label=\"sensor-id\"\n      defaultValue={dataSource.devId}\n      onChange={(v) => onDataChange(`${dataPath}.devId`, v)}\n    />\n    <FormTimeRangeItem\n      label=\"Time Range\"\n      defaultValue={[dataSource.startTime ? dataSource.startTime : Date.now(), dataSource.endTime ? dataSource.endTime : Date.now()]}\n      onChange={(v) => {\n        onDataChange(`${dataPath}.startTime`, v[0]);\n        onDataChange(`${dataPath}.endTime`, v[1]);\n      }}\n    />\n  </React.Fragment>\n);\n\nexport default DataReplayerForm;\n","import React from \"react\";\nimport { FormTextItem, FormCheckBoxItems } from \"../../FormItems\";\nimport \"./DataSourceForm.css\";\nimport { Button } from \"antd\";\nimport CollapseForm from \"../../CollapseForm\";\n\nconst defaultBehaviours = [\n  \"AB_FIX_VALUE\",\n  \"AB_INVALID_VALUE\",\n  \"NORMAL_BEHAVIOUR\",\n];\n\nconst DataSourceForm = ({\n  dataPath,\n  defaultValue,\n  onChange,\n  behaviours,\n  children,\n}) => (\n  <CollapseForm title={defaultValue.key}>\n      <FormTextItem\n        label=\"Resource Id\"\n        defaultValue={defaultValue.resourceId}\n        onChange={(v) => onChange(`${dataPath}.resourceId`, v)}\n        placeholder=\"Optional\"\n      />\n      <FormTextItem\n        label=\"key\"\n        defaultValue={defaultValue.key}\n        onChange={(v) => onChange(`${dataPath}.key`, v)}\n        placeholder=\"Require\"\n      />\n      <FormTextItem\n        label=\"unit\"\n        defaultValue={defaultValue.unit}\n        onChange={(v) => onChange(`${dataPath}.unit`, v)}\n        placeholder=\"Unit of the measurement\"\n      />\n      <FormCheckBoxItems\n        label=\"Behaviours\"\n        defaultValue={defaultValue.behaviours}\n        onChange={(v) => onChange(`${dataPath}.behaviours`, v)}\n        options={\n          behaviours ? defaultBehaviours.concat(behaviours) : defaultBehaviours\n        }\n      />\n      {children}\n      <Button type=\"danger\" onClick={() => onChange(dataPath, null)}>\n        Remove\n      </Button>\n  </CollapseForm>\n);\n\nexport default DataSourceForm;\n","import React from \"react\";\nimport DataSourceForm from \"./DataSourceForm\";\nimport { FormNumberItem, FormRegularNumberItem } from \"../../FormItems\";\n\nconst EnergyForm = ({ dataPath, defaultValue, onChange }) => (\n  <React.Fragment>\n    <DataSourceForm\n      dataPath={dataPath}\n      defaultValue={defaultValue}\n      onChange={(dPath, v) => onChange(dPath, v)}\n    >\n      <FormNumberItem\n        label=\"Init Value\"\n        min={1}\n        max={65535}\n        defaultValue={defaultValue.initValue}\n        onChange={(v) => onChange(`${dataPath}.initValue`, v)}\n      />\n      <FormRegularNumberItem\n        label=\"Energy\"\n        items={[\n          {\n            title: \"Consum\",\n            dataPath: `${dataPath}.consumInOnePeriod`,\n            defaultValue: defaultValue.consumInOnePeriod,\n          },\n          {\n            title: \"Low\",\n            dataPath: `${dataPath}.low`,\n            defaultValue: defaultValue.low,\n          },\n          {\n            title: \"Slow Down Rate\",\n            dataPath: `${dataPath}.slowDownRate`,\n            defaultValue: defaultValue.slowDownRate,\n          },\n        ]}\n        onChange={(dPath, v) => onChange(dPath, v)}\n      />\n    </DataSourceForm>\n  </React.Fragment>\n);\n\nexport default EnergyForm;\n","import React from \"react\";\nimport DataSourceForm from \"./DataSourceForm\";\nimport { FormSwitchItem } from \"../../FormItems\";\n\nconst BooleanForm = ({ dataPath, defaultValue, onChange }) => (\n  <React.Fragment>\n    <DataSourceForm\n      dataPath={dataPath}\n      defaultValue={defaultValue}\n      onChange={(dPath, v) => onChange(dPath, v)}\n    >\n      <FormSwitchItem\n        label=\"Init Value\"\n        onChange={(v) => onChange(`${dataPath}.initValue`, v)}\n        checked={defaultValue.initValue ? true : false}\n        checkedChildren={\"True\"}\n        unCheckedChildren={\"False\"}\n      />\n    </DataSourceForm>\n  </React.Fragment>\n);\n\nexport default BooleanForm;\n","import React from \"react\";\nimport DataSourceForm from \"./DataSourceForm\";\nimport { FormSelectItem, FormTextItem } from \"../../FormItems\";\n\nconst EnumForm = ({ dataPath, defaultValue, onChange }) => (\n  <React.Fragment>\n    <DataSourceForm\n      dataPath={dataPath}\n      defaultValue={defaultValue}\n      onChange={(dPath, v) => onChange(dPath, v)}\n    >\n      <FormSelectItem\n        label=\"Init Value\"\n        defaultValue={defaultValue.initValue}\n        onChange={(v) => onChange(`${dataPath}.initValue`, v)}\n        options={defaultValue.values}\n      />\n      <FormTextItem\n        label=\"Value\"\n        defaultValue={JSON.stringify(defaultValue.values)}\n        onChange={(v) => onChange(`${dataPath}.values`, JSON.parse(v))}\n        placeholder=\"List of value should be separated by comma (,)\"\n      />\n    </DataSourceForm>\n  </React.Fragment>\n);\n\nexport default EnumForm;\n","import React from \"react\";\nimport DataSourceForm from \"./DataSourceForm\";\nimport {\n  FormNumberItem,\n  FormRegularNumberItem,\n  FormSwitchItem,\n} from \"../../FormItems\";\nimport CollapseForm from '../../CollapseForm';\nconst defaultValueConstraints = {\n  min: 0,\n  max: 100,\n  regularMin: 0,\n  regularMax: 100,\n  step: 2,\n};\nconst ValueConstraintForm = ({ defaultValue, dataPath, onChange }) => (\n  <CollapseForm title={\"Value Constraints\"}>\n    <FormRegularNumberItem\n      label=\"Range\"\n      items={[\n        {\n          title: \"Min\",\n          dataPath: `${dataPath}.min`,\n          defaultValue: defaultValue.min,\n        },\n        {\n          title: \"Max\",\n          dataPath: `${dataPath}.max`,\n          defaultValue: defaultValue.max,\n        },\n      ]}\n      onChange={(dPath, v) => onChange(dPath, v)}\n    />\n    <FormRegularNumberItem\n      label=\"Regular Range\"\n      items={[\n        {\n          title: \"Regular Min\",\n          dataPath: `${dataPath}.regularMin`,\n          defaultValue: defaultValue.regularMin,\n        },\n        {\n          title: \"Regular Max\",\n          dataPath: `${dataPath}.regularMax`,\n          defaultValue: defaultValue.regularMax,\n        },\n        {\n          title: \"Step\",\n          dataPath: `${dataPath}.step`,\n          defaultValue: defaultValue.step,\n        },\n      ]}\n      onChange={(dPath, v) => onChange(dPath, v)}\n    />\n  </CollapseForm>\n);\n\nconst IntegerFloatForm = ({ dataPath, defaultValue, onChange }) => (\n  <React.Fragment>\n    <DataSourceForm\n      dataPath={dataPath}\n      defaultValue={defaultValue}\n      onChange={(dPath, v) => onChange(dPath, v)}\n      behaviours={[\n        \"AB_VALUE_OUT_OF_RANGE\",\n        \"AB_VALUE_OUT_OF_REGULAR_RANGE\",\n        \"AB_VALUE_CHANGE_OUT_OF_REGULAR_STEP\",\n      ]}\n    >\n      <FormNumberItem\n        label=\"Init Value\"\n        defaultValue={defaultValue.initValue}\n        onChange={(v) => onChange(`${dataPath}.initValue`, v)}\n      />\n      <FormSwitchItem\n        label=\"Value Constraints\"\n        onChange={(v) => onChange(`${dataPath}.withValueConstraints`, v)}\n        checked={defaultValue.withValueConstraints ? true : false}\n        checkedChildren={\"Enable\"}\n        unCheckedChildren={\"Disable\"}\n      />\n      {defaultValue.withValueConstraints ? (\n        defaultValue.valueConstraints ? (\n          <ValueConstraintForm\n            defaultValue={defaultValue.valueConstraints}\n            dataPath={`${dataPath}.valueConstraints`}\n            onChange={(dPath, v) => onChange(dPath, v)}\n          />\n        ) : (\n          <ValueConstraintForm\n            defaultValue={defaultValueConstraints}\n            dataPath={`${dataPath}.valueConstraints`}\n            onChange={(dPath, v) => onChange(dPath, v)}\n          />\n        )\n      ) : (\n        <React.Fragment></React.Fragment>\n      )}\n    </DataSourceForm>\n  </React.Fragment>\n);\n\nexport default IntegerFloatForm;\n","import React, { Fragment } from \"react\";\nimport BooleanForm from \"./BooleanForm\";\nimport EnumForm from \"./EnumForm\";\nimport IntegerFloatForm from \"./IntegerFloatForm\";\n\nconst MultipleDataSources = ({ dataPath, sources, onChange }) => (\n  <Fragment>\n    {sources.map((source, index) => {\n      if (source) {\n        switch (source.type) {\n          case \"DATA_SOURCE_BOOLEAN\":\n            return <BooleanForm\n              key={index}\n              dataPath={`${dataPath}[${index}]`}\n              defaultValue={source}\n              onChange={(dPath, v) => onChange(dPath, v)}\n            />;\n          case \"DATA_SOURCE_ENUM\":\n            return <EnumForm\n              key={index}\n              dataPath={`${dataPath}[${index}]`}\n              defaultValue={source}\n              onChange={(dPath, v) => onChange(dPath, v)}\n            />;\n          case \"DATA_SOURCE_INTEGER\":\n          case \"DATA_SOURCE_FLOAT\":\n            return <IntegerFloatForm\n              key={index}\n              dataPath={`${dataPath}[${index}]`}\n              defaultValue={source}\n              onChange={(dPath, v) => onChange(dPath, v)}\n            />;\n        }\n      }\n    })}\n  </Fragment>\n);\nexport default MultipleDataSources;\n","import React from \"react\";\nimport {\n  FormNumberItem,\n  FormCheckBoxItems,\n  FormSwitchItem,\n} from \"../FormItems\";\n\nimport EnergyForm from \"./DataSourceForms/EnergyForm\";\nimport MultipleDataSources from \"./DataSourceForms/MultipleDataSources\";\nimport { Button, Divider, Dropdown, Menu } from \"antd\";\nimport { UpOutlined } from \"@ant-design/icons\";\n\nconst initEnergy = () => ({\n  type: \"DATA_SOURCE_ENERGY\",\n  key: \"battery\",\n  resourceId: \"battery-01\",\n  initValue: 1500,\n  unit: \"mA\",\n  behaviours: [],\n  low: 1000,\n  slowDownRate: 2,\n  consumInOnePeriod: 200,\n});\n\nconst initBoolean = () => ({\n  type: \"DATA_SOURCE_BOOLEAN\",\n  key: \"your-boolean-data-key\",\n  resourceId: \"boolean-measure-id\",\n  initValue: true,\n  unit: \"\",\n  behaviours: [],\n});\n\nconst initEnum = () => ({\n  type: \"DATA_SOURCE_ENUM\",\n  key: \"your-enum-data-key\",\n  resourceId: \"enum-measure-id\",\n  initValue: \"value1\",\n  unit: \"\",\n  behaviours: [],\n  values: [\"value1\", \"value2\"],\n});\n\nconst initInteger = () => ({\n  type: \"DATA_SOURCE_INTEGER\",\n  key: \"your-integer-data-key\",\n  resourceId: \"integer-measure-id\",\n  initValue: 10,\n  unit: \"\",\n  behaviours: [],\n  valueConstraints: {\n    min: 0,\n    max: 100,\n    regularMin: 20,\n    regularMax: 80,\n    step: 1,\n  },\n});\n\nconst initFloat = () => ({\n  type: \"DATA_SOURCE_FLOAT\",\n  key: \"your-float-data-key\",\n  resourceId: \"float-measure-id\",\n  initValue: 10.0,\n  unit: \"\",\n  behaviours: [],\n  valueConstraints: {\n    min: 0,\n    max: 100,\n    regularMin: 20,\n    regularMax: 80,\n    step: 1,\n  },\n});\n\nconst DataGeneratorForm = ({\n  dataPath,\n  dataSource,\n  onDataChange,\n  showEnergyOption = true,\n}) => (\n  <React.Fragment>\n    <FormNumberItem\n      label=\"Scale\"\n      min={1}\n      max={1000000}\n      placeholder=\"Number of instances\"\n      defaultValue={dataSource.scale}\n      onChange={(v) => onDataChange(`${dataPath}.scale`, v)}\n    />\n    <FormNumberItem\n      label=\"Time Period\"\n      min={1}\n      max={65535}\n      defaultValue={dataSource.timePeriod}\n      onChange={(v) => onDataChange(`${dataPath}.timePeriod`, v)}\n    />\n\n    <FormCheckBoxItems\n      label=\"Sensor Behaviours\"\n      defaultValue={dataSource.sensorBehaviours}\n      onChange={(v) => onDataChange(`${dataPath}.sensorBehaviours`, v)}\n      options={[\n        \"AB_LOW_ENERGY\",\n        \"AB_OUT_OF_ENERGY\",\n        \"AB_NODE_FAILED\",\n        \"AB_DOS_ATTACK\",\n        \"AB_SLOW_DOS_ATTACK\",\n        \"NORMAL_BEHAVIOUR\",\n      ]}\n    />\n    {dataSource.sensorBehaviours.indexOf(\"AB_DOS_ATTACK\") > -1 && (\n      <FormNumberItem\n        label=\"DOS attack speedup rate\"\n        min={1}\n        max={100}\n        defaultValue={dataSource.dosAttackSpeedUpRate}\n        onChange={(v) => onDataChange(`${dataPath}.dosAttackSpeedUpRate`, v)}\n      />\n    )}\n    {dataSource.sensorBehaviours.indexOf(\"AB_NODE_FAILED\") > -1 && (\n      <FormNumberItem\n        label=\"Time Before Failed\"\n        min={1}\n        max={65535}\n        defaultValue={dataSource.timeBeforeFailed}\n        onChange={(v) => onDataChange(`${dataPath}.timeBeforeFailed`, v)}\n      />\n    )}\n    <FormSwitchItem\n      label=\"IP Smart Object Format\"\n      onChange={(v) => onDataChange(`${dataPath}.isIPSOFormat`, v)}\n      checked={dataSource.isIPSOFormat ? true : false}\n      checkedChildren={\"Enable\"}\n      unCheckedChildren={\"Disable\"}\n    />\n    <Divider>\n      <h3>Measurements</h3>\n    </Divider>\n    {showEnergyOption && (\n      <React.Fragment>\n        <FormSwitchItem\n          label=\"Energy Measurement\"\n          onChange={(v) => onDataChange(`${dataPath}.withEnergy`, v)}\n          checked={dataSource.withEnergy ? true : false}\n          checkedChildren={\"Enable\"}\n          unCheckedChildren={\"Disable\"}\n        />\n        {dataSource.withEnergy && (\n          <EnergyForm\n            dataPath={`${dataPath}.energy`}\n            defaultValue={dataSource.energy ? dataSource.energy : initEnergy()}\n            onChange={(dPath, v) => onDataChange(dPath, v)}\n          />\n        )}\n      </React.Fragment>\n    )}\n    <MultipleDataSources\n      dataPath={`${dataPath}.sources`}\n      sources={dataSource.sources ? dataSource.sources : []}\n      onChange={(dPath, v) => onDataChange(dPath, v)}\n    />\n    <Dropdown\n      overlay={\n        <Menu>\n          <Menu.Item\n            key=\"1\"\n            onClick={() => {\n              const index = dataSource.sources.length;\n              const dPath = `${dataPath}.sources[${index}]`;\n              onDataChange(dPath, initBoolean());\n            }}\n          >\n            Boolean Data Type\n          </Menu.Item>\n          <Menu.Item\n            key=\"2\"\n            onClick={() => {\n              const index = dataSource.sources.length;\n              const dPath = `${dataPath}.sources[${index}]`;\n              onDataChange(dPath, initEnum());\n            }}\n          >\n            Enum Data Type\n          </Menu.Item>\n          <Menu.Item\n            key=\"3\"\n            onClick={() => {\n              const index = dataSource.sources.length;\n              const dPath = `${dataPath}.sources[${index}]`;\n              onDataChange(dPath, initInteger());\n            }}\n          >\n            Integer Data Type\n          </Menu.Item>\n          <Menu.Item\n            key=\"4\"\n            onClick={() => {\n              const index = dataSource.sources.length;\n              const dPath = `${dataPath}.sources[${index}]`;\n              onDataChange(dPath, initFloat());\n            }}\n          >\n            Float Data Type\n          </Menu.Item>\n        </Menu>\n      }\n      placement=\"topLeft\"\n    >\n      <Button type=\"primary\" style={{ margin: \"20px\" }}>\n        Add New Measure <UpOutlined />\n      </Button>\n    </Dropdown>\n  </React.Fragment>\n);\n\nexport default DataGeneratorForm;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport TSModal from \"../TSModal\";\nimport {\n  addSimulationSensor,\n  addSimulationActuator,\n  showModal,\n  selectActuator,\n  selectSensor,\n} from \"../../actions\";\nimport { Form, Button, Alert } from \"antd\";\nimport { updateObjectByPath, deepCloneObject, isDataGenerator } from \"../../utils\";\nimport { FormTextItem, FormSelectItem, FormSwitchItem, FormEditableTextItem } from \"../FormItems\";\n// import DatabaseConfigForm from \"../DatabaseConfigForm\";\nimport DataReplayerForm from \"./DataReplayerForm\";\nimport DataGeneratorForm from \"./DataGeneratorForm\";\n\nconst replayDataSource = () => ({\n  connConfig: {\n    host: \"localhost\",\n    port: 27017,\n    username: null,\n    password: null,\n    options: null,\n  },\n  devId: null,\n  dbname: null,\n  startTime: Date.now(),\n  endTime: Date.now(),\n});\n\nconst generateDataSource = () => ({\n  timePeriod: 5,\n  scale: 1,\n  dosAttackSpeedUpRate: 5,\n  timeBeforeFailed: 20,\n  sensorBehaviours: [],\n  withEnergy: false,\n  isIPSOFormat: false,\n  energy: null,\n  sources: [],\n});\n\nconst initSensor = () => ({\n  id: `id-${Date.now()}`,\n  objectId: null,\n  name: `name-${Date.now()}`,\n  enable: true,\n  isFromDatabase: false,\n  topic: null,\n  userData: null,\n  dataSource: generateDataSource(),\n});\n\nclass SensorModal extends Component {\n  constructor(props) {\n    super(props);\n\n    const { model, selectedSensor, selectedActuator, formID } = props;\n    const thingIDs = [null];\n    let thingID = null;\n    let selectedData =\n      formID === \"SENSOR-FORM\"\n        ? selectedSensor\n        : formID === \"ACTUATOR-FORM\"\n        ? selectedActuator\n        : null;\n    if (model.things) {\n      const { things } = model;\n      for (let index = 0; index < things.length; index++) {\n        thingIDs.push(things[index].id);\n        if (selectedData !== null && thingID === null) {\n          const {sensors, actuators} = things[index];\n          if (formID === \"SENSOR-FORM\" && sensors) {\n            for(let sid = 0; sid < sensors.length; sid++) {\n              if (sensors[sid].id === selectedData.id) {\n                thingID = things[index].id;\n                break;\n              }\n            }\n          } else if (formID === \"ACTUATOR-FORM\" && actuators) {\n            for(let aid = 0; aid < actuators.length; aid++) {\n              if (actuators[aid].id === selectedData.id) {\n                thingID = things[index].id;\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    let replayDS = deepCloneObject(replayDataSource());\n    let generateDS = deepCloneObject(generateDataSource());\n    let data = initSensor();\n    // console.log(data);\n    if (selectedData) {\n      data = deepCloneObject(selectedData);\n      if (data.isFromDatabase) {\n        replayDS = data.dataSource;\n      } else {\n        generateDS = data.dataSource;\n      }\n    }\n    this.state = {\n      data,\n      thingID: thingIDs[1],\n      thingIDs,\n      replayDS,\n      generateDS,\n      error: null,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { model, selectedSensor, selectedActuator, formID } = newProps;\n\n    const thingIDs = [null];\n    let thingID = null;\n    let selectedData =\n      formID === \"SENSOR-FORM\"\n        ? selectedSensor\n        : formID === \"ACTUATOR-FORM\"\n        ? selectedActuator\n        : null;\n    if (model.things) {\n      const { things } = model;\n      for (let index = 0; index < things.length; index++) {\n        thingIDs.push(things[index].id);\n        if (selectedData !== null && thingID === null) {\n          const {sensors, actuators} = things[index];\n          if (formID === \"SENSOR-FORM\" && sensors) {\n            for(let sid = 0; sid < sensors.length; sid++) {\n              if (sensors[sid].id === selectedData.id) {\n                thingID = things[index].id;\n                break;\n              }\n            }\n          } else if (formID === \"ACTUATOR-FORM\" && actuators) {\n            for(let aid = 0; aid < actuators.length; aid++) {\n              if (actuators[aid].id === selectedData.id) {\n                thingID = things[index].id;\n                break;\n              }\n            }\n          }\n        }\n      }\n    }\n    let replayDS = deepCloneObject(replayDataSource());\n    let generateDS = deepCloneObject(generateDataSource());\n    let data = initSensor();\n    if (selectedData) {\n      data = deepCloneObject(selectedData);\n      if (data.isFromDatabase) {\n        replayDS = data.dataSource;\n      } else {\n        generateDS = data.dataSource;\n      }\n    }\n\n    this.setState({\n      data,\n      thingID: thingID ? thingID : thingIDs[1],\n      thingIDs,\n      replayDS,\n      generateDS,\n      error: null,\n      isDG: false,\n    });\n  }\n\n  componentDidMount() {\n    this.setState({isDG: isDataGenerator()});\n  }\n\n  onThingChange(tID) {\n    this.setState({ thingID: tID });\n  }\n\n  onChangeDataSource(isReplay) {\n    if (isReplay) {\n      this.setState((prevState) => {\n        const newData = { ...prevState.data };\n        updateObjectByPath(newData, \"dataSource\", prevState.replayDS);\n        updateObjectByPath(newData, \"isFromDatabase\", true);\n        return { data: newData, error: null, generateDS: prevState.generateDS };\n      });\n    } else {\n      this.setState((prevState) => {\n        const newData = { ...prevState.data };\n        updateObjectByPath(newData, \"dataSource\", prevState.generateDS);\n        updateObjectByPath(newData, \"isFromDatabase\", false);\n        return { data: newData, error: null, replayDS: prevState.replayDS };\n      });\n    }\n  }\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState.data };\n      // console.log(dataPath, value);\n      updateObjectByPath(newData, dataPath, value);\n      return { data: newData, error: null };\n    });\n  }\n\n  handleOk() {\n    const { thingID, data } = this.state;\n    const {\n      formID,\n      addSimulationSensor,\n      addSimulationActuator,\n      showModal,\n    } = this.props;\n    if (formID === \"SENSOR-FORM\") {\n      // Add new sensor\n        addSimulationSensor(thingID, data);\n        showModal(null);\n        this.props.selectSensor(null);\n    } else if (formID === \"ACTUATOR-FORM\") {\n      // Add new actuator\n        // add actuator to a data-generator model\n        addSimulationActuator(thingID, data);\n        showModal(null);\n        this.props.selectActuator(null);\n    } else {\n      console.log(`[ERROR] Invalid form: ${formID}`);\n      this.setState({ error: `[ERROR] Invalid form: ${formID}` });\n    }\n  }\n\n  handleCancel() {\n    this.props.showModal(null);\n    this.props.selectSensor(null);\n    this.props.selectActuator(null);\n  }\n\n  handleDuplicate() {\n    const { thingID, isDG } = this.state;\n    const {\n      formID,\n      addSimulationSensor,\n      addSimulationActuator,\n      showModal,\n      selectSensor,\n      selectActuator,\n    } = this.props;\n\n    if (formID === \"SENSOR-FORM\") {\n      const newThingID = `sensor-${Date.now()}`;\n      const newData = {\n        ...this.state.data,\n        id: newThingID,\n        name: \"New Sensor\",\n      };\n      // Add new sensor\n        // Add sensor to a simulation model\n        addSimulationSensor(thingID, newData);\n        selectSensor(newData);\n        setTimeout(() => {\n          showModal(\"SENSOR-FORM\");\n        }, 1000);\n        showModal(null);\n    } else if (formID === \"ACTUATOR-FORM\") {\n      // Add new actuator\n      const newThingID = `act-${Date.now()}`;\n      const newData = {\n        ...this.state.data,\n        id: newThingID,\n        name: \"New Actuator\",\n      };\n      if (isDG) {\n        // add actuator to a data-generator model\n        addSimulationActuator(newData);\n        setTimeout(() => {\n          showModal(\"ACTUATOR-FORM\");\n        }, 1000);\n        selectActuator(newData);\n        showModal(null);\n      } else {\n        console.log(\n          `[ERROR] Undefined tool or invalid form: ${isDG}, ${formID}`\n        );\n        this.setState({\n          error: `[ERROR] Undefined tool or invalid form: ${isDG}, ${formID}`,\n        });\n      }\n    } else {\n      console.log(`[ERROR] Invalid form: ${formID}`);\n      this.setState({ error: `[ERROR] Invalid form: ${formID}` });\n    }\n  }\n\n  render() {\n    const { data, error, thingID, thingIDs, isDG } = this.state;\n    const { formID, selectedActuator, selectedSensor } = this.props;\n    if (!isDG && formID === \"ACTUATOR-FORM\") return null;\n    let footer = null;\n    if (\n      (selectedSensor && formID === \"SENSOR-FORM\") ||\n      (selectedActuator && formID === \"ACTUATOR-FORM\")\n    ) {\n      footer = [\n        <Button key=\"duplicate\" onClick={() => this.handleDuplicate()}>\n          Duplicate\n        </Button>,\n        <Button key=\"cancel\" onClick={() => this.handleCancel()}>\n          Cancel\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => this.handleOk()}>\n          OK\n        </Button>,\n      ];\n    } else {\n      footer = [\n        <Button key=\"cancel\" onClick={() => this.handleCancel()}>\n          Cancel\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => this.handleOk()}>\n          OK\n        </Button>,\n      ];\n    }\n    const isSensor = formID === \"SENSOR-FORM\" ? true : false;\n    const topic = data.topic\n      ? data.topic\n      : `things/${thingID}/sensors${data.objectId ? `/${data.objectId}` : \"\"}/${\n          data.id\n        }`;\n    return (\n      <TSModal\n        title={`${isSensor ? \"Sensor\" : \"Actuator\"}`}\n        visible={\n          isSensor || (isDG && formID === \"ACTUATOR-FORM\")\n        }\n        onCancel={() => this.handleCancel()}\n        footer={footer}\n      >\n        <Form\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 14,\n          }}\n        >\n          <FormSelectItem\n            label=\"Thing\"\n            defaultValue={thingID}\n            onChange={(v) => this.onThingChange(v)}\n            options={thingIDs}\n          />\n          <FormTextItem\n            label=\"Instance Id\"\n            defaultValue={data.id}\n            onChange={(v) => this.onDataChange(\"id\", v)}\n            placeholder=\"Identify of the device\"\n          />\n          <FormTextItem\n            label=\"Object Id\"\n            defaultValue={data.objectId}\n            onChange={(v) => this.onDataChange(\"objectId\", v)}\n            placeholder=\"Identify of the type of device (IPSO Standard)\"\n          />\n          <FormTextItem\n            label=\"Name\"\n            defaultValue={data.name}\n            onChange={(v) => this.onDataChange(\"name\", v)}\n          />\n          {!isDG &&\n            <FormEditableTextItem\n              label=\"Topic\"\n              defaultValue={topic}\n              onChange={(v) => this.onDataChange(\"topic\", v)}\n            />\n          }\n\n          <FormTextItem\n            label=\"User Data\"\n            defaultValue={JSON.stringify(data.userData)}\n            onChange={(v) => this.onDataChange(\"userData\", v)}\n            placeholder=\"User data in JSON format\"\n          />\n          <FormSwitchItem\n            label=\"Enable\"\n            onChange={(v) => this.onDataChange(`enable`, v)}\n            checked={data.enable ? true : false}\n            checkedChildren={\"On\"}\n            unCheckedChildren={\"Off\"}\n          />\n          <FormSelectItem\n            label=\"Data Source\"\n            defaultValue={data.isFromDatabase ? \"Replay\" : \"Generate\"}\n            onChange={(v) => {\n              this.onChangeDataSource(v === \"Replay\" ? true : false);\n            }}\n            options={[\"Replay\", \"Generate\"]}\n          />\n          {data.isFromDatabase ? (\n            <DataReplayerForm\n              dataPath={\"dataSource\"}\n              dataSource={data.dataSource}\n              onDataChange={(dataPath, value) =>\n                this.onDataChange(dataPath, value)\n              }\n            />\n          ) : (\n            <DataGeneratorForm\n              dataPath={\"dataSource\"}\n              dataSource={data.dataSource}\n              onDataChange={(dataPath, value) =>\n                this.onDataChange(dataPath, value)\n              }\n              showEnergyOption={\n                !isDG && formID === \"SENSOR-FORM\"\n              }\n            />\n          )}\n        </Form>\n        {error && <Alert message={error} type=\"error\" />}\n      </TSModal>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ editingForm, model }) => ({\n  formID: editingForm.formID,\n  selectedSensor: editingForm.selectedSensor,\n  selectedActuator: editingForm.selectedActuator,\n  model,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (modalID) => dispatch(showModal(modalID)),\n  addSimulationSensor: (thingID, data) =>\n    dispatch(addSimulationSensor({ thingID, sensor: data })),\n  addSimulationActuator: (thingID, data) =>\n    dispatch(addSimulationActuator({ thingID, actuator: data })),\n  selectActuator: (act) => dispatch(selectActuator(act)),\n  selectSensor: (sensor) => dispatch(selectSensor(sensor)),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(SensorModal);\n","import SensorModal from './SensorModal';\nimport './style.css';\nexport default SensorModal;","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport TSModal from \"../TSModal\";\nimport {\n  addSimulationActuator,\n  showModal,\n  selectActuator,\n} from \"../../actions\";\nimport { Form, Button, Alert } from \"antd\";\nimport {\n  updateObjectByPath,\n  deepCloneObject,\n  isDataGenerator,\n} from \"../../utils\";\nimport {\n  FormTextItem,\n  FormSelectItem,\n  FormNumberItem,\n  FormSwitchItem,\n  FormEditableTextItem,\n} from \"../FormItems\";\n\nconst initActuator = () => ({\n  id: `act-id-${Date.now()}`,\n  objectId: null,\n  name: `act-name-${Date.now()}`,\n  topic: null,\n  enable: true,\n});\n\nclass ActuatorModal extends Component {\n  constructor(props) {\n    super(props);\n\n    const { model, selectedActuator } = props;\n    const thingIDs = [null];\n    let thingID = null;\n    if (model.things) {\n      const { things } = model;\n      for (let index = 0; index < things.length; index++) {\n        thingIDs.push(things[index].id);\n        if (selectedActuator !== null && thingID === null) {\n          const { actuators } = things[index];\n          for (let aid = 0; aid < actuators.length; aid++) {\n            if (actuators[aid].id === selectedActuator.id) {\n              thingID = things[index].id;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    this.state = {\n      data: selectedActuator\n        ? deepCloneObject(selectedActuator)\n        : initActuator(),\n      thingID: thingID ? thingID : thingIDs[0],\n      thingIDs,\n      error: null,\n    };\n  }\n\n  componentWillReceiveProps(newProps) {\n    const { model, selectedActuator } = newProps;\n    const thingIDs = [null];\n    let thingID = null;\n    if (model.things) {\n      const { things } = model;\n      for (let index = 0; index < things.length; index++) {\n        thingIDs.push(things[index].id);\n        if (selectedActuator !== null && thingID === null) {\n          const { actuators } = things[index];\n          for (let aid = 0; aid < actuators.length; aid++) {\n            if (actuators[aid].id === selectedActuator.id) {\n              thingID = things[index].id;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    this.setState({\n      data: selectedActuator\n        ? deepCloneObject(selectedActuator)\n        : initActuator(),\n      thingID: thingID ? thingID : thingIDs[0],\n      thingIDs,\n      error: null,\n    });\n  }\n\n  onThingChange(tID) {\n    this.setState({ thingID: tID });\n  }\n\n  onDataChange(dataPath, value) {\n    this.setState((prevState) => {\n      const newData = { ...prevState.data };\n      updateObjectByPath(newData, dataPath, value);\n      return { data: newData, error: null };\n    });\n  }\n\n  handleOk() {\n    const { thingID, data } = this.state;\n    const { addSimulationActuator, showModal } = this.props;\n    addSimulationActuator(thingID, data);\n    showModal(null);\n    this.props.selectActuator(null);\n  }\n\n  handleCancel() {\n    this.props.showModal(null);\n    this.props.selectActuator(null);\n  }\n\n  handleDuplicate() {\n    const { thingID } = this.state;\n    const { addSimulationActuator, showModal, selectActuator } = this.props;\n    const newActuatorID = `act-${Date.now()}`;\n    const newData = {\n      ...this.state.data,\n      id: newActuatorID,\n      objectId: this.state.objectId,\n      name: \"New Actuator\",\n    };\n    addSimulationActuator(thingID, newData);\n    showModal(null);\n    setTimeout(() => {\n      selectActuator(newData);\n      showModal(\"ACTUATOR-FORM\");\n    }, 300);\n  }\n\n  render() {\n    const { data, error, thingID, thingIDs } = this.state;\n    const { formID } = this.props;\n    let footer = null;\n\n    if (this.props.selectedActuator) {\n      footer = [\n        <Button key=\"duplicate\" onClick={() => this.handleDuplicate()}>\n          Duplicate\n        </Button>,\n        <Button key=\"cancel\" onClick={() => this.handleCancel()}>\n          Cancel\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => this.handleOk()}>\n          OK\n        </Button>,\n      ];\n    } else {\n      footer = [\n        <Button key=\"cancel\" onClick={() => this.handleCancel()}>\n          Cancel\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => this.handleOk()}>\n          OK\n        </Button>,\n      ];\n    }\n\n    const topic = data.topic\n      ? data.topic\n      : `things/${thingID}/actuators${\n          data.objectId ? `/${data.objectId}` : \"\"\n        }/${data.id}/#`;\n    const isDG = isDataGenerator();\n    return (\n      <TSModal\n        title={\"Actuator\"}\n        visible={formID === \"ACTUATOR-FORM\" && !isDG}\n        onCancel={() => this.handleCancel()}\n        footer={footer}\n      >\n        <Form\n          labelCol={{\n            span: 4,\n          }}\n          wrapperCol={{\n            span: 14,\n          }}\n        >\n          <FormSelectItem\n            label=\"Thing\"\n            defaultValue={thingID}\n            onChange={(v) => this.onThingChange(v)}\n            options={thingIDs}\n          />\n          <FormTextItem\n            label=\"Instance Id\"\n            defaultValue={data.id}\n            onChange={(v) => this.onDataChange(\"id\", v)}\n          />\n          <FormTextItem\n            label=\"Object Id\"\n            defaultValue={data.objectId}\n            onChange={(v) => this.onDataChange(\"objectId\", v)}\n            placeholder=\"Identify of device type (IP Smart Object Format)\"\n          />\n          <FormTextItem\n            label=\"Name\"\n            defaultValue={data.name}\n            onChange={(v) => this.onDataChange(\"name\", v)}\n          />\n          <FormNumberItem\n            label=\"Scale\"\n            min={1}\n            max={1000000}\n            placeholder=\"Number of instances\"\n            defaultValue={data.scale}\n            onChange={(v) => this.onDataChange(\"scale\", v)}\n          />\n          <FormEditableTextItem\n            label=\"Topic\"\n            defaultValue={topic}\n            onChange={(v) => this.onDataChange(\"topic\", v)}\n          />\n          <FormSwitchItem\n            label=\"Enable\"\n            onChange={(v) => this.onDataChange(`enable`, v)}\n            checked={data.enable ? true : false}\n            checkedChildren={\"On\"}\n            unCheckedChildren={\"Off\"}\n          />\n        </Form>\n        {error && <Alert message={error} type=\"error\" />}\n      </TSModal>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ editingForm, model }) => ({\n  formID: editingForm.formID,\n  selectedActuator: editingForm.selectedActuator,\n  model,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  showModal: (modalID) => dispatch(showModal(modalID)),\n  selectActuator: (act) => dispatch(selectActuator(act)),\n  addSimulationActuator: (thingID, data) =>\n    dispatch(addSimulationActuator({ thingID, actuator: data })),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(ActuatorModal);\n","import ActuatorModal from './ActuatorModal';\nimport './style.css';\nexport default ActuatorModal;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport JSONEditor from 'jsoneditor/dist/jsoneditor-minimalist';\nimport 'jsoneditor/dist/jsoneditor.css';\n\n/**\n * @typedef {{\n * tree: string,\n * view: string,\n * form: string,\n * code: string,\n * text: string,\n * allValues: Array<string>\n * }} TJsonEditorModes\n */\nconst modes = {\n    tree: 'tree',\n    view: 'view',\n    form: 'form',\n    code: 'code',\n    text: 'text'\n};\n\nconst values = Object.values(modes);\n\nmodes.allValues = values;\n\n/**\n * @type {object}\n * @property {object} [value]\n * @property {string} [mode='tree'] - Set the editor mode.\n * @property {string} [name=undefined] - Initial field name for the root node\n * @property {object} [schema] - Validate the JSON object against a JSON schema.\n * @property {object} [schemaRefs] - Schemas that are referenced using\n * the $ref property\n * @property {Function} [onChange] - Set a callback function\n * triggered when the contents of the JSONEditor change.\n * Called without parameters. Will only be triggered on changes made by the user.\n * Return new json.\n * @property {Function} [onError] - Set a callback function triggered when an error occurs.\n * Invoked with the error as first argument.\n * The callback is only invoked for errors triggered by a users action,\n * like switching from code mode to tree mode or clicking\n * the Format button whilst the editor doesn't contain valid JSON.\n * @property {Function} [onModeChange] - Set a callback function\n * triggered right after the mode is changed by the user.\n * @property {object} [ace] - Provide a version of the Ace editor.\n * Only applicable when mode is code\n * @property {object} [ajv] - Provide a instance of ajv,\n * the library used for JSON schema validation.\n * @property {string} [theme] - Set the Ace editor theme,\n * uses included 'ace/theme/jsoneditor' by default.\n * @property {boolean} [history=false] - Enables history,\n * adds a button Undo and Redo to the menu of the JSONEditor. Only applicable when\n * mode is 'tree' or 'form'\n * @property {boolean} [navigationBar=true] - Adds navigation bar to the menu\n * the navigation bar visualize the current position on the\n * tree structure as well as allows breadcrumbs navigation.\n * @property {boolean} [statusBar=true] - Adds status bar to the buttom of the editor\n * the status bar shows the cursor position and a count of the selected characters.\n * Only applicable when mode is 'code' or 'text'.\n * @property {boolean} [search=true] - Enables a search box in\n * the upper right corner of the JSONEditor.\n * @property {Array<string>} [allowedModes] - Create a box in the editor menu where\n * the user can switch between the specified modes.\n * @property {(string|PropTypes.elementType)} [tag='div'] - Html element, or react element to render\n * @property {object} [htmlElementProps] - html element custom props\n * @property {Function} [innerRef] - callback to get html element reference\n */\nexport default class Editor extends Component {\n    constructor(props) {\n        super(props);\n\n        this.htmlElementRef = null;\n        this.jsonEditor = null;\n\n        this.handleChange = this.handleChange.bind(this);\n        this.setRef = this.setRef.bind(this);\n        this.collapseAll = this.collapseAll.bind(this);\n        this.expandAll = this.expandAll.bind(this);\n        this.focus = this.focus.bind(this);\n    }\n\n    componentDidMount() {\n        const {\n            allowedModes,\n            innerRef,\n            htmlElementProps,\n            tag,\n            onChange,\n            ...rest\n        } = this.props;\n\n        this.createEditor({\n            ...rest,\n            modes: allowedModes\n        });\n    }\n\n    // eslint-disable-next-line react/sort-comp\n    componentDidUpdate({\n        allowedModes,\n        schema,\n        name,\n        theme,\n        schemaRefs,\n        innerRef,\n        htmlElementProps,\n        tag,\n        onChange,\n        ...rest\n    }) {\n        if (this.jsonEditor) {\n            if (theme !== this.props.theme) {\n                this.createEditor({\n                    ...rest,\n                    theme,\n                    modes: allowedModes\n                });\n            } else {\n                if (schema !== this.props.schema\n                    || schemaRefs !== this.props.schemaRefs\n                ) {\n                    this.jsonEditor.setSchema(schema, schemaRefs);\n                }\n\n                if (name !== this.jsonEditor.getName()) {\n                    this.jsonEditor.setName(name);\n                }\n            }\n        }\n    }\n\n    shouldComponentUpdate({ htmlElementProps }) {\n        return htmlElementProps !== this.props.htmlElementProps;\n    }\n\n    componentWillUnmount() {\n        if (this.jsonEditor) {\n            this.jsonEditor.destroy();\n            this.jsonEditor = null;\n        }\n    }\n\n    componentWillReceiveProps(newProps) {\n        if (this.props.value !== newProps.value) {\n            this.jsonEditor.set(newProps.value);\n        }\n    }\n\n    setRef(element) {\n        this.htmlElementRef = element;\n        if (this.props.innerRef) {\n            this.props.innerRef(element);\n        }\n    }\n\n    createEditor({ value, ...rest }) {\n        if (this.jsonEditor) {\n            this.jsonEditor.destroy();\n        }\n\n        this.jsonEditor = new JSONEditor(this.htmlElementRef, {\n            onChange: this.handleChange,\n            ...rest\n        });\n\n        this.jsonEditor.set(value);\n    }\n\n    handleChange() {\n        if (this.props.onChange) {\n            try {\n                const text = this.jsonEditor.getText();\n                if (text === '') {\n                    this.props.onChange(null);\n                }\n\n                const currentJson = this.jsonEditor.get();\n                if (this.props.value !== currentJson) {\n                    this.props.onChange(currentJson);\n                }\n            } catch (err) {\n                this.err = err;\n            }\n        }\n    }\n\n    collapseAll() {\n        if (this.jsonEditor) {\n            this.jsonEditor.collapseAll();\n        }\n    }\n\n    expandAll() {\n        if (this.jsonEditor) {\n            this.jsonEditor.expandAll();\n        }\n    }\n\n    focus() {\n        if (this.jsonEditor) {\n            this.jsonEditor.focus();\n        }\n    }\n\n    render() {\n        const {\n            htmlElementProps,\n            tag\n        } = this.props;\n\n        return React.createElement(\n            tag,\n            {\n                ...htmlElementProps,\n                ref: this.setRef\n            }\n        );\n    }\n}\n\nEditor.propTypes = {\n    //  jsoneditor props\n    value: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n    mode: PropTypes.oneOf(values),\n    name: PropTypes.string,\n    schema: PropTypes.object,\n    schemaRefs: PropTypes.object,\n\n    onChange: PropTypes.func,\n    onError: PropTypes.func,\n    onModeChange: PropTypes.func,\n\n    ace: PropTypes.object,\n    ajv: PropTypes.object,\n    theme: PropTypes.string,\n    history: PropTypes.bool,\n    navigationBar: PropTypes.bool,\n    statusBar: PropTypes.bool,\n    search: PropTypes.bool,\n    allowedModes: PropTypes.arrayOf(PropTypes.oneOf(values)),\n\n    //  custom props\n    tag: PropTypes.oneOfType([PropTypes.string, PropTypes.elementType]),\n    htmlElementProps: PropTypes.object,\n    innerRef: PropTypes.func,\n};\n\nEditor.defaultProps = {\n    tag: 'div',\n    mode: modes.tree,\n    history: false,\n    search: true,\n    navigationBar: true,\n    statusBar: true,\n};\n\n/**\n * @type TJsonEditorModes\n */\nEditor.modes = modes;\n","import JSONView from './JSONView';\n\nexport default JSONView;\n","import React from 'react';\nimport JsonEditor from './Editor';\n\nimport ace from 'brace';\nimport 'brace/mode/json';\nimport 'brace/theme/github';\n\nimport './style.css';\n\nconst JSONView = ({value, onChange}) => (\n  <JsonEditor\n    value={value}\n    onChange={onChange}\n    allowedModes={[\"tree\", \"code\"]}\n    ace={ace}\n    theme=\"ace/theme/github\"\n  />\n)\n\nexport default JSONView;","import React from \"react\";\n\nimport { Graph } from \"react-d3-graph\";\nimport {\n  BulbOutlined,\n  BugOutlined,\n  PartitionOutlined,\n} from \"@ant-design/icons\";\nimport { Popover, Avatar } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { requestStats } from \"../../actions\";\nimport { isDataGenerator } from \"../../utils\";\nconst StatsView = ({ id, stats, children }) => (\n  <div>\n    <p>Id: {id}</p>\n    {stats.status && <p>Status: {stats.status}</p>}\n    <p>Started Time: {new Date(stats.startedTime).toLocaleTimeString()}</p>\n    <p>Last Activity: {new Date(stats.lastActivity).toLocaleTimeString()}</p>\n    {children}\n  </div>\n);\n\nconst popOverContent = (data) => {\n  const { id, stats, devType } = data;\n  if (!stats) {\n    return (\n      <div>\n        <p>Id: {id}</p>\n      </div>\n    );\n  }\n  switch (devType) {\n    case \"GATEWAY\":\n      return (\n        <StatsView id={id} stats={stats}>\n          <p>Sent: {stats.numberOfSentData}</p>\n          <p>Received: {stats.numberOfReceivedData}</p>\n        </StatsView>\n      );\n    case \"SENSOR\":\n      return (\n        <StatsView id={id} stats={stats}>\n          <p>Sent: {stats.numberOfSentData}</p>\n        </StatsView>\n      );\n    case \"ACTUATOR\":\n      return (\n        <StatsView id={id} stats={stats}>\n          <p>Received: {stats.numberOfReceivedData}</p>\n        </StatsView>\n      );\n    default:\n      return <p>{id}</p>;\n  }\n};\n\n// the graph configuration, you only need to pass down properties\n// that you want to override, otherwise default ones will be used\nconst CustomNode = ({ data }) => {\n  let icon = null;\n  // console.log(data.devType);\n  switch (data.devType) {\n    case \"GATEWAY\":\n      icon = <PartitionOutlined />;\n      break;\n    case \"SENSOR\":\n      icon = <BugOutlined />;\n      break;\n    case \"ACTUATOR\":\n      icon = <BulbOutlined />;\n      break;\n    default:\n      icon = <PartitionOutlined />;\n      break;\n  }\n\n  return (\n    <Popover\n      content={popOverContent(data)}\n      title={`${data.devType}: ${data.name}`}\n    >\n      <Avatar style={{ verticalAlign: \"middle\" }} icon={icon} />\n    </Popover>\n  );\n};\n\nconst graphConfig = {\n  automaticRearrangeAfterDropNode: false,\n  collapsible: false,\n  height: 400,\n  highlightDegree: 1,\n  highlightOpacity: 0.2,\n  linkHighlightBehavior: true,\n  maxZoom: 3,\n  minZoom: 0.5,\n  nodeHighlightBehavior: true,\n  panAndZoom: false,\n  staticGraph: false,\n  width: 800,\n  directed: true,\n  node: {\n    fontColor: \"black\",\n    fontSize: 10,\n    fontWeight: \"normal\",\n    highlightColor: \"red\",\n    highlightFontSize: 10,\n    highlightFontWeight: \"bold\",\n    highlightStrokeColor: \"SAME\",\n    highlightStrokeWidth: 1.5,\n    mouseCursor: \"pointer\",\n    opacity: 1,\n    renderLabel: false,\n    size: 400,\n    strokeColor: \"none\",\n    strokeWidth: 1.5,\n    svg: \"\",\n    symbolType: \"circle\",\n    viewGenerator: (node) => <CustomNode data={node} />,\n  },\n  link: {\n    color: \"#d3d3d3\",\n    opacity: 1,\n    semanticStrokeWidth: false,\n    strokeWidth: 4,\n    fontSize: 10,\n    highlightColor: \"blue\",\n    renderLabel: true,\n    labelProperty: (link) => link.numberOfData\n  },\n};\n\nconst getElementById = (id, array) => {\n  if (!array || array.length === 0) return null;\n  for (let index = 0; index < array.length; index++) {\n    const element = array[index];\n    if (element.id === id) return element;\n  }\n  return null;\n};\n\nconst buildGraphData = (model, stats) => {\n  const { things } = model;\n  if (!things || things.length === 0) return null;\n  const nodes = [];\n  const links = [];\n  for (let index = 0; index < things.length; index++) {\n    const thing = things[index];\n    const thingStats = getElementById(thing.id, stats);\n    nodes.push({\n      id: thing.id,\n      name: thing.name,\n      devType: \"GATEWAY\",\n      stats: thingStats,\n    });\n    const { sensors, actuators } = thing;\n    if (sensors) {\n      for (let sIndex = 0; sIndex < sensors.length; sIndex++) {\n        const sensor = sensors[sIndex];\n        const nodeID = `${thing.id}-${sensor.id}`;\n        const sensorStats = thingStats\n        ? getElementById(sensor.id, thingStats.sensorStats)\n        : null;\n        const numberOfData = sensorStats ? sensorStats.numberOfSentData : 0;\n        nodes.push({\n          id: nodeID,\n          name: sensor.name,\n          devType: \"SENSOR\",\n          stats:sensorStats ,\n        });\n        links.push({ source: nodeID, target: thing.id, numberOfData });\n      }\n    }\n    if (actuators) {\n      for (let sIndex = 0; sIndex < actuators.length; sIndex++) {\n        const actuator = actuators[sIndex];\n        const nodeID = `${thing.id}-${actuator.id}`;\n        const actuatorStats = thingStats\n        ? getElementById(actuator.id, thingStats.actuatorStats)\n        : null;\n        const numberOfData = actuatorStats ? actuatorStats.numberOfReceivedData : 0;\n        if (actuatorStats) {\n          actuatorStats['status'] = thingStats.status;\n          actuatorStats['startedTime'] = thingStats.startedTime;\n        }\n        nodes.push({\n          id: nodeID,\n          name: actuator.name,\n          devType: \"ACTUATOR\",\n          stats: actuatorStats,\n        });\n        links.push({\n          source: thing.id,\n          target: nodeID,\n          numberOfData,\n        });\n      }\n    }\n  }\n  return { nodes, links };\n};\n\nclass GraphView extends React.Component {\n  constructor(props) {\n    super(props);\n    const { model, stats } = this.props;\n    const data = buildGraphData(model, stats);\n    this.state = {\n      data,\n    };\n  }\n  componentDidMount() {\n    const isDG = isDataGenerator();\n    this.props.requestStats(isDG);\n    console.log(this.timerId);\n    if (this.props.deployStatus) {\n      this.timerId = setInterval(() => {\n        this.props.requestStats(isDG);\n      }, 5000);\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    const isDG = isDataGenerator();\n    console.log(this.timerId);\n    const { model, stats } = newProps;\n    const data = buildGraphData(model, stats);\n    this.setState({ data });\n    if (newProps.deployStatus) {\n      if (!this.timerId) {\n        newProps.requestStats(isDG);\n        this.timerId = setInterval(() => {\n          newProps.requestStats(isDG);\n        }, 5000);\n      }\n    } else if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { data } = this.state;\n    if (!data) return <p>Empty model</p>;\n    console.log(data);\n    return (\n      <Graph\n        id=\"graph-id\" // id is mandatory, if no id is defined rd3g will throw an error\n        data={data}\n        config={graphConfig}\n      />\n    );\n  }\n}\n\nconst mapPropsToStates = ({ model, stats, deployStatus }) => ({\n  model,\n  stats,\n  deployStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestStats: (isDG) => dispatch(requestStats(isDG)),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(GraphView);\n","import GraphView from './GraphView';\nexport default GraphView;","import TSListView from './TSListView';\nexport default TSListView;","import React from \"react\";\nimport { List, Avatar, Skeleton, Button, Switch } from \"antd\";\n\nconst TSListView = ({\n  list,\n  editHandler,\n  deleteHandler,\n  itemAvatar,\n  changeStatus,\n}) => (\n  <List\n    itemLayout=\"horizontal\"\n    dataSource={list}\n    renderItem={(item) => (\n      <List.Item\n        actions={[\n          <Button\n            key=\"item-edit\"\n            size=\"small\"\n            onClick={() => editHandler(item)}\n          >\n            Edit\n          </Button>,\n          <Button\n            key=\"item-delete\"\n            size=\"small\"\n            onClick={() => deleteHandler(item)}\n            type=\"danger\"\n          >\n            Delete\n          </Button>,\n          <Switch\n            key=\"item-enable\"\n            onChange={() => changeStatus(item)}\n            checkedChildren={\"Enable\"}\n            unCheckedChildren={\"Disable\"}\n            checked={item.enable}\n          />,\n        ]}\n      >\n        <Skeleton avatar title={false} loading={item.loading}>\n          <List.Item.Meta\n            avatar={<Avatar>{itemAvatar}</Avatar>}\n            title={\n              <span onClick={() => editHandler(item)} style={{cursor:'pointer'}}>\n                {item.name ? item.name : item.id}\n              </span>\n            }\n            description={`Id: ${item.id}${\n              item.name ? `- name: ${item.name}` : \"\"\n            }- enable: ${item.enable ? true : false}`}\n          />\n        </Skeleton>\n      </List.Item>\n    )}\n  />\n);\n\nexport default TSListView;\n","import React from \"react\";\nimport { List, Avatar, PageHeader, Button, Switch } from \"antd\";\nimport {\n  BugOutlined,\n  PartitionOutlined,\n  BulbOutlined\n} from \"@ant-design/icons\";\nimport CollapseForm from \"../../CollapseForm\";\nimport TSListView from \"../TSListView\";\n\nconst ThingItem = ({\n  thing,\n  actions: {\n    showModal,\n    selectThing,\n    deleteThing,\n    changeStatusThing,\n    selectSensor,\n    deleteSensor,\n    changeStatusSensor,\n    selectActuator,\n    deleteActuator,\n    changeStatusActuator\n\n  },\n}) => (\n  <CollapseForm title={`Thing ${thing.id}`}>\n    <List.Item\n      actions={[\n        <Button\n          key=\"thing-edit\"\n          size=\"small\"\n          onClick={() => {\n            selectThing(thing);\n            showModal(\"THING-FORM\");\n          }}\n        >\n          Edit\n        </Button>,\n        <Button\n          key=\"thing-delete\"\n          size=\"small\"\n          onClick={() => {\n            deleteThing(thing.id);\n          }}\n          type=\"danger\"\n        >\n          Delete\n        </Button>,\n        <Switch\n          key=\"thing-enable\"\n          onChange={v => {\n            changeStatusThing(thing.id);\n          }}\n          checkedChildren={'Enable'}\n          unCheckedChildren={'Disable'}\n          checked={thing.enable}\n        />,\n      ]}\n    >\n      <List.Item.Meta\n        avatar={\n          <Avatar>\n            <PartitionOutlined />\n          </Avatar>\n        }\n        title={\n          <span\n            style={{cursor:'pointer'}}\n            onClick={() => {\n              selectThing(thing);\n              showModal(\"THING-FORM\");\n            }}\n          >\n            {thing.name ? thing.name : thing.id}\n          </span>\n        }\n        description={`Id: ${thing.id}${\n          thing.name ? `- name: ${thing.name}` : \"\"\n        }- enable: ${thing.enable ? true : false}`}\n      />\n    </List.Item>\n    <PageHeader\n          className=\"site-page-header\"\n          title=\"Connection\"\n          subTitle={`Protocol: ${thing.protocol}`}\n        />\n    <p>Host: <strong>{thing.connConfig.host}</strong></p>\n    <p>Port: <strong>{thing.connConfig.port}</strong></p>\n    {thing.sensors && (\n      <React.Fragment>\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Sensors\"\n          subTitle={`Total: ${thing.sensors.length}`}\n        />\n        <TSListView\n          list={thing.sensors}\n          editHandler={(sensor) => {\n            selectSensor(sensor);\n            showModal(\"SENSOR-FORM\");\n          }}\n          deleteHandler={(sensor) => {\n            deleteSensor(sensor.id, thing.id);\n          }}\n          changeStatus = {(sensor) => {\n            changeStatusSensor(sensor.id, thing.id);\n          }}\n          itemAvatar={<BugOutlined />}\n        />\n      </React.Fragment>\n    )}\n    {thing.actuators && (\n      <React.Fragment>\n        <PageHeader\n          className=\"site-page-header\"\n          title=\"Actuators\"\n          subTitle={`Total: ${thing.actuators.length}`}\n        />\n        <TSListView\n          list={thing.actuators}\n          editHandler={(actuator) => {\n            selectActuator(actuator);\n            showModal(\"ACTUATOR-FORM\");\n          }}\n          deleteHandler={(actuator) => {\n            deleteActuator(actuator.id, thing.id);\n          }}\n          changeStatus = {(actuator) => {\n            changeStatusActuator(actuator.id, thing.id);\n          }}\n          itemAvatar={<BulbOutlined />}\n        />\n      </React.Fragment>\n    )}\n  </CollapseForm>\n);\n\nconst ThingsView = ({\n  things,\n  actions,\n}) => (\n  <List\n    itemLayout=\"horizontal\"\n    dataSource={things}\n    renderItem={(item) => (\n      <ThingItem\n        thing={item}\n        actions={actions}\n      />\n    )}\n  />\n);\n\nexport default ThingsView;\n","import ThingsView from './ThingsView';\nexport default ThingsView;","import React from \"react\";\n\nimport { BulbOutlined, BugOutlined } from \"@ant-design/icons\";\nimport TSListView from \"./TSListView\";\nimport ThingsView from \"./ThingsView\";\nimport \"./style.css\";\nimport CollapseForm from \"../CollapseForm\";\nimport { Typography } from 'antd';\nconst { Paragraph } = Typography;\n\nconst ListView = ({\n  model: { sensors, actuators, things, name },\n  modelType,\n  actions: {\n    showModal,\n    selectThing,\n    deleteThing,\n    changeStatusThing,\n    selectSensor,\n    deleteSensor,\n    changeStatusSensor,\n    selectActuator,\n    deleteActuator,\n    changeStatusActuator,\n    changeModelName,\n  },\n}) => (\n  <div>\n    <CollapseForm title=\"Overview\" active={true}>\n      <Paragraph\n        editable={{\n          onChange: (newName) => changeModelName(newName),\n        }}\n      >\n        {name}\n      </Paragraph>\n      <span>\n        Type: <strong>{modelType}</strong>\n      </span>\n    </CollapseForm>\n    {things && (\n      <CollapseForm title={`Things (${things.length})`} active={true}>\n        <ThingsView\n          things={things}\n          actions={{\n            showModal,\n            selectThing,\n            deleteThing,\n            changeStatusThing,\n            selectSensor,\n            deleteSensor,\n            changeStatusSensor,\n            selectActuator,\n            deleteActuator,\n            changeStatusActuator,\n          }}\n        />\n      </CollapseForm>\n    )}\n    {sensors && (\n      <CollapseForm title={`Free Sensors (${sensors.length})`} active={false}>\n        <TSListView\n          list={sensors}\n          editHandler={(sensor) => {\n            selectSensor(sensor);\n            showModal(\"SENSOR-FORM\");\n          }}\n          deleteHandler={(sensor) => {\n            deleteSensor(sensor.id, null);\n          }}\n          changeStatus={(sensor) => {\n            changeStatusSensor(sensor.id, null);\n          }}\n          itemAvatar={<BugOutlined />}\n        />\n      </CollapseForm>\n    )}\n    {actuators && (\n      <CollapseForm\n        title={`Free Actuators (${actuators.length})`}\n        active={false}\n      >\n        <TSListView\n          list={actuators}\n          editHandler={(actuator) => {\n            selectActuator(actuator);\n            showModal(\"ACTUATOR-FORM\");\n          }}\n          deleteHandler={(actuator) => {\n            deleteActuator(actuator.id, null);\n          }}\n          changeStatus={(actuator) => {\n            changeStatusActuator(actuator.id, null);\n          }}\n          itemAvatar={<BulbOutlined />}\n        />\n      </CollapseForm>\n    )}\n  </div>\n);\nexport default ListView;\n","import ListView from './ListView';\nexport default ListView;","import React from \"react\";\nimport { Layout, Menu } from \"antd\";\n\nimport \"./styles.css\";\n\nconst { Sider } = Layout;\nconst TSSider = ({ defaultKey, items, rightSide, theme }) => (\n  <Sider className=\"side-background-color\" breakpoint=\"lg\" collapsedWidth=\"0\">\n    <Menu\n      mode=\"inline\"\n      theme={theme ? theme : \"light\"}\n      style={\n        rightSide\n          ? { height: \"100%\", borderRight: 0 }\n          : { height: \"100%\", borderLeft: 10 }\n      }\n      defaultSelectedKeys={[`${defaultKey}`]}\n      defaultOpenKeys={[`sub${defaultKey}`]}\n    >\n      {items.map((i) =>\n        i.action ? (\n          <Menu.Item key={i.key} onClick={i.action}>\n            {i.icon}\n            {i.text}\n          </Menu.Item>\n        ) : i.href ? (\n          <Menu.Item key={i.key}>\n            <a href={i.href}>\n              {i.icon}\n              {i.text}\n            </a>\n          </Menu.Item>\n        ) : (\n          <Menu.Item key={i.key}>\n            {i.icon}\n            {i.text}\n          </Menu.Item>\n        )\n      )}\n    </Menu>\n  </Sider>\n);\n\nexport default TSSider;\n","import TSSider from './TSSider';\n\nexport default TSSider;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { showModal } from \"../../actions\";\nimport {\n  PartitionOutlined,\n  BulbOutlined,\n  BugOutlined,\n} from \"@ant-design/icons\";\n\nimport TSSider from \"../TSSider\";\n\nclass LeftSider extends Component {\n  render() {\n    const { showModal } = this.props;\n\n    const menuItems = [\n      {\n        key: 3,\n        text: \"Thing\",\n        action: () => showModal(\"THING-FORM\"),\n        icon: <PartitionOutlined />\n      },\n      {\n        key: 1,\n        text: \"Sensor\",\n        action: () => showModal(\"SENSOR-FORM\"),\n        icon: <BugOutlined />\n      },\n      {\n        key: 2,\n        text: \"Actuator\",\n        action: () => showModal(\"ACTUATOR-FORM\"),\n        icon: <BulbOutlined />\n      }\n      // ,\n      // {\n      //   key: 4,\n      //   text: \"Connection\",\n      //   action: () => showModal(\"CONNECTION-FORM\"),\n      //   icon: <BulbOutlined />\n      // }\n    ];\n\n    return <TSSider rightSide={true} items={menuItems} theme=\"dark\" />;\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  showModal: mID => dispatch(showModal(mID))\n});\n\nexport default connect(null, mapDispatchToProps)(LeftSider);\n","import React, { Component } from \"react\";\n\nimport { getQuery } from \"../../utils\";\nimport TSSider from \"../TSSider\";\nimport {\n  UnorderedListOutlined,\n  ForkOutlined,\n  FilterOutlined,\n} from \"@ant-design/icons\";\nimport \"./style.css\";\n\nclass RightSider extends Component {\n  render() {\n    const menuItems = [\n      {\n        key: 7,\n        text: \"List View\",\n        href: '?view=list',\n        icon: <UnorderedListOutlined />,\n      },\n      {\n        key: 5,\n        text: \"JSON View\",\n        href: '?view=json',\n        icon: <FilterOutlined />,\n      },\n      {\n        key: 6,\n        text: \"Graph View\",\n        href: '?view=graph',\n        icon: <ForkOutlined />,\n      },\n    ];\n    let dKey = 7;\n    const viewType = getQuery(\"view\");\n    if (viewType) {\n      switch (viewType) {\n        case \"list\":\n          dKey = 7;\n          break;\n        case \"json\":\n          dKey = 5;\n          break;\n        case \"graph\":\n          dKey = 6;\n          break;\n        default:\n          break;\n      }\n    }\n    return (\n      <TSSider\n        className=\"right-sider\"\n        rightSide={false}\n        items={menuItems}\n        defaultKey={dKey}\n        theme=\"light\"\n      />\n    );\n  }\n}\nexport default RightSider;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { notification, Spin, Alert, Layout } from \"antd\";\nimport { resetNotification, requestDeployStatus } from \"../actions\";\nimport { isDataGenerator } from \"../utils\";\nimport LeftSider from \"../components/LeftSider\";\nimport RightSider from \"../components/RightSider\";\nimport \"./styles.css\";\n\nconst { Content } = Layout;\n\nclass LayoutPage extends Component {\n  constructor(props) {\n    super(props);\n    const {deployStatus} = props;\n    let statusMessage = null;\n    const isDG = isDataGenerator();\n    if (deployStatus) {\n      statusMessage = `${\n        !isDG ? \"Simulation\" : \"Data Generator\"\n      } is running. Model name ${deployStatus.model}. Started time: ${new Date(\n        deployStatus.startedTime\n      )}`;\n    }\n    this.state = {\n      isDG,\n      isLogPage: window.location.pathname.indexOf(\"/logs\") > -1,\n      statusMessage,\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n    const {deployStatus} = newProps;\n    let statusMessage = null;\n    if (deployStatus) {\n      statusMessage = `${\n        !this.state.isDG ? \"Simulation\" : \"Data Generator\"\n      } is running. Model name ${deployStatus.model}. Started time: ${new Date(\n        deployStatus.startedTime\n      )}`;\n    }\n    this.setState({statusMessage});\n  }\n\n  componentDidMount() {\n    this.props.requestDeployStatus(this.state.isDG);\n    setInterval(() => {\n      this.props.requestDeployStatus(this.state.isDG);\n    }, 3000);\n  }\n\n  render() {\n    const { isLogPage, statusMessage} = this.state;\n    const { requesting, notify , resetNotification} = this.props;\n\n    return (\n      <Layout>\n        {!isLogPage && <LeftSider />}\n\n        {notify &&\n          notification[notify.type]({\n            message: notify.type.toUpperCase(),\n            description:\n              typeof notify.message === \"object\"\n                ? JSON.stringify(notify.message)\n                : notify.message,\n            onClose: () => resetNotification(),\n          })}\n\n        <Layout style={{ padding: \"0 24px 24px\" }}>\n          <Content>\n            {statusMessage && (\n              <Alert\n                message={statusMessage}\n                type=\"info\"\n                style={{ marginBottom: \"10px\", marginTop: \"20px\" }}\n                showIcon\n              />\n            )}\n            {requesting ? <Spin tip=\"Loading...\" /> : this.props.children}\n          </Content>\n        </Layout>\n        {!isLogPage && <RightSider />}\n      </Layout>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ requesting, notify, deployStatus }) => ({\n  notify,\n  requesting,\n  deployStatus,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestDeployStatus: (isDG) => dispatch(requestDeployStatus(isDG)),\n  resetNotification: () => dispatch(resetNotification()),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(LayoutPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"antd\";\n// all the edit forms\nimport ThingModal from \"../components/ThingModal\";\nimport SensorModal from \"../components/SensorModal\";\nimport ActuatorModal from \"../components/ActuatorModal\";\n\nimport {\n  requestModel,\n  setModel,\n  uploadModel,\n  showModal,\n  selectThing,\n  changeModelName,\n  deleteThing,\n  changeStatusThing,\n  selectSensor,\n  deleteSimulationSensor,\n  changeStatusSensor,\n  selectActuator,\n  deleteSimulationActuator,\n  changeStatusActuator,\n} from \"../actions\";\nimport JSONView from \"../components/JSONView\";\nimport GraphView from \"../components/GraphView\";\nimport ListView from \"../components/ListView\";\nimport LayoutPage from \"./LayoutPage\";\n\nimport { isDataGenerator, getQuery } from \"../utils\";\n\n// console.log(ace.acequire('editor'));\nclass ModelPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tempModel: props.model,\n      isDG: false,\n    };\n    this.onModelChange = this.onModelChange.bind(this);\n  }\n\n  componentDidMount() {\n    const isDG = isDataGenerator();\n    this.props.initData(isDG);\n    this.setState({ isDG });\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({\n      tempModel: newProps.model,\n    });\n  }\n\n  onModelChange(newModel) {\n    this.setState({\n      tempModel: newModel,\n    });\n  }\n\n  render() {\n    const { isDG } = this.state;\n    const {\n      model,\n      saveModel,\n      showModal,\n      selectThing,\n      deleteThing,\n      changeStatusThing,\n      selectSensor,\n      deleteSensor,\n      changeStatusSensor,\n      selectActuator,\n      deleteActuator,\n      changeStatusActuator,\n      formID,\n      changeModelName,\n    } = this.props;\n\n    let viewType = getQuery(\"view\");\n    if (!viewType) viewType = \"list\";\n    let view = null;\n    if (viewType === \"json\") {\n      view = <JSONView value={model} onChange={this.onModelChange} />;\n    } else if (viewType === \"graph\") {\n      view = <GraphView />;\n    } else {\n      view = (\n        <ListView\n          model={model}\n          modelType={!isDG ? \"Simulation\" : \"Data Geneartor\"}\n          actions={{\n            showModal,\n            selectThing,\n            deleteThing,\n            changeStatusThing,\n            selectSensor,\n            deleteSensor,\n            changeStatusSensor,\n            selectActuator,\n            deleteActuator,\n            changeStatusActuator,\n            changeModelName,\n          }}\n        />\n      );\n    }\n    return (\n      <LayoutPage>\n        {view}\n        <Button\n          type=\"primary\"\n          onClick={() => saveModel(isDG, this.state.tempModel)}\n          style={{ marginTop: \"10px\" }}\n        >\n          Save\n        </Button>\n        {formID === \"THING-FORM\" && <ThingModal />}\n        {!isDG && formID === \"ACTUATOR-FORM\" && <ActuatorModal />}\n        {(formID === \"SENSOR-FORM\" || (formID === \"ACTUATOR-FORM\" && isDG)) && (\n          <SensorModal />\n        )}\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ model, editingForm }) => ({\n  model,\n  formID: editingForm.formID,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  initData: (isDG) => {\n    dispatch(requestModel(isDG));\n  },\n  saveModel: (isDG, newModel) => {\n    dispatch(setModel(newModel));\n    dispatch(uploadModel(isDG));\n  },\n  showModal: (formID) => dispatch(showModal(formID)),\n  changeModelName: (newName) => dispatch(changeModelName(newName)),\n  selectThing: (thing) => dispatch(selectThing(thing)),\n  deleteThing: (thingID) => dispatch(deleteThing(thingID)),\n  changeStatusThing: (thingID) => dispatch(changeStatusThing(thingID)),\n  selectSensor: (sensor) => dispatch(selectSensor(sensor)),\n  deleteSensor: (sensorID, thingID) =>\n    dispatch(deleteSimulationSensor({ sensorID, thingID })),\n  changeStatusSensor: (sensorID, thingID) =>\n    dispatch(changeStatusSensor({ sensorID, thingID })),\n  selectActuator: (actuator) => dispatch(selectActuator(actuator)),\n  deleteActuator: (actuatorID, thingID) =>\n    dispatch(deleteSimulationActuator({ actuatorID, thingID })),\n  changeStatusActuator: (actuatorID, thingID) =>\n    dispatch(changeStatusActuator({ actuatorID, thingID })),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(ModelPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { List, Skeleton, Avatar, Button, PageHeader } from \"antd\";\nimport { ClockCircleOutlined } from \"@ant-design/icons\";\nimport { getCreatedTimeFromFileName, isDataGenerator } from \"../utils\";\n\nimport { requestLogFiles, requestDeleteLogFile } from \"../actions\";\nimport LayoutPage from \"./LayoutPage\";\n\nclass LogsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logFiles: props.logFiles,\n    };\n  }\n\n  componentDidMount() {\n    this.props.initData(isDataGenerator());\n  }\n\n  componentWillReceiveProps(newProps) {\n    this.setState({ logFiles: newProps.logFiles });\n  }\n\n  render() {\n    const { deleteLogFile } = this.props;\n    const { logFiles } = this.state;\n    const isDG = isDataGenerator();\n    return (\n      <LayoutPage>\n        <PageHeader className=\"site-page-header\" title=\"Log files\" />\n        <List\n          bordered\n          dataSource={logFiles}\n          renderItem={(item) => (\n            <List.Item\n              actions={[\n                <Button\n                  key=\"list-loadmore-edit\"\n                  onClick={() => deleteLogFile(isDG, item)}\n                  type=\"danger\"\n                >\n                  Delete\n                </Button>,\n              ]}\n            >\n              <Skeleton avatar title={false} loading={item.loading}>\n                <List.Item.Meta\n                  avatar={\n                    <Avatar>\n                      <ClockCircleOutlined />\n                    </Avatar>\n                  }\n                  title={\n                    <a href={`${isDG ? \"/data-generator\" : \"\"}/logs/${item}`}>\n                      {item}\n                    </a>\n                  }\n                  description={`Created at: ${getCreatedTimeFromFileName(\n                    item\n                  )}`}\n                />\n              </Skeleton>\n            </List.Item>\n          )}\n        />\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ logs }) => ({\n  logFiles: logs.logFiles,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  deleteLogFile: (isDG, logFile) => {\n    dispatch(requestDeleteLogFile({ isDG, logFile }));\n  },\n  initData: (isDG) => {\n    dispatch(requestLogFiles(isDG));\n  },\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(LogsPage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Typography, PageHeader } from \"antd\";\nimport { getLastURLPath, isDataGenerator } from \"../utils\";\nimport LayoutPage from \"./LayoutPage\";\nimport { requestLogs } from \"../actions\";\n\nconst { Text } = Typography;\n\nconst LogLine = ({ type, time, device, message }) => (\n  <Row>\n    <Col span={4}>\n      <Text type={type}>{time}</Text>\n    </Col>\n    <Col span={5}>\n      <Text type={type}>{device}</Text>\n    </Col>\n    <Col span={15}>\n      <Text type={type}>{message}</Text>\n    </Col>\n  </Row>\n);\n\nclass LogsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      logFile: null,\n      isDG: false,\n    };\n  }\n  componentDidMount() {\n    const logFile = getLastURLPath(window.location.pathname);\n    const isDG = isDataGenerator();\n    this.setState({ logFile: decodeURIComponent(logFile) });\n    this.props.requestLogs(isDG, logFile);\n    setInterval(() => {\n      this.props.requestLogs(isDG, logFile);\n    }, 20000);\n  }\n\n  render() {\n    const { logFile } = this.state;\n    const { logs } = this.props;\n    return (\n      <LayoutPage>\n        <PageHeader className=\"site-page-header\" title={logFile} />\n        <LogLine\n          key={-1}\n          type={\"warning\"}\n          time={\"Time\"}\n          device={\"Device\"}\n          message={\"Message\"}\n        />\n        {!logs ? (\n          <p>Empty</p>\n        ) : (\n          logs.split(\"\\n\").map((log, index) => {\n            const array = log.split(\" \");\n            if (array.length < 4) {\n              console.warn(\"Log is not going to show: \", log);\n              return null;\n            }\n            const type = array[2] === \"info:\" ? \"secondary\" : \"danger\";\n            const time = new Date(array[0]);\n            const timeString = `${time.getHours()}:${time.getMinutes()}:${time.getSeconds()} ${time.getDay()}/${time.getMonth()}/${time.getFullYear()}`;\n            const device = array[3].replace(\"[\", \"\").replace(\"]\", \"\");\n            const message = log.split(array[3])[1];\n            return (\n              <LogLine\n                key={index}\n                type={type}\n                time={timeString}\n                device={device}\n                message={message}\n              />\n            );\n          })\n        )}\n      </LayoutPage>\n    );\n  }\n}\n\nconst mapPropsToStates = ({ logs }) => ({\n  logs: logs.logs,\n  logFile: logs.logFile,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  requestLogs: (isDG, logFile) => dispatch(requestLogs({ isDG, logFile })),\n});\n\nexport default connect(mapPropsToStates, mapDispatchToProps)(LogsPage);\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Layout } from \"antd\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport ErrorBoundary from \"antd/lib/alert/ErrorBoundary\";\nimport TSHeader from \"./components/TSHeader\";\nimport TSFooter from \"./components/TSFooter\";\nimport ModelPage from \"./pages/ModelPage\";\nimport LogsPage from \"./pages/LogsPage\";\nimport LogFilePage from \"./pages/LogFilePage\";\n\nfunction App() {\n  return (\n    <Router>\n      <ErrorBoundary>\n        <Layout className=\"layout\" style={{ height: \"100%\" }}>\n          <TSHeader />\n          <Switch>\n            <Route path=\"/data-generator/logs/:logFile\">\n              <LogFilePage />\n            </Route>\n            <Route path=\"/data-generator/logs\">\n              <LogsPage />\n            </Route>\n            <Route path=\"/data-generator\">\n              <ModelPage />\n            </Route>\n            <Route path=\"/logs/:logFile\">\n              <LogFilePage />\n            </Route>\n            <Route path=\"/logs\">\n              <LogsPage />\n            </Route>\n            <Route path=\"/\">\n              <ModelPage />\n            </Route>\n          </Switch>\n          <TSFooter />\n        </Layout>\n      </ErrorBoundary>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport configStore from \"../../client/src/store\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nconst store = configStore();\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}